_G.SalunaWhite = false

salunalisted = loadstring(game:HttpGet('https://raw.githubusercontent.com/PotatoEiii/List/main/hwidlist'))()
        for _, v1 in pairs(salunalisted) do
gethwid = game:GetService("RbxAnalyticsService"):GetClientId()
            if gethwid == v1 then
_G.SalunaWhite = true
            end
        end

salunauserlisted = loadstring(game:HttpGet('https://raw.githubusercontent.com/PotatoEiii/List/main/userlist'))()
        for _, v2 in pairs(salunauserlisted) do
            if game.Players.LocalPlayer.UserId == v2 then
_G.SalunaWhite = true
            end
        end

if _G.SalunaWhite then
repeat wait() until game:IsLoaded() 
repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") ~= nil

function loadcheck()
    if isfile("SALUNA_OPA.json") then
        g = readfile("SALUNA_OPA.json")
            return g
        else
            writefile("SALUNA_OPA.json",game:GetService("HttpService"):JSONEncode(getgenv().Save))
        return
    end
end

getgenv().Save = {
    ["AutoSave"] = false,
    ["Auto Aura Finding"] = false,
    ["Auto Delete Common Box"] = false,
    ["Auto Delete Uncommon Box"] = false,
    ["Auto Open Common Box"] = false,
    ["Auto Open Uncommon Box"] = false,
    ["Auto Open Rare/Ultra Box"] = false,
    ["Auto Delete Non-Aura Common Fruit"] = false,
    ["Auto Delete Non-Aura Uncommon Fruit"] = false,
    ["Auto Delete Non-Aura Rare Fruit"] = false,
    ["Auto Delete Non-Aura Ultra Rare Fruit"] = false,
    ["Auto Farm Gems"] = false,
    ["Auto Spawn"] = false,
    ["Auto Get Expertise"] = false,
    ["Auto Bring Compass"] = false,
    ["Auto Bring Drink"] = false,
    ["Auto Compass Dupe"] = false,
    ["Auto Stack Token"] = false,
    ["Position X"] = "",
    ["Position Y"] = "",
    ["Position Z"] = "",
    ["Chosen Farm Method"] = "",
    ["Auto Farm OS"] = false,
    ["Auto Stats Farming"] = false,
    ["Auto Shave + Dash Players"] = false
}

function format_large_number_with_spaces(n)
    local str = tostring(n)
    local reversed = str:reverse()
    local formatted = reversed:gsub("(%d%d%d)", "%1 ")
    formatted = formatted:reverse()
    if formatted:sub(1, 1) == " " then
        formatted = formatted:sub(2)
    end
    return formatted
end

function formatToOneDecimal(value)
    local roundedValue = math.floor(value * 10 + 0.5) / 10
    return string.format("%.1f", roundedValue)
end

local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
wait(1)
vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)

if game.CoreGui:FindFirstChild("BBB") then
game.CoreGui:FindFirstChild("BBB"):Destroy()
end

if game.CoreGui:FindFirstChild("SalunaDeVoz") then
game.CoreGui:FindFirstChild("SalunaDeVoz"):Destroy()
end

do  
fishingplace =  game:GetService("Workspace"):FindFirstChild("fishingplace")  
    if fishingplace then 
    fishingplace:Destroy() 
    end 
end

     fishingplace = Instance.new("Part",game.Workspace)
    fishingplace.Name = "fishingplace"
    fishingplace.Size = Vector3.new(2,1,2)
    fishingplace.Position = Vector3.new((math.random(15000, 20000)),208,(math.random(15000, 20000)))
    fishingplace.Anchored = true
    
do  
safezonedestroyspace =  game:GetService("Workspace"):FindFirstChild("SafeZoneOuterSpacePart")  
    if safezonedestroyspace then 
    safezonedestroyspace:Destroy() 
    end 
end

     SafeZoneOuterSpace = Instance.new("Part",game.Workspace)
    SafeZoneOuterSpace.Name = "SafeZoneOuterSpacePart"
    SafeZoneOuterSpace.Size = Vector3.new(200,3,200)
    SafeZoneOuterSpace.Position = Vector3.new((math.random(-100000, -50000)), 10000, (math.random(-100000, -50000)))
    SafeZoneOuterSpace.Anchored = true

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/PotatoEiii/whocares/main/thisdamn/SalunaKavoUI7"))()
local Window = Library.CreateLib("Saluna VIP | OPL: ARNACHY | Version: A2", "Serpent", colors)
local Stats = Window:NewTab("Stats")
local FFarm = Window:NewTab("Farm")
local Gems = Window:NewTab("Gems")
local Dupe = Window:NewTab("Dupe")
local GrabDrop = Window:NewTab("Grab/Drop")
local Backpack = Window:NewTab("Backpack")
local Tele = Window:NewTab("Teleport")
local PlayerTab = Window:NewTab("Players")
local Server = Window:NewTab("Server")
local Stats1 = Stats:NewSection(" -- Statistics -- ")
local FFarm1 = FFarm:NewSection(" -- Must Turn On -- ")
local FFarm3 = FFarm:NewSection(" -- Stats Farming -- ")
local FFarm2 = FFarm:NewSection(" -- One Shot Farming -- ")
local Gems1 = Gems:NewSection(" -- Farm Gems -- ")
local Dupe1 = Dupe:NewSection(" -- Aura Finding -- ")
local Dupe3 = Dupe:NewSection(" -- Compass Dupe -- ")
local Dupe4 = Dupe:NewSection(" -- Stack Token -- ")
local Dupe2 = Dupe:NewSection(" -- Dupe Mode -- ")
local GrabDrop1 = GrabDrop:NewSection(" -- Grab Tools -- ")
local GrabDrop2 = GrabDrop:NewSection(" -- Drop Tools -- ")
local Backpack1 = Backpack:NewSection(" -- Auto Delete Box -- ")
local Backpack2 = Backpack:NewSection(" -- Auto Open Box -- ")
local Backpack3 = Backpack:NewSection(" -- Auto Delete Fruit -- ")
local Player2 = PlayerTab:NewSection(" -- All Players Stuff -- ")
local Tele1 = Tele:NewSection(" -- Teleport -- ")
local Tele2 = Tele:NewSection(" -- Special Teleport -- ")
local Player1 = PlayerTab:NewSection(" -- Player -- ")
local Server1 = Server:NewSection("-- Server --")

local RRGG = Stats1:NewLabel2("Time-Tracking")
local Realtimecheck = Stats1:NewLabel("Real-Time: "..os.date("%A %x %X (%Z)"))
local PlayingTime = Stats1:NewLabel("Play Time: "..workspace.DistributedGameTime)
local PlayerStat1 = Stats1:NewLabel2("Player Stats")
local PlayerStat2 = Stats1:NewLabel("Gems: "..format_large_number_with_spaces(workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.Gems.Value))
local PlayerStat3 = Stats1:NewLabel("Beri: "..format_large_number_with_spaces(workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.Cash.Value))
local PlayerStat4 = Stats1:NewLabel("Bounty: "..format_large_number_with_spaces(workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.Bounty.Value))
local PlayerStat5 = Stats1:NewLabel("Kills: "..format_large_number_with_spaces(workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.Kills.Value))
local PlayerStat6 = Stats1:NewLabel("Compass: "..tostring(game:GetService("Players").LocalPlayer.PlayerGui.Menu.Frame.C.Frame.A.Sam.SamTimer.Text))

FFarm3:NewToggle("Auto Stats Farming" , "Automatically Farm Stats", function(state)
getgenv().Save["Auto Stats Farming"] = state
end)

FFarm1:NewToggle("Auto Spawn" , "Automatic Spawn If Die", function(state)
getgenv().Save["Auto Spawn"] = state
end)

FFarm1:NewToggle("Auto Get Expertise" , "Automatic Get Expertise Quest", function(state)
getgenv().Save["Auto Get Expertise"] = state
end)


local DropF = FFarm2:NewDropdown("Farming Methods", "Choose Method To Farm (One Shot)", {"Light","Quake"}, function(blud)
getgenv().Save["Chosen Farm Method"] = blud
end)

FFarm2:NewToggle("Auto Farm (One Shot)" , "Automatic Farm Kills", function(state)
getgenv().Save["Auto Farm OS"] = state
end)

Dupe1:NewToggle("Auto Aura Finding" , "Require A Lot Of Compass Tokens", function(state)
getgenv().Save["Auto Aura Finding"] = state
end)

Dupe2:NewButton("Dupe Mode", "Not Save Data Progress", function()
game:GetService("Workspace").UserData["User_"..game.Players.LocalPlayer.UserId].UpdateClothing_Extras:FireServer("A","\255",34)
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.Visible = true
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.BackgroundTransparency = 0.5
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.TextScaled = true
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.Active = true
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.Text = "Saluna Notify: Dupe Mode Turned On"
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.TextColor3 = Color3.fromRGB(0, 255, 127)
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.FontFace = Font.fromName("Merriweather")
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.FontFace.Bold = true
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.Visible = true
end)

Dupe2:NewButton("Save Data", "Save The Current Data Progress", function()
game:GetService("Workspace").UserData["User_"..game.Players.LocalPlayer.UserId].UpdateClothing_Extras:FireServer("A","None",34)
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.Visible = true
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.BackgroundTransparency = 0.5
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.TextScaled = true
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.Active = true
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.Text = "Saluna Notify: Data Saved"
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.TextColor3 = Color3.fromRGB(0, 255, 127)
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.FontFace = Font.fromName("Merriweather")
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.FontFace.Bold = true
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.Visible = true
end)

Dupe3:NewToggle("Auto Compass Dupe" , "Require A Lot Of Compass Tokens", function(state)
getgenv().Save["Auto Compass Dupe"] = state
end)

Dupe4:NewButton("Lure Mobs For Stack Token (Smoke)", "Lure Mobs", function()
getgenv().SmokeLure = true
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "MakeSmoke",
    [4] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position * Vector3.new(0,-10,0)
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))

for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
if string.find(v.Name,"Demon") or string.find(v.Name,"Gunslinger") or string.find(v.Name,"Angry") or string.find(v.Name,"Boar") then
pcall(function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0,10,0)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
v.HumanoidRootPart.Anchored = true
wait(0.5)
end)
end
end

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2610.68945, 269.599915, 1086.86829)
wait(1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position * Vector3.new(0,-10,0),
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.09)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position * Vector3.new(0,-10,0),
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position * Vector3.new(0,-10,0),
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position * Vector3.new(0,-10,0),
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.09)
for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
if string.find(v.Name,"Demon") or string.find(v.Name,"Gunslinger") or string.find(v.Name,"Angry") or string.find(v.Name,"Boar") then
if v:FindFirstChild("HumanoidRootPart").Anchored == true then
v:FindFirstChild("HumanoidRootPart").Anchored = false
end
end
end
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position * Vector3.new(0,-10,0),
    [5] = false
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
getgenv().SmokeLure = false
end)

Dupe4:NewToggle("Auto Stack Token" , "Require A Lot Of Compass In Inventory", function(state)
getgenv().Save["Auto Stack Token"] = state
end)

GrabDrop1:NewToggle("Auto Bring Compass" , "Auto Bring Compass", function(state)
getgenv().Save["Auto Bring Compass"] = state
end)

GrabDrop1:NewToggle("Auto Bring Drink" , "Auto Bring Drink", function(state)
getgenv().Save["Auto Bring Drink"] = state
end)


Backpack1:NewToggle("Auto Delete Common Box" , "Delete Common Box", function(state)
getgenv().Save["Auto Delete Common Box"] = state
end)

Backpack1:NewToggle("Auto Delete Uncommon Box" , "Delete Uncommon Box", function(state)
getgenv().Save["Auto Delete Uncommon Box"] = state
end)

Backpack2:NewToggle("Auto Open Common Box" , "Open Common Box", function(state)
getgenv().Save["Auto Open Common Box"] = state
end)

Backpack2:NewToggle("Auto Open Uncommon Box" , "Open Uncommon Box", function(state)
getgenv().Save["Auto Open Uncommon Box"] = state
end)

Backpack2:NewToggle("Auto Open Rare/Ultra Box" , "Open Rare/Ultra Box", function(state)
getgenv().Save["Auto Open Rare/Ultra Box"] = state
end)

Backpack3:NewToggle("Auto Delete Non-Aura Common Fruit" , "Delete Common Fruits Which Have No Aura", function(state)
getgenv().Save["Auto Delete Non-Aura Common Fruit"] = state
end)

Backpack3:NewToggle("Auto Delete Non-Aura Uncommon Fruit" , "Delete Uncommon Fruits Which Have No Aura", function(state)
getgenv().Save["Auto Delete Non-Aura Uncommon Fruit"] = state
end)

Backpack3:NewToggle("Auto Delete Non-Aura Rare Fruit" , "Delete Rare Fruits Which Have No Aura", function(state)
getgenv().Save["Auto Delete Non-Aura Rare Fruit"] = state
end)

Backpack3:NewToggle("Auto Delete Non-Aura Ultra Rare Fruit" , "Delete Ultra Rare Fruits Which Have No Aura", function(state)
getgenv().Save["Auto Delete Non-Aura Ultra Rare Fruit"] = state
end)

Tele1:NewDropdown("Island TP", "TP To Island In The List", {"Sam Island", "Sand/Windmill", "Cave", "Near-Bar Island", "Bar","Boss-5K/Tornado Island","Kaizu/Aura Boss Island","Krizma Island", "Sand Castle", "Purple Island", "Merlin/Boar Island","Flail Island","Snowy Island","Big Snow Mountain","Big Black Mountain","Marine Ford","Forest","Green Rock/Cannon Island","Race/New Island","Pyramid","Mansion","Moon Island","Vokun Island"}, function(zxcrris)
if zxcrris == "Sam Island" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1280.31726, 239.998398, -1326.91028, -0.999996781, 7.21743021e-08, -0.00254111853, 7.21170679e-08, 1, 2.26145023e-08, 0.00254111853, 2.24311716e-08, -0.999996781)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Sand/Windmill" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(85.0743713, 282.310211, -36.9613533, 0.136958227, -1.5720218e-08, 0.990576804, 4.45528325e-09, 1, 1.52537698e-08, -0.990576804, 2.3241713e-09, 0.136958227)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Cave" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1.43468678, 306.999908, -927.490723, -0.0791061521, -1.76420407e-08, 0.996866226, -2.13624607e-09, 1, 1.75279791e-08, -0.996866226, -7.42980621e-10, -0.0791061521)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Near-Bar Island" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(887.123474, 302.998199, 1218.83557, -0.00453962386, 6.63435955e-08, 0.999989688, -9.09009827e-08, 1, -6.67569395e-08, -0.999989688, -9.12030984e-08, -0.00453962386)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Bar" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1520.92224, 303.489471, 2138.15845, 0.996849716, 5.16282661e-09, -0.0793136358, -5.49105694e-09, 1, -3.92028143e-09, 0.0793136358, 4.34344694e-09, 0.996849716)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Boss-5K/Tornado Island" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(4854.58057, 605.394287, -7281.04297, -0.969173074, -2.48229548e-10, 0.24638097, -1.49729756e-10, 1, 4.18520579e-10, -0.24638097, 3.68728326e-10, -0.969173074)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Kaizu/Aura Boss Island" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1575.16821, 215.999954, 9946.87207, 0.980506063, -4.32691003e-08, 0.196488753, 3.53463392e-08, 1, 4.38284715e-08, -0.196488753, -3.60289221e-08, 0.980506063)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Krizma Island" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1074.56641, 376.999908, 1667.55762, 0.999868512, -3.29602017e-08, 0.0162166674, 3.19331654e-08, 1, 6.35909743e-08, -0.0162166674, -6.30647605e-08, 0.999868512)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Sand Castle" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1078.84058, 245.200073, -3333.86084, 0.710731328, 4.62040433e-08, -0.703463554, -3.03972776e-08, 1, 3.49694673e-08, 0.703463554, -3.47051743e-09, 0.710731328)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Purple Island" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-5169.17529, 522.999817, -7776.02295, -0.999938011, 4.8491323e-08, 0.011133004, 4.95431145e-08, 1, 9.41995779e-08, -0.011133004, 9.47453032e-08, -0.999938011)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Merlin/Boar Island" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1699.38147, 217.07135, -275.71048, -0.0825118199, 7.11512556e-08, 0.996590078, 3.90585164e-08, 1, -6.81608867e-08, -0.996590078, 3.33012515e-08, -0.0825118199)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Flail Island" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1133.75415, 230.999908, 3368.14087, -0.0550645292, -1.73162586e-08, 0.998482823, -2.23419292e-08, 1, 1.61104534e-08, -0.998482823, -2.14209184e-08, -0.0550645292)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Snowy Island" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1892.50696, 224.999954, 3303.00659, 0.999911904, -2.22762928e-08, 0.0132755609, 2.16087255e-08, 1, 5.04288202e-08, -0.0132755609, -5.01375084e-08, 0.999911904)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Big Snow Mountain" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(6225.76221, 485.999908, -1601.78601, -0.0377998017, 1.83320459e-09, 0.99928534, -5.03370901e-09, 1, -2.02492489e-09, -0.99928534, -5.10665332e-09, -0.0377998017)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Big Black Mountain" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2013.95776, 487.999908, -720.344543, 0.151551947, -7.72941178e-08, 0.988449275, -2.81923054e-08, 1, 8.25198825e-08, -0.988449275, -4.03727149e-08, 0.151551947)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Marine Ford" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3133.93311, 275.901154, -3643.74341, -0.999911427, -3.90428356e-09, 0.0133108366, -4.18463797e-09, 1, -2.10342552e-08, -0.0133108366, -2.1088093e-08, -0.999911427)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Forest" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-6015.46631, 401.999908, 13.9106245, 0.726529002, 2.63533284e-08, 0.687135816, 4.80932307e-08, 1, -8.92028211e-08, -0.687135816, 9.78550219e-08, 0.726529002)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Green Rock/Cannon Island" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2623.29224, 269.599915, 1090.10852, -0.642234623, -2.10928164e-08, 0.766508102, 4.81428373e-08, 1, 6.7855531e-08, -0.766508102, 8.04810441e-08, -0.642234623)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Race/New Island" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-6370.9834, 258.601776, 3841.90991, 1, 2.19709069e-08, 1.10745526e-13, -2.19709069e-08, 1, 8.39457854e-08, -1.08901156e-13, -8.39457854e-08, 1)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Pyramid" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(118.847107, 309.999908, 4943.37939, 0.99994427, -1.68357115e-08, -0.0105592962, 1.60353579e-08, 1, -7.58807701e-08, 0.0105592962, 7.57072129e-08, 0.99994427)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Mansion" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1835.2124, 269.999908, 861.194275, -0.693691909, -5.51743398e-08, 0.720271826, 2.95930125e-09, 1, 7.94521995e-08, -0.720271826, 5.72468508e-08, -0.693691909)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Moon Island" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(3188.60791, 356.999908, 1627.56262, 0.999993682, 7.89155479e-08, -0.0035616986, -7.86453924e-08, 1, 7.59900161e-08, 0.0035616986, -7.57094227e-08, 0.999993682)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
elseif zxcrris == "Vokun Island" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(4434.4165, 487.999908, 5735.77051, 0.967606544, 4.68326107e-08, -0.252463102, -5.17578975e-08, 1, -1.28679076e-08, 0.252463102, 2.55180304e-08, 0.967606544)
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..zxcrris,
    Duration = 1
})
end
end)

Tele1:NewDropdown("NPC TP", "TP To The NPC In The List", {"Bartender (Sam)", "Bartender (Bar)", "Sam", "Krizma Seller", "Flail Seller", "Sword Seller", "Gun Seller", "Merlin", "Emotes Teacher", "Lucy (Affinity)", "Chef", "Expertise Giver"}, function(Mobbb)
if Mobbb == "Bartender (Sam)" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.DrinkMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Bartender (Bar)" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.BetterDrinkMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Sam" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.QuestMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Krizma Seller" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.KrizmaMerch.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Flail Seller" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.FlailMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Sword Seller" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.SwordMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Gun Seller" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.SniperMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Merlin" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.QuestFishMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Emotes Teacher" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.EmoteMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Lucy (Affinity)" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.AffinityMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Chef" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.FishMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Expertise Giver" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.ExpertiseMerchant.Head.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
end
end)

Tele2:NewButton("Teleport To Safe Zone", "High PlatForm", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["SafeZoneOuterSpacePart"].CFrame * CFrame.new(0, 5, 0)
end)

Tele2:NewButton("Teleport To Fishing Place", "Just A Place To Fish", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["fishingplace"].CFrame * CFrame.new(0, 5, 0)
end)

Tele2:NewButton("Teleport To Rayleigh (If Spawned)", "...", function()
if game:GetService("Workspace").Merchants.QuestHakiMerchant.Clickable.Available.Value == true then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.QuestHakiMerchant.HumanoidRootPart.CFrame
else
Fluent:Notify({
    Title = "Rayleigh Notify",
    Content = "Rayleigh hasn't spawned yet",
    Duration = 4
})
end
end)

Player2:NewToggle("Auto Shave + Dash Players" , "Auto Make Players Dash and Shave Into Sea", function(state)
getgenv().Save["Auto Shave + Dash Players"] = state
end)

local Playerslist = {}
for i,v in pairs(game:GetService("Players"):GetChildren()) do
    table.insert(Playerslist,v.Name)
end

local PLRINFO = Player1:NewDropdown2("Player's Information", "Show The Information Of The Choosen Player", {}, function()
end)
Player1:NewLabel3("--> ♥♥♥ <--")
local PLRLISTED = Player1:NewDropdown("Choose Player", "Choose Player To Do Something", Playerslist, function(nah)
getgenv().ChosenPlayer = nah
end)

game:GetService("Players").PlayerAdded:Connect(function()
wait()
table.clear(Playerslist)
for i,v in pairs(game:GetService("Players"):GetChildren()) do
table.insert(Playerslist,v.Name)
end
PLRLISTED:Refresh(Playerslist)
end)  

game:GetService("Players").PlayerRemoving:Connect(function()
wait()
table.clear(Playerslist)
for i,v in pairs(game:GetService("Players"):GetChildren()) do
table.insert(Playerslist,v.Name)
end
PLRLISTED:Refresh(Playerslist)
end)  

Player1:NewToggle("View Chosen Player" , "Change Your Spec To The Chosen Player", function(state)
getgenv().viewplrr = state
end)

Player1:NewButton("Teleport To Chosen Player", "Just A TP Button", function()
game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = game.Players:FindFirstChild(getgenv().ChosenPlayer).Character:FindFirstChild("HumanoidRootPart").CFrame
end)

Gems1:NewButton("Lure Mobs For Farm Gems (Smoke)", "Lure Mobs", function()
getgenv().SmokeLure = true
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "MakeSmoke",
    [4] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position * Vector3.new(0,-10,0)
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))

for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
if string.find(v.Name,"Demon") or string.find(v.Name,"Gunslinger") or string.find(v.Name,"Angry") then
pcall(function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0,10,0)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = v:FindFirstChild("HumanoidRootPart").CFrame.Position,
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
v.HumanoidRootPart.Anchored = true
wait(0.5)
end)
end
end

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2610.68945, 269.599915, 1086.86829)
wait(1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position * Vector3.new(0,-10,0),
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.09)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position * Vector3.new(0,-10,0),
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position * Vector3.new(0,-10,0),
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position * Vector3.new(0,-10,0),
    [5] = true
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
wait(0.09)
for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
if string.find(v.Name,"Demon") or string.find(v.Name,"Gunslinger") or string.find(v.Name,"Angry") then
if v:FindFirstChild("HumanoidRootPart").Anchored == true then
v:FindFirstChild("HumanoidRootPart").Anchored = false
end
end
end
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Smoke).VTCuwpx,
    [2] = "SmokePower4",
    [3] = "UpdateSmoke",
    [4] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position * Vector3.new(0,-10,0),
    [5] = false
}

game:GetService("Players").LocalPlayer.Character.Powers.Smoke.RemoteEvent:FireServer(unpack(args))
getgenv().SmokeLure = false
end)

Gems1:NewButton("Targeting Mobs", "Click To Reduce Percentage Of No One-Shot", function()
getgenv().SmokeLure = true
for _,mobalive in pairs(game.Workspace.Enemies:GetChildren()) do
    if (string.find(mobalive.Name, "Crab") or 
        string.find(mobalive.Name, "Lv12 Thug") or 
        string.find(mobalive.Name, "Lv15 Thug") or 
        string.find(mobalive.Name, "Lv17 Thug") or 
        string.find(mobalive.Name, "Lv30 Thug") or 
        string.find(mobalive.Name, "Lv40 Thug") or 
        string.find(mobalive.Name, "Lv22 Thug") or 
        string.find(mobalive.Name, "Lv9 Bandit") or 
        string.find(mobalive.Name, "Lv2 Angry Bob") or 
        string.find(mobalive.Name, "Lv4 Freddy") or 
        string.find(mobalive.Name, "Fr") or 
        string.find(mobalive.Name, "Boar")) and 
        mobalive:FindFirstChild("Humanoid") and 
        mobalive.Humanoid.Health > 0 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = mobalive:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0, 15, 0)
wait(0.5)
    end
end
getgenv().SmokeLure = false
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(85.0743713, 282.310211, -36.9613533, 0.136958227, -1.5720218e-08, 0.990576804, 4.45528325e-09, 1, 1.52537698e-08, -0.990576804, 2.3241713e-09, 0.136958227)
end)

Gems1:NewToggle("Auto Farm Gems (Better Use In 1-Player Server)" , "Require: Compass Token", function(state)
getgenv().Save["Auto Farm Gems"] = state
end)




Server1:NewButton("Rejoin Server", "Rejoin The Current Server", function()
game.Players.LocalPlayer:Kick("Rejoining Server, Please Wait...")
game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
end)

Server1:NewButton("Hop Server", "Hop To The Other Server", function()
TeleportService = game:GetService("TeleportService")
HttpService = game:GetService("HttpService")
PlaceId, JobId = game.PlaceId, game.JobId
httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
	if httprequest then
		httprequest({
			Url = 'http://127.0.0.1:6463/rpc?v=1',
			Method = 'POST',
			Headers = {
				['Content-Type'] = 'application/json',
				Origin = 'https://discord.com'
			},
			Body = HttpService:JSONEncode({
				cmd = 'INVITE_BROWSER',
				nonce = HttpService:GenerateGUID(false),
				args = {code = 'dYHag43eeU'}
			})
		})
	end   
 if httprequest then
        local servers = {}
        local req = httprequest({Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true", PlaceId)})
        local body = HttpService:JSONDecode(req.Body)

        if body and body.data then
            for i, v in next, body.data do
                if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
                    table.insert(servers, 1, v.id)
                end
            end
        end

        if #servers > 0 then
            game.Players.LocalPlayer:Kick("Hoping Server, Please Wait...")
            TeleportService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], game.Players.LocalPlayer)
        else
            return 
Fluent:Notify({
    Title = "Saluna Notify",
    Content = "Not Found Any Other Server",
    Duration = 5
})
        end
    end          
end)

function amongus()
for i,v in pairs(game:GetService("Workspace").Barrels:GetDescendants()) do
if v:IsA("ClickDetector") then
fireclickdetector(v)
end
end
for i,v in pairs(game:GetService("Workspace").Island8.Kitchen:GetDescendants()) do
if v:IsA("ClickDetector") then
fireclickdetector(v)
end
end
end

task.spawn(function()
while task.wait(0.1) do
if getgenv().Save["Auto Stats Farming"] then
pcall(function()
if game:GetService("Players")[""..tostring(game:GetService("Players").LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_13"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..tostring(usingid)].ChallengesRemote:FireServer("Claim","Challenge13")
elseif game:GetService("Players")[""..tostring(game:GetService("Players").LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_14"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..tostring(usingid)].ChallengesRemote:FireServer("Claim","Challenge14")
end
end)
end
end
end)

task.spawn(function()
while task.wait(0.1) do
if getgenv().Save["Auto Stats Farming"] then
pcall(function()
repeat task.wait()
for i,v in pairs(game:GetService("Workspace").Barrels.Barrels:GetDescendants()) do
if v.Name == "Barrel" and getgenv().Save["Auto Stats Farming"] == true and not game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Compass") and not game:GetService("Players").LocalPlayer.Character:FindFirstChild("Compass") then
game:GetService("Workspace")[""..game.Players.LocalPlayer.Name].HumanoidRootPart.CFrame = v.CFrame + Vector3.new(0, 5, 0)
task.wait()
amongus()
task.wait()
end
end
for i,v in pairs(game:GetService("Workspace").Barrels:GetDescendants()) do
if v.Name == "Crate" and getgenv().Save["Auto Stats Farming"] == true and not game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Compass") and not game:GetService("Players").LocalPlayer.Character:FindFirstChild("Compass") then
game:GetService("Workspace")[""..game.Players.LocalPlayer.Name].HumanoidRootPart.CFrame = v.CFrame + Vector3.new(0, 5, 0)
task.wait()
amongus()
task.wait()
end
end
if getgenv().Save["Auto Stats Farming"] == true and not game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Compass") and not game:GetService("Players").LocalPlayer.Character:FindFirstChild("Compass") then
game:GetService("Workspace")[""..game.Players.LocalPlayer.Name].HumanoidRootPart.CFrame = game:GetService("Workspace")["SafeZoneOuterSpacePart"].CFrame * CFrame.new(0, 5, 0)
amongus()
workspace:WaitForChild("Merchants"):WaitForChild("FishMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer()
end
task.wait(15)
until not getgenv().Save["Auto Stats Farming"] or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0
end)
end
end
end)

task.spawn(function()
while wait(0.1) do
pcall(function()

if getgenv().Save["Auto Farm OS"] and game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health ~= 0 and #game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren() ~= 0 then
repeat wait(0.1)
for _,mobalive in pairs(game.Workspace.Enemies:GetChildren()) do
if mobalive:FindFirstChild("Humanoid") and mobalive.Humanoid.Health > 0 and getgenv().Save["Auto Farm OS"] then
if string.find(mobalive.Name, "Captain") or string.find(mobalive.Name, "Bucky") or  string.find(mobalive.Name, "Buster") or string.find(mobalive.Name, "Bruno") then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = mobalive:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0, 5, 0)
wait(0.1)
pcall(function()
if (mobalive:FindFirstChild("Humanoid"):GetState() ~= Enum.HumanoidStateType.Dead) and ((game:GetService('Players').LocalPlayer.Character:FindFirstChild("Head").Position - mobalive:FindFirstChild("Head").Position).Magnitude < 200) then
mobalive:FindFirstChild("Humanoid").Health = 0
mobalive:FindFirstChild("Head"):Destroy()
mobalive:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Dead)
task.wait(0.7)
end
end)
end
_G.killstat = workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.Kills.Value
repeat task.wait()
if getgenv().Save["Chosen Farm Method"] == "Light" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = mobalive:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0, 15, 0)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Light).VTCrv,
    [2] = "LightPower2",
    [3] = "StartCharging",
    [4] = CFrame.new(0,0,0),
    [5] = workspace.IslandCaver.Stones.Stone,
    [9] = "Right"
}

game:GetService("Players").LocalPlayer.Character.Powers.Light.RemoteEvent:FireServer(unpack(args))
task.wait(0.03)
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Light).VTCrv,
    [2] = "LightPower2",
    [3] = "StopCharging",
    [4] = mobalive:FindFirstChild("HumanoidRootPart").CFrame,
    [5] = workspace.IslandCaver.Stones.Stone,
    [6] = 100
}

game:GetService("Players").LocalPlayer.Character.Powers.Light.RemoteEvent:FireServer(unpack(args))
elseif getgenv().Save["Chosen Farm Method"] == "Quake" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(85.0743713, 282.310211, -36.9613533, 0.136958227, -1.5720218e-08, 0.990576804, 4.45528325e-09, 1, 1.52537698e-08, -0.990576804, 2.3241713e-09, 0.136958227)
if game.Workspace.Camera.CameraSubject ~= mobalive:FindFirstChild("Humanoid") then
game.Workspace.Camera.CameraSubject = mobalive:FindFirstChild("Humanoid")
end
local args = {
    [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Quake).VTCebvc,
    [2] = "QuakePower4",
    [3] = "StopCharging",
    [4] = workspace:WaitForChild("IslandGrassy"):WaitForChild("Base"):WaitForChild("DirtGrass"):WaitForChild("Grass"):WaitForChild("Grass"),
    [5] = mobalive:FindFirstChild("HumanoidRootPart").CFrame,
    [6] = 100,
    [7] = mobalive:FindFirstChild("HumanoidRootPart").CFrame.Position
}

game:GetService("Players").LocalPlayer.Character.Powers.Quake.RemoteEvent:FireServer(unpack(args))
task.wait(0.1)
end
until (not mobalive:FindFirstChild("HumanoidRootPart")) or (workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.Kills.Value ~= _G.killstat) or (getgenv().Save["Auto Farm OS"] == false)
end
end
until not getgenv().Save["Auto Farm OS"] or game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health == 0
game.Workspace.Camera.CameraSubject = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
end
end)
end
end)

task.spawn(function()
while wait(0.1) do
pcall(function()
if getgenv().Save["Auto Delete Common Box"] then
for i,v in pairs(game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren()) do
if v:IsA("Tool") and v.Name == "Common Box" then
v:Destroy()
end
end
end

if getgenv().Save["Auto Delete Uncommon Box"] then
for i,v in pairs(game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren()) do
if v:IsA("Tool") and v.Name == "Uncommon Box" then
v:Destroy()
end
end
end

if getgenv().Save["Auto Open Common Box"] then
for i,v in pairs(game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren()) do
if v:IsA("Tool") and v.Name == "Common Box" then wait()
v.Parent = game.Players.LocalPlayer.Character
v:Activate()
end
end
end

if getgenv().Save["Auto Open Uncommon Box"] then
for i,v in pairs(game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren()) do
if v:IsA("Tool") and v.Name == "Uncommon Box" then wait()
v.Parent = game.Players.LocalPlayer.Character
v:Activate()
end
end
end

if getgenv().Save["Auto Open Rare/Ultra Box"] then
for i,v in pairs(game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren()) do
if v:IsA("Tool") and string.find(v.Name,"Rare") then wait()
v.Parent = game.Players.LocalPlayer.Character
v:Activate()
end
end
end

if getgenv().Save["Auto Delete Non-Aura Ultra Rare Fruit"] then
for i,y in pairs(game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren()) do
if string.find(y.Name, "Quake") or string.find(y.Name, "Phoenix") or string.find(y.Name, "Dark") or string.find(y.Name, "Vampire") then
if string.sub(y:WaitForChild("Data").Value,tonumber(string.len(y:WaitForChild("Data").Value)) - 1) ~= ",1" then
y:Destroy()
end
end
end
end

if getgenv().Save["Auto Delete Non-Aura Rare Fruit"] then
for i,y in pairs(game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren()) do
if string.find(y.Name, "Gravity") or string.find(y.Name, "Ope") or string.find(y.Name, "Venom") or string.find(y.Name, "Candy Fruit") or string.find(y.Name, "Hollow") or string.find(y.Name, "Chilly") or string.find(y.Name, "Gas") or string.find(y.Name, "Flare") or string.find(y.Name, "Light") or string.find(y.Name, "Smoke") or string.find(y.Name, "Rumble") or string.find(y.Name, "Sand") or string.find(y.Name, "Magma") or string.find(y.Name, "Snow") or string.find(y.Name, "Plasma") then
if string.sub(y:WaitForChild("Data").Value,tonumber(string.len(y:WaitForChild("Data").Value)) - 1) ~= ",1" then
y:Destroy()
end
end
end
end

if getgenv().Save["Auto Delete Non-Aura Uncommon Fruit"] then
for i,y in pairs(game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren()) do
if string.find(y.Name, "Order") or string.find(y.Name, "Alice") or string.find(y.Name, "Gum") or string.find(y.Name, "Love") or string.find(y.Name, "Bomb") or string.find(y.Name, "Smelt") or string.find(y.Name, "Diamond") or string.find(y.Name, "Barrier") or string.find(y.Name, "String") or string.find(y.Name, "Hobby") then
if string.sub(y:WaitForChild("Data").Value,tonumber(string.len(y:WaitForChild("Data").Value)) - 1) ~= ",1" then
y:Destroy()
end
end
end
end

if getgenv().Save["Auto Delete Non-Aura Common Fruit"] then
for i,y in pairs(game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren()) do
if string.find(y.Name, "Slip") or string.find(y.Name, "Chop") or string.find(y.Name, "Clone") or string.find(y.Name, "Hot") or string.find(y.Name, "Clear") or string.find(y.Name, "Spring") or string.find(y.Name, "Swim") or string.find(y.Name, "Spin") or string.find(y.Name, "Luck") or string.find(y.Name, "Float") then
if string.sub(y:WaitForChild("Data").Value,tonumber(string.len(y:WaitForChild("Data").Value)) - 1) ~= ",1" then
y:Destroy()
end
end
end
end
end)
end
end)

task.spawn(function()
while wait() do
if getgenv().Save["Auto Bring Compass"] then
 pcall(function()
local humanoid = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
	for _, child in ipairs(workspace:GetChildren()) do
		if game.Players.LocalPlayer.Character and child:IsA("BackpackItem") and string.find(child.Name, "Compass")  and child:FindFirstChild("Handle") then
			humanoid:EquipTool(child)
			wait()
		end
		end
	end)
                end
            end
            end)

task.spawn(function()
while wait() do
if getgenv().Save["Auto Bring Drink"] then
 pcall(function()
local humanoid = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
	for _, child in ipairs(workspace:GetChildren()) do
		if game.Players.LocalPlayer.Character and child:IsA("BackpackItem") and (string.find(child.Name, "Cider") or string.find(child.Name, "Smoothie") or string.find(child.Name, "Lemon") or string.find(child.Name, "Juice") or string.find(child.Name, "Milk"))  and child:FindFirstChild("Handle") then
			humanoid:EquipTool(child)
			wait()
		end
		end
	end)
                end
            end
            end)


            task.spawn(function()
            while wait() do
                if getgenv().Save["Auto Spawn"] then
                    pcall(function()
                        if game:GetService("Players").LocalPlayer.PlayerGui.Load.Frame.Visible == true then
                             wait(5)
   for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Load.Frame.Load.MouseButton1Click)) do
                                    v.Function()
                                end
                        end
                    end)
                end
            end
            end)

            task.spawn(function()
            while wait(2) do
                if getgenv().Save["Auto Get Expertise"] then
                    pcall(function()
repeat wait() until game:IsLoaded() 
repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") ~= nil
workspace:WaitForChild("Merchants"):WaitForChild("ExpertiseMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer()
                    end)
                end
            end
            end)

task.spawn(function()
while wait(0.1) do
if getgenv().Save["Auto Aura Finding"] and game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health ~= 0 and #game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren() ~= 0 then
pcall(function()

repeat wait() until game:IsLoaded() 
repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") ~= nil
game:GetService("Workspace").UserData["User_"..game.Players.LocalPlayer.UserId].UpdateClothing_Extras:FireServer("A","\255",34)
task.wait(1)
repeat

if game.Players.LocalPlayer.PlayerGui.Load.Frame.Visible == true and getgenv().Save["Auto Aura Finding"] then
repeat
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Load.Frame.Load.MouseButton1Click)) do
v:Fire()
end
wait(2)
until game.Players.LocalPlayer.PlayerGui.Load.Frame.Visible == false or not getgenv().Save["Auto Aura Finding"]
end

if not game.Players.LocalPlayer:WaitForChild("Backpack"):FindFirstChild("Compass") and not game.Players.LocalPlayer.Character:FindFirstChild("Compass") and getgenv().Save["Auto Aura Finding"] then
workspace.Merchants.QuestMerchant.Clickable.Retum:FireServer("Claim10")
end

if game.Players.LocalPlayer:WaitForChild("Backpack"):FindFirstChild("Compass") and getgenv().Save["Auto Aura Finding"] then
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer:WaitForChild("Backpack")["Compass"])
end

for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v.Name == "Compass" and getgenv().Save["Auto Aura Finding"] then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(v.Poser.Value)
task.wait()
end
if game.Players.LocalPlayer.Character:FindFirstChild("Compass") and getgenv().Save["Auto Aura Finding"] then
game.Players.LocalPlayer.Character.Compass:Activate()
end
end
task.wait(0.4)
until not getgenv().Save["Auto Aura Finding"] or game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health == 0

end)
end
end
end)

task.spawn(function()
while wait(0.1) do
if getgenv().Save["Auto Aura Finding"] then
pcall(function()
for i,v in pairs(game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren()) do
if not string.find(v.Name,"Fruit") and not string.find(v.Name,"Compass") and not string.find(v.Name,"Box") then
v:Destroy()
end
end
end)
end
end
end)

task.spawn(function()
while wait(0.1) do
pcall(function()
if getgenv().Save["Auto Farm Gems"] then
if game.Workspace:WaitForChild("UserData"):WaitForChild("User_"..game.Players.LocalPlayer.UserId):WaitForChild("Data"):WaitForChild("MissionObjective").Value == "Quests" and game.Workspace:WaitForChild("UserData"):WaitForChild("User_"..game.Players.LocalPlayer.UserId):WaitForChild("Data"):WaitForChild("MissionRequirement").Value > 1 then
workspace:WaitForChild("UserData"):WaitForChild("User_"..game.Players.LocalPlayer.UserId):WaitForChild("Stats"):FireServer()
end
repeat wait(0.1)
if game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health ~= 0 and #game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren() ~= 0 then
pcall(function()
if getgenv().Save["Auto Farm Gems"] and game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health ~= 0 and #game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren() ~= 0 then
repeat wait(0.1)
if game.Workspace:WaitForChild("UserData"):WaitForChild("User_"..game.Players.LocalPlayer.UserId):WaitForChild("Data"):WaitForChild("MissionObjective").Value ~= "Quests" and game.Workspace:WaitForChild("UserData"):WaitForChild("User_"..game.Players.LocalPlayer.UserId):WaitForChild("Data"):WaitForChild("MissionObjective").Value ~= "None" then
workspace:WaitForChild("UserData"):WaitForChild("User_"..game.Players.LocalPlayer.UserId):WaitForChild("Stats"):FireServer()
end
wait(0.5)
if game.Workspace:WaitForChild("UserData"):WaitForChild("User_"..game.Players.LocalPlayer.UserId):WaitForChild("Data"):WaitForChild("MissionObjective").Value ~= "Quests" and game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_4"].Claim.AutoButtonColor == false and game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_4"].Claim.TextLabel.Text == "Claim" then
workspace:WaitForChild("Merchants"):WaitForChild("ExpertiseMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer()
end
wait(0.5)
until game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health == 0 or game.Workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.MissionObjective.Value == "Quests" or getgenv().Save["Auto Farm Gems"] == false or game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_4"].Claim.AutoButtonColor or game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_4"].Claim.TextLabel.Text == "Completed"
end
if getgenv().Save["Auto Farm Gems"] and game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health ~= 0 and #game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren() ~= 0 then
repeat wait(0.1)
if game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_1"].Claim.AutoButtonColor == false and game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_1"].Claim.TextLabel.Text == "Claim" then
if getgenv().Save["Auto Farm Gems"] == true and game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_4"].Claim.AutoButtonColor == false and game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_4"].Claim.TextLabel.Text == "Claim" then
workspace.Merchants.QuestMerchant.Clickable.Retum:FireServer("Claim1")
end
if game.Players.LocalPlayer:WaitForChild("Backpack"):FindFirstChild("Compass") and getgenv().Save["Auto Farm Gems"] == true then wait(0.3)
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer:WaitForChild("Backpack")["Compass"])
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character:WaitForChild("Compass").Poser.Value)
game.Players.LocalPlayer.Character:WaitForChild("Compass"):Activate()
wait(1)
end
end
until game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_1"].Claim.AutoButtonColor or game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_1"].Claim.TextLabel.Text == "Completed" or getgenv().Save["Auto Farm Gems"] == false
end
if getgenv().Save["Auto Farm Gems"] and #game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren() ~= 0 then
repeat wait(0.1)
_G.checkdiegem = true
for i,c in pairs(game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren()) do
if string.find(c.Name,"Box") then
c.Parent = game.Players.LocalPlayer.Character
task.wait()
c:Activate()
end
end
if getgenv().Save["Auto Farm Gems"] == true and game.Workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data["DevilFruit"].Value == "None" and #game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren() ~= 0 then
for i,v in pairs(game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren()) do
if string.find(v.Name,"Fruit") then
repeat wait(0.1)
if game.Workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data["DevilFruit"].Value == "None" then
game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
task.wait()
v:Activate()
task.wait()
for i, z in pairs(getconnections(game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("GiverGUI"):WaitForChild("ImageLabel"):WaitForChild("Frame")[1].MouseButton1Click)) do
z.Function()
end
wait(0.1)
game.Players.LocalPlayer.Character.Humanoid:UnEquipTools()
end
wait(0.1)
until game.Workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data["DevilFruit"].Value ~= "None" or getgenv().Save["Auto Farm Gems"] == false
end
end
end
until getgenv().Save["Auto Farm Gems"] == false or game.Workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data["DevilFruit"].Value ~= "None"
_G.checkdiegem = false
end
if getgenv().Save["Auto Farm Gems"] and game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health ~= 0 and #game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren() ~= 0 then
repeat wait(0.1)
workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer("Claim","Daily1")
workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer("Claim","Daily4")
workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer("Claim","Challenge9")
workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer("Claim","Daily2")
wait(0.1)
if workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.Cash.Value > 5000 and game:GetService("Workspace").UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.PlayerHas_Katana.Value == false then
game:GetService("Workspace").Merchants.SwordMerchant.Clickable.Retum:FireServer("Katana", 10000)
end
until getgenv().Save["Auto Farm Gems"] == false or game.Players.LocalPlayer:WaitForChild("Backpack"):FindFirstChild("Katana") or game.Players.LocalPlayer.Character:FindFirstChild("Katana")
end
_G.swingsword = true
if getgenv().Save["Auto Farm Gems"] and game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health ~= 0 and #game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren() ~= 0 then
repeat wait(0.1)
for _,mobalive in pairs(game.Workspace.Enemies:GetChildren()) do
    if (string.find(mobalive.Name, "Crab") or 
        string.find(mobalive.Name, "Lv12 Thug") or 
        string.find(mobalive.Name, "Lv15 Thug") or 
        string.find(mobalive.Name, "Lv17 Thug") or 
        string.find(mobalive.Name, "Lv30 Thug") or 
        string.find(mobalive.Name, "Lv40 Thug") or 
        string.find(mobalive.Name, "Lv22 Thug") or 
        string.find(mobalive.Name, "Lv9 Bandit") or 
        string.find(mobalive.Name, "Lv2 Angry Bob") or 
        string.find(mobalive.Name, "Lv4 Freddy") or 
        string.find(mobalive.Name, "Fr") or 

        string.find(mobalive.Name, "Boar")) and 
        mobalive:FindFirstChild("Humanoid") and 
        mobalive.Humanoid.Health > 0 then
if game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_3"].Claim.AutoButtonColor == false and
game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_3"].Claim.TextLabel.Text == "Claim" and getgenv().Save["Auto Farm Gems"] == true then
repeat wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = mobalive:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0, 15, 0)
wait(0.1)
pcall(function()
if (mobalive:FindFirstChild("Humanoid"):GetState() ~= Enum.HumanoidStateType.Dead) and ((game:GetService('Players').LocalPlayer.Character:FindFirstChild("Head").Position - mobalive:FindFirstChild("Head").Position).Magnitude < 200) then
mobalive:FindFirstChild("Humanoid"):ChangeState(Enum.HumanoidStateType.Dead)
end
end)
until (mobalive:FindFirstChild("Humanoid").Health == 0) or (getgenv().Save["Auto Farm Gems"] == false) or (not mobalive:FindFirstChild("HumanoidRootPart"))
task.wait()
_G.killstat = workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.Kills.Value
repeat wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = mobalive:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0, 0, 3)
until (not mobalive:FindFirstChild("HumanoidRootPart")) or (workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.Kills.Value ~= _G.killstat) or (game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_3"].Claim.AutoButtonColor == true) or (game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_3"].Claim.TextLabel.Text == "Completed") or (getgenv().Save["Auto Farm Gems"] == false)
end
end
end
until game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_3"].Claim.AutoButtonColor == true or game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_3"].Claim.TextLabel.Text == "Completed" or getgenv().Save["Auto Farm Gems"] == false
end
_G.swingsword = false
if getgenv().Save["Auto Farm Gems"] and game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health ~= 0 and #game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren() ~= 0 then
repeat wait(0.1)
workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer("Claim","Daily3")
workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer("Claim","AllDaily")
until game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health == 0 or (game.Players[""..tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.DailyFrame.CompletionFrame.Claim.AutoButtonColor == false and game.Players[""..tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.DailyFrame.CompletionFrame.Claim.TextLabel.Text == "Complete") or getgenv().Save["Auto Farm Gems"] == false
if game.Players[""..tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.DailyFrame.CompletionFrame.Claim.AutoButtonColor == false and game.Players[""..tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.DailyFrame.CompletionFrame.Claim.TextLabel.Text == "Complete" and getgenv().Save["Auto Farm Gems"] == true then
workspace:WaitForChild("UserData"):WaitForChild("User_"..game.Players.LocalPlayer.UserId):WaitForChild("Stats"):FireServer()
end
end
end)
end
until not getgenv().Save["Auto Farm Gems"]
end
end)
end
end)

task.spawn(function()
while wait(0.1) do
pcall(function()
if _G.checkdiegem and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid").Health <= 0 then
getgenv().Save["Auto Farm Gems"] = false
wait(1)
getgenv().Save["Auto Farm Gems"] = true
_G.checkdiegem = false
end
end)
end
end)

task.spawn(function()
while wait(1) do
pcall(function()
if getgenv().Save["Auto Farm Gems"] then
if game.Players.LocalPlayer.Character.Humanoid.Sit == true then
game.Players.LocalPlayer.Character.Humanoid.Sit = false
end
end
end)
end
end)

task.spawn(function()
while wait(0.1) do
pcall(function()
if game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_3"].Claim.AutoButtonColor == false and game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_3"].Claim.TextLabel.Text == "Claim" and _G.swingsword == true and getgenv().Save["Auto Farm Gems"] == true then
repeat wait(0.1)
if game.Players.LocalPlayer:WaitForChild("Backpack"):FindFirstChild("Katana") and not game.Players.LocalPlayer.Character:FindFirstChild("Katana") then
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer:WaitForChild("Backpack"):FindFirstChild("Katana"))
end
if game.Players.LocalPlayer.Character:FindFirstChild("Katana") then
game.Players.LocalPlayer.Character:FindFirstChild("Katana"):Activate()
end
until game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health == 0 or game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_3"].Claim.AutoButtonColor == true or game.Players.LocalPlayer:WaitForChild("PlayerGui").Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_3"].Claim.TextLabel.Text == "Completed" or _G.swingsword == false
for i = 1,3 do wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(85.0743713, 282.310211, -36.9613533, 0.136958227, -1.5720218e-08, 0.990576804, 4.45528325e-09, 1, 1.52537698e-08, -0.990576804, 2.3241713e-09, 0.136958227)
game.Players.LocalPlayer.Character.Humanoid:UnequipTools()
end
end
end)
end
end)

task.spawn(function()
    while wait() do
        pcall(function()
            if getgenv().Save["Auto Compass Dupe"] and game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health ~= 0 and #game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren() ~= 0 then
game:GetService("Workspace").UserData["User_"..game.Players.LocalPlayer.UserId].UpdateClothing_Extras:FireServer("A","\255",34)
wait(0.5)
repeat wait(0.1)
if getgenv().Save["Position X"] ~= "" and getgenv().Save["Position Y"] ~= "" and getgenv().Save["Position Z"] ~= "" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(getgenv().Save["Position X"], getgenv().Save["Position Y"], getgenv().Save["Position Z"]))
end
wait(0.1)
if game.Workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.CompassTokens.Value > 0 then
workspace.Merchants.QuestMerchant.Clickable.Retum:FireServer("Claim10")
end
wait(0.1)
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
if v.Name == "Compass" then
v.Parent = game.Players.LocalPlayer.Character
end
end
wait(0.1)
for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v.Name == "Compass" then
v.Parent = game.Workspace
end
end
wait(0.1)
until not getgenv().Save["Auto Compass Dupe"] or game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health == 0
            end
        end)
    end
end)

task.spawn(function()
    while wait() do
        pcall(function()
            if getgenv().Save["Auto Stack Token"] == true and game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health ~= 0 and #game.Players.LocalPlayer:WaitForChild("Backpack"):GetChildren() ~= 0 then
repeat task.wait()
if game.Players.LocalPlayer.PlayerGui.Challenges.Frame.Frame.WeeklyFrame.ScrollingFrame["Challenge_3"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..game.Players.LocalPlayer.UserId].ChallengesRemote:FireServer("Claim","Weekly3")
end
task.wait()
if getgenv().Save["Auto Stack Token"] == true and game.Players.LocalPlayer.PlayerGui.Challenges.Frame.Frame.WeeklyFrame.ScrollingFrame["Challenge_3"].Claim.AutoButtonColor == false and game.Players.LocalPlayer.PlayerGui.Challenges.Frame.Frame.WeeklyFrame.ScrollingFrame["Challenge_3"].Claim.TextLabel.Text == "Completed" then
workspace:WaitForChild("UserData"):WaitForChild("User_"..game.Players.LocalPlayer.UserId):WaitForChild("Stats"):FireServer()
end
task.wait()

if getgenv().Save["Auto Stack Token"] == true and game.Players.LocalPlayer.Backpack:FindFirstChild("Compass") and game.Players.LocalPlayer.PlayerGui.Challenges.Frame.Frame.WeeklyFrame.ScrollingFrame["Challenge_3"].Claim.AutoButtonColor == false and game.Players.LocalPlayer.PlayerGui.Challenges.Frame.Frame.WeeklyFrame.ScrollingFrame["Challenge_3"].Claim.TextLabel.Text == "Claim" then
repeat
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer:WaitForChild("Backpack")["Compass"])
task.wait()
if game.Players.LocalPlayer.Character:FindFirstChild("Compass") and getgenv().Save["Auto Stack Token"] == true then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character:FindFirstChild("Compass").Poser.Value)
task.wait()
game.Players.LocalPlayer.Character:FindFirstChild("Compass"):Activate()
end
task.wait(0.4)
until not getgenv().Save["Auto Stack Token"] or not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass") or game.Players.LocalPlayer.PlayerGui.Challenges.Frame.Frame.WeeklyFrame.ScrollingFrame["Challenge_3"].Claim.AutoButtonColor == true or game.Players.LocalPlayer.PlayerGui.Challenges.Frame.Frame.WeeklyFrame.ScrollingFrame["Challenge_3"].Claim.TextLabel.Text == "Completed"
end

until not getgenv().Save["Auto Stack Token"] or game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health == 0
            end
        end)
    end
end)
task.spawn(function() -- autofarm velocity
    while wait() do
        pcall(function()
            if getgenv().Save["Auto Farm Gems"] == true or getgenv().SmokeLure == true or getgenv().Save["Auto Farm OS"] == true then
                if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
                    local Noclip = Instance.new("BodyVelocity")
                    Noclip.Name = "BodyClip"
                    Noclip.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                    Noclip.MaxForce = Vector3.new(100000,100000,100000)
                    Noclip.Velocity = Vector3.new(0,0,0)
                end
                game.Players.LocalPlayer.Character.Humanoid.JumpPower = 0
            elseif getgenv().Save["Auto Farm Gems"] == false or getgenv().SmokeLure == false or getgenv().Save["Auto Farm OS"] == false then
                game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip"):Destroy()
                wait(1)
                game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
            end
        end)
    end
end)

task.spawn(function()
while wait(0.1) do
pcall(function()
if getgenv().Save["Auto Shave + Dash Players"] then
for i,v in pairs(game.Players:GetChildren()) do
if v.Name ~= game.Players.LocalPlayer.Name then
for i,c in pairs(game.Workspace:GetChildren()) do
if c:IsA("Model") and c.Name == v.Name then
local args = {
    [1] = c.HumanoidRootPart.CFrame * CFrame.new(0,-25,0),
    [2] = workspace:WaitForChild("IslandTown"):WaitForChild("Beach"):WaitForChild("Beach")
}

c.Shave:FireServer(unpack(args))
local args = {
    [1] = c.HumanoidRootPart.CFrame * CFrame.new(0,-25,0),
    [2] = workspace:WaitForChild("IslandTown"):WaitForChild("Beach"):WaitForChild("Beach")
}

c.Dash:FireServer(unpack(args))
wait()
end
end
end
end
end
end)
end
end)


task.spawn(function()
while wait(0.1) do
pcall(function()
if getgenv().viewplrr then
repeat wait(0.1)
pcall(function()
game.Workspace.Camera.CameraSubject = game.Players:FindFirstChild(getgenv().ChosenPlayer).Character:FindFirstChild("Humanoid")
end)
until not getgenv().viewplrr or not game.Players:FindFirstChild(getgenv().ChosenPlayer)
game.Workspace.Camera.CameraSubject = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
end
end)
end
end)

task.spawn(function()
while wait(0.25) do
    local totalSeconds = math.floor(workspace.DistributedGameTime)
    local hours = math.floor(totalSeconds / 3600)
    local minutes = math.floor((totalSeconds % 3600) / 60)
    local seconds = totalSeconds % 60
    if hours < 1 then
        if minutes < 1 then
            PlayingTime:UpdateLabel("Play Time: "..seconds .. " s")
        else
            PlayingTime:UpdateLabel("Play Time: "..minutes .. " m, " .. seconds .. " s")
        end
    else
        PlayingTime:UpdateLabel("Play Time: "..hours .. " h, " .. minutes .. " m, " .. seconds .. " s")
    end
Realtimecheck:UpdateLabel("Real-Time: "..os.date("%A %x %X (%Z)"))
PlayerStat2:UpdateLabel("Gems: "..format_large_number_with_spaces(workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.Gems.Value))
PlayerStat3:UpdateLabel("Beri: "..format_large_number_with_spaces(workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.Cash.Value))
PlayerStat4:UpdateLabel("Bounty: "..format_large_number_with_spaces(workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.Bounty.Value))
PlayerStat5:UpdateLabel("Kills: "..format_large_number_with_spaces(workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.Kills.Value))
if game.Workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.CompassTokens.Value < game.Workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.CompassTokenLimit.Value then
PlayerStat6:UpdateLabel("Compass: "..tostring(game:GetService("Players").LocalPlayer.PlayerGui.Menu.Frame.C.Frame.A.Sam.SamTimer.Text))
else
PlayerStat6:UpdateLabel("Compass: "..tostring(game.Workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.CompassTokens.Value).."/"..tostring(game.Workspace.UserData["User_"..game.Players.LocalPlayer.UserId].Data.CompassTokenLimit.Value).." (Full!)")
end
end
end)

task.spawn(function()
while wait(0.25) do
pcall(function()
if getgenv().ChosenPlayer ~= nil then

Hi = {
"Name: "..game.Players:FindFirstChild(getgenv().ChosenPlayer).Name,
"Display Name: "..game.Players:FindFirstChild(getgenv().ChosenPlayer).DisplayName,
"Combo: "..game.Workspace.UserData["User_"..game.Players:FindFirstChild(getgenv().ChosenPlayer).UserId].Data.DevilFruit.Value .." & "..  game.Workspace.UserData["User_"..game.Players:FindFirstChild(getgenv().ChosenPlayer).UserId].Data.DevilFruit2.Value,
"Total Level: "..game.Workspace.UserData["User_"..game.Players:FindFirstChild(getgenv().ChosenPlayer).UserId].TotalLevel.Value,
"Expertise: "..game.Workspace.UserData["User_"..game.Players:FindFirstChild(getgenv().ChosenPlayer).UserId].Data.ExpertiseLevel.Value,
"Haki: "..game.Workspace.UserData["User_"..game.Players:FindFirstChild(getgenv().ChosenPlayer).UserId].Data.HakiLevel.Value,
"Compass Token: "..game.Workspace.UserData["User_"..game.Players:FindFirstChild(getgenv().ChosenPlayer).UserId].Data.CompassTokens.Value,
"Beri: "..format_large_number_with_spaces(game.Workspace.UserData["User_"..game.Players:FindFirstChild(getgenv().ChosenPlayer).UserId].Data.Cash.Value),
"Gems: "..format_large_number_with_spaces(game.Workspace.UserData["User_"..game.Players:FindFirstChild(getgenv().ChosenPlayer).UserId].Data.Gems.Value),
"Kills: "..format_large_number_with_spaces(workspace.UserData["User_"..game.Players:FindFirstChild(getgenv().ChosenPlayer).UserId].Data.Kills.Value)
}
PLRINFO:Refresh2(Hi)

end
end)
end
end)

else
loadstring(game:HttpGet('https://raw.githubusercontent.com/Iamcutehehe/hehehe/main/rllysus.lua'))()
end
