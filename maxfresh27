task.wait(1)
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.Visible = true
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.BackgroundTransparency = 0.5
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.TextScaled = true
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.Active = true
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.Text =
    "Saluna Notify: Loading Script, Please Wait..."
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.TextColor3 = Color3.fromRGB(0, 255, 127)
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.FontFace = Font.fromName("Merriweather")
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.FontFace.Bold = true
game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.Visible = true
Rarefruit = {
    "Candy Fruit",
    "Chilly Fruit",
    "Flare Fruit",
    "Gas Fruit",
    "Gravity Fruit",
    "Hollow Fruit",
    "Light Fruit",
    "Magma Fruit",
    "Ope Fruit",
    "Plasma Fruit",
    "Rumble Fruit",
    "Sand Fruit",
    "Smoke Fruit",
    "Snow Fruit",
    "Venom Fruit",
    "Dark Fruit",
    "Phoenix Fruit",
    "Quake Fruit",
    "Vampire Fruit"
}
MeleeTTT = {
    "Melee",
    "Table Kick",
    "Black Leg",
    "Seastone Cestus",
    "Aqua Staff"
}

SniperTTT = {
    "Slingshot",
    "Stars",
    "Crossbow",
    "Flintlock",
    "Cannon Ball"
}

SwordTTT = {
    "Dagger",
    "Wakizashi",
    "Tachi",
    "Katana",
    "Flail",
    "Krizma",
    "Kogatana",
    "Yoru",
    "Golden Fish",
    "Ultra Great Sword",
    "Masamune",
    "Candy Cane Yoru",
    "Divine Axe",
    "Kanshou and Byakuya",
    "Scissor Blade",
    "Lightning Sword",
    "Meteorite Sword"
}

UtilityTTT = {
    "Wood Rod",
    "Sturdy Rod",
    "Super Rod",
    "Zombie Head",
    "Tea Cup",
    "Santa Bag",
    "Tea Kettle"
}

everyClipboard = toclipboard
function toClipboard(txt)
    if everyClipboard then
        everyClipboard(tostring(txt))
    end
end

function storedf()
    if
        game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF1Unlocked.Value ==
            true and
            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF1.Value == "None" and
            game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF1.Button.Text == "Store"
     then
        for i, v in pairs(
            getconnections(
                game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF1.Button.MouseButton1Click
            )
        ) do
            v.Function()
        end
    elseif
        game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF2Unlocked.Value ==
            true and
            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF2.Value == "None" and
            game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF2.Button.Text == "Store"
     then
        for i, v in pairs(
            getconnections(
                game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF2.Button.MouseButton1Click
            )
        ) do
            v.Function()
        end
    elseif
        game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF3Unlocked.Value ==
            true and
            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF3.Value == "None" and
            game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF3.Button.Text == "Store"
     then
        for i, v in pairs(
            getconnections(
                game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF3.Button.MouseButton1Click
            )
        ) do
            v.Function()
        end
    elseif
        game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF4Unlocked.Value ==
            true and
            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF4.Value == "None" and
            game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF4.Button.Text == "Store"
     then
        for i, v in pairs(
            getconnections(
                game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF4.Button.MouseButton1Click
            )
        ) do
            v.Function()
        end
    elseif
        game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF5Unlocked.Value ==
            true and
            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF5.Value == "None" and
            game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF5.Button.Text == "Store"
     then
        for i, v in pairs(
            getconnections(
                game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF5.Button.MouseButton1Click
            )
        ) do
            v.Function()
        end
    elseif
        game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF6Unlocked.Value ==
            true and
            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF6.Value == "None" and
            game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF6.Button.Text == "Store"
     then
        for i, v in pairs(
            getconnections(
                game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF6.Button.MouseButton1Click
            )
        ) do
            v.Function()
        end
    elseif
        game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF7Unlocked.Value ==
            true and
            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF7.Value == "None" and
            game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF7.Button.Text == "Store"
     then
        for i, v in pairs(
            getconnections(
                game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF7.Button.MouseButton1Click
            )
        ) do
            v.Function()
        end
    elseif
        game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF8Unlocked.Value ==
            true and
            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF8.Value == "None" and
            game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF8.Button.Text == "Store"
     then
        for i, v in pairs(
            getconnections(
                game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF8.Button.MouseButton1Click
            )
        ) do
            v.Function()
        end
    elseif
        game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF9Unlocked.Value ==
            true and
            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF9.Value == "None" and
            game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF9.Button.Text == "Store"
     then
        for i, v in pairs(
            getconnections(
                game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF9.Button.MouseButton1Click
            )
        ) do
            v.Function()
        end
    elseif
        game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF10Unlocked.Value ==
            true and
            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF10.Value == "None" and
            game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF10.Button.Text == "Store"
     then
        for i, v in pairs(
            getconnections(
                game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF10.Button.MouseButton1Click
            )
        ) do
            v.Function()
        end
    elseif
        game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF11Unlocked.Value ==
            true and
            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF11.Value == "None" and
            game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF11.Button.Text == "Store"
     then
        for i, v in pairs(
            getconnections(
                game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF11.Button.MouseButton1Click
            )
        ) do
            v.Function()
        end
    elseif
        game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF12Unlocked.Value ==
            true and
            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF12.Value == "None" and
            game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF12.Button.Text == "Store"
     then
        for i, v in pairs(
            getconnections(
                game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF12.Button.MouseButton1Click
            )
        ) do
            v.Function()
        end
    end
end

function amongus()
    for i, v in pairs(game:GetService("Workspace").Barrels:GetDescendants()) do
        if v:IsA("ClickDetector") then
            fireclickdetector(v)
        end
    end
    for i, v in pairs(game:GetService("Workspace").Island8.Kitchen:GetDescendants()) do
        if v:IsA("ClickDetector") then
            fireclickdetector(v)
        end
    end
end

task.wait(4)
if game.placeId == 8569358381 or game.placeId == 3237168 then
    Pedo = {
        1135910299, -- Havelic
        520944, -- Oblivic
        43247021, -- BowTiedPony
        2350183594, -- icydragonwingsis
        835620275, -- Silvers_Rayleig
        137621, -- mariobros38
        295337577, -- ModeratorDaMarcuses
        1338963426, -- happypandamagic2
        1276541545, -- VanitasThePlague
        587649463, -- happypandamagic
        245586741, -- Tiptop98
        174941504, -- FoxKingFab
        136099207,
         -- CudlessTheCat
        94825741, -- NATSUDRAGN331
        358051152, -- VortexFragmented
        529455640, -- vlonedd
        281482099, -- Quixotize
        355207559, -- Elianmc1s
        5084487, -- Americanflag
        928623624, -- TrashPanda2361
        30049170, -- Farquanetta
        474452017 -- Bige0n
    }

    for _, v in pairs(game:GetService("Players"):GetPlayers()) do
        for _, v1 in pairs(Pedo) do
            if v.UserId == v1 then
                game:GetService("Players").LocalPlayer:Kick("Admin or Staff is in the server")
            end
        end
    end

    game:GetService("Players").PlayerAdded:Connect(
        function(r)
            for _, v in pairs(Pedo) do
                if r.UserId == v then
                    game:GetService("Players").LocalPlayer:Kick("Admin or Staff has joined the server")
                end
            end
        end
    )
    _G.WhiteListed = false
    listed = loadstring(game:HttpGet("https://raw.githubusercontent.com/Iamcutehehe/hehehe/main/whitelist.lua"))()
    for _, v1 in pairs(listed) do
        gethwid = game:GetService("RbxAnalyticsService"):GetClientId()
        if gethwid == v1 then
            _G.WhiteListed = true
        end
    end
    userlisted = loadstring(game:HttpGet("https://raw.githubusercontent.com/Iamcutehehe/hehehe/main/wlist.lua"))()
    for _, v2 in pairs(userlisted) do
        if game.Players.LocalPlayer.UserId == v2 then
            _G.WhiteListed = true
        end
    end
    if _G.wqeiqotqrjqwiomcvkfdgewkr == "wqmekwqmoikgmtreiofgmriogermtoigwemroew" then
        _G.WhiteListed = true
    end
anticamp = loadstring(game:HttpGet("https://raw.githubusercontent.com/Iamcutehehe/hehehe/main/golden.lua"))()
    if _G.WhiteListed then
        game:GetService("Workspace").Island8.Table.Chair.Seat.Name = "condimemay"
        _G.chaircframeh = game:GetService("Workspace").Island8.Table.Chair.condimemay.CFrame
        game:GetService("Players").LocalPlayer.PlayerGui.Menu.Frame.C.Frame.Nametag.TextColor3 =
            Color3.fromRGB(0, 255, 127)
        game:GetService("Players").LocalPlayer.PlayerGui.Menu.Frame.C.Frame.Nametag.Text = "Saluna"
        game:GetService("Players").LocalPlayer.PlayerGui.Menu.Frame.C.Frame.Header.Text = "PROTECTED BY:"

        local vu = game:GetService("VirtualUser")
        game:GetService("Players").LocalPlayer.Idled:connect(
            function()
                vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
                wait(1)
                vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
            end
        )

        do
            fishingplace = game:GetService("Workspace"):FindFirstChild("fishingplace")
            if fishingplace then
                fishingplace:Destroy()
            end
        end
        fishingplace = Instance.new("Part", game.Workspace)
        fishingplace.Name = "fishingplace"
        fishingplace.Size = Vector3.new(2, 1, 2)
        fishingplace.Position = Vector3.new((math.random(15000, 20000)), 210, (math.random(15000, 20000)))
        fishingplace.Anchored = true

        do
            safezonedestroyspace = game:GetService("Workspace"):FindFirstChild("SafeZoneOuterSpacePart")
            if safezonedestroyspace then
                safezonedestroyspace:Destroy()
            end
        end
        if game.CoreGui:FindFirstChild("BBB") then
            game.CoreGui:FindFirstChild("BBB"):Destroy()
        end

        SafeZoneOuterSpace = Instance.new("Part", game.Workspace)
        SafeZoneOuterSpace.Name = "SafeZoneOuterSpacePart"
        SafeZoneOuterSpace.Size = Vector3.new(200, 3, 200)
        SafeZoneOuterSpace.Position = Vector3.new((math.random(-100000, -50000)), 10000, (math.random(-100000, -50000)))
        SafeZoneOuterSpace.Anchored = true
        local mta = getrawmetatable(game)
        local namecall = mta.__namecall
        aaxc =
            hookmetamethod(
            game,
            "__namecall",
            function(self, ...)
                local args = {...}
                local method = getnamecallmethod()
                if method == "FireServer" or method == "InvokeServer" then
                    if self.Name == "RemoteEvent" and args[3] == "StopCharging" and _G.auto100rate then
                        args[6] = 100
                        return aaxc(self, unpack(args))
                    end
                end
                return aaxc(self, ...)
            end
        )

        Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
        SaveManager =
            loadstring(
            game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua")
        )()
        InterfaceManager =
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Iamcutehehe/UI_Interface/main/Fluent.lua"))()
        Window =
            Fluent:CreateWindow(
            {
                Title = "SALUNA VIP",
                SubTitle = "Made by Saluna",
                TabWidth = 100,
                Size = UDim2.fromOffset(475, 340),
                Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
                Theme = "Darker",
                MinimizeKey = Enum.KeyCode.F2 -- Used when theres no MinimizeKeybind
            }
        )
        Tabs = {
            Info = Window:AddTab({Title = "About", Icon = "rbxassetid://4871684504"}),
            Main = Window:AddTab({Title = "Stats", Icon = "rbxassetid://8587689304"}),
            Haki = Window:AddTab({Title = "Haki", Icon = "rbxassetid://6523858394"}),
            Weapon = Window:AddTab({Title = "Weapon", Icon = "rbxassetid://7485051715"}),
            Farm = Window:AddTab({Title = "Farming", Icon = "rbxassetid://16397066979"}),
            Fruit = Window:AddTab({Title = "Fruit & Sam", Icon = "rbxassetid://13492316250"}),
            Robbing = Window:AddTab({Title = "Robbing", Icon = "rbxassetid://6947202399"}),
            Affinity = Window:AddTab({Title = "Affinity", Icon = "rbxassetid://13321880274"}),
            Gems = Window:AddTab({Title = "Gems (Risky)", Icon = "rbxassetid://6788518051"}),
            PVP = Window:AddTab({Title = "PVP", Icon = "rbxassetid://2294529381"}),
            Teleport = Window:AddTab({Title = "Teleport", Icon = "rbxassetid://6723742952"}),
            Player = Window:AddTab({Title = "Player", Icon = "rbxassetid://16149111731"}),
            Skill = Window:AddTab({Title = "Skill", Icon = "rbxassetid://18518485889"}),
            Shop = Window:AddTab({Title = "Shop", Icon = "rbxassetid://11385419674"}),
            Automatic = Window:AddTab({Title = "Automatic", Icon = "rbxassetid://11860859170"}),
            Server = Window:AddTab({Title = "Server", Icon = "rbxassetid://7539983773"}),
            Webhook = Window:AddTab({Title = "Webhook", Icon = "rbxassetid://14769727847"}),
            Misc = Window:AddTab({Title = "Misc", Icon = "rbxassetid://16181364687"}),
            Settings = Window:AddTab({Title = "Settings", Icon = "settings"}),
            nonet = Window:AddTab({Title = " ", Icon = ""})
        }
        Options = Fluent.Options

        Tabs.Robbing:AddSection("Fruit Robbing")
        Tabs.Robbing:AddParagraph(
            {
                Title = "NOTE",
                Content = "Only Quake-Robbing can use with Random Teleport"
            }
        )
        robdrop =
            Tabs.Robbing:AddDropdown(
            "robdrop",
            {
                Title = "Robbing Method",
                Values = {"Quake", "Magma", "Flare"},
                Multi = false,
                Default = "Quake"
            }
        )

        robdrop:OnChanged(
            function(dropzxmcc)
                _G.robmethod = dropzxmcc
            end
        )

        robfr = Tabs.Robbing:AddToggle("robfrtoggle", {Title = "Auto Rob Rare/Ultra Fruits", Default = false})
        robfr:OnChanged(
            function()
                if Options.robfrtoggle.Value == true then
                    _G.startrop = true
                else
                    _G.startrop = false
                end
            end
        )

        robfraura = Tabs.Robbing:AddToggle("robfrauratoggle", {Title = "Auto Rob Aura Fruits", Default = false})
        robfraura:OnChanged(
            function()
                if Options.robfrauratoggle.Value == true then
                    _G.startropaura = true
                else
                    _G.startropaura = false
                end
            end
        )

        bringfruit = Tabs.Robbing:AddToggle("bringfruittoggle", {Title = "Auto Bring Fruit", Default = false})
        bringfruit:OnChanged(
            function()
                if Options.bringfruittoggle.Value == true then
                    getgenv().pickkk = true
                else
                    getgenv().pickkk = false
                end

                while getgenv().pickkk do
                    wait(0.1)
                    pcall(
                        function()
                            repeat
                                task.wait()
                                for i, v in pairs(game:GetService("Workspace").Trees.Tree:GetDescendants()) do
                                    if v:IsA("ClickDetector") then
                                        fireclickdetector(v)
                                    end
                                end
                            until not getgenv().pickkk
                        end
                    )
                end
            end
        )

        Tabs.Info:AddSection("Developer/Owner")
        Tabs.Info:AddParagraph(
            {
                Title = "Saluna Hub",
                Content = "This script is belong to Saluna aka Irenkiss Trần. \nFacebook: IrenkissWantPeace \nDiscord: AZ-BrAg#6921 \nWe hope you will have a nice experience by using this script!"
            }
        )

        Tabs.Info:AddSection("Information")
        Tabs.Info:AddParagraph(
            {
                Title = "User Information",
                Content = "Current HWID: " ..
                    game:GetService("RbxAnalyticsService"):GetClientId() ..
                        "\nUser Name: " ..
                            game.Players.LocalPlayer.Character.Name ..
                                "\nUser ID: " .. tostring(game.Players.LocalPlayer.UserId)
            }
        )

        Asset = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
        Tabs.Info:AddParagraph(
            {
                Title = "Server Information",
                Content = "Place Name: " ..
                    Asset.Name .. "\nPlace ID: " .. game.PlaceId .. "\nMax Players: " .. game.Players.MaxPlayers
            }
        )

        Tabs.Gems:AddSection("Dupe Gems (Risky)")
        Tabs.Gems:AddParagraph(
            {
                Title = "Warning When Dupe Gems: ",
                Content = [[Operation:
When you got a bound slot in first page (1st to 12nd), 
You will get refund 3k gems per 1 bound slot.
When you reset stats, The refund function will reset too.
Thus, when you reset stats and rejoin, you will get refund again.]]
            }
        )

        Tabs.Gems:AddButton(
            {
                Title = "Dupe Gems Script",
                Description = "Copy Script To ClipBoard",
                Callback = function()
                    toClipboard(
                        "loadstring(game:HttpGet('https://raw.githubusercontent.com/Iamcutehehe/hehehe/main/ultimate'))()"
                    )
                end
            }
        )

        Tabs.Gems:AddSection("Exchange Gems To Beries (Risky)")
        Tabs.Gems:AddParagraph(
            {
                Title = "Warning When Exchange: ",
                Content = "Operation: Fast Reroll And Claim Challenge12 \n(500 Gems = 100.000 Beries) \nBe careful with your affinities!"
            }
        )

        wqettt =
            Tabs.Gems:AddDropdown(
            "bentauga11",
            {
                Title = "Select Fruit To Exchange",
                Values = {"DFT1", "DFT2"},
                Multi = false,
                Default = ""
            }
        )

        wqettt:OnChanged(
            function(koedpwqbb)
                _G.fruitexchange = koedpwqbb
            end
        )

        exchangett = Tabs.Gems:AddToggle("exchangetttoggle", {Title = "Auto Exchange", Default = false})
        exchangett:OnChanged(
            function()
                if Options.exchangetttoggle.Value == true then
                    _G.exchangegem = true
                    while _G.exchangegem do
                        task.wait()
                        pcall(
                            function()
                                if
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                        "Challenge_12"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Challenge12"
                                    )
                                end
                                repeat
                                    wait()
                                until game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                    "Challenge_12"
                                ].Claim.AutoButtonColor == false

                                for i = 1, 50 do
                                    local args = {
                                        [1] = _G.fruitexchange,
                                        [2] = false,
                                        [3] = false,
                                        [4] = false,
                                        [5] = false,
                                        [6] = "Gems"
                                    }

                                    workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                        "Clickable"
                                    ):WaitForChild("Retum"):FireServer(unpack(args))
                                end

                                repeat
                                    wait()
                                until game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                    "Challenge_12"
                                ].Claim.AutoButtonColor == true
                            end
                        )
                    end
                else
                    _G.exchangegem = false
                end
            end
        )

        Tabs.Misc:AddSection("Other Scripts")

        Tabs.Misc:AddButton(
            {
                Title = "Infinite Yield",
                Description = "Open Infinite Yield Script",
                Callback = function()
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
                end
            }
        )

        Tabs.Misc:AddButton(
            {
                Title = "Remote Spy",
                Description = "Open Remote Spy Script",
                Callback = function()
                    loadstring(
                        game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/SimpleSpyV3/main.lua")
                    )()
                end
            }
        )

        Tabs.Misc:AddSection("Boost")
        Tabs.Misc:AddButton(
            {
                Title = "Low-Graphic Mode",
                Description = "Use to reduce lag",
                Callback = function()
                    Window:Dialog(
                        {
                            Title = "Low-Graphic Mode",
                            Content = "Do you want to use?",
                            Buttons = {
                                {
                                    Title = "OK",
                                    Callback = function()
                                        workspace:FindFirstChildOfClass("Terrain").WaterWaveSize = 0
                                        workspace:FindFirstChildOfClass("Terrain").WaterWaveSpeed = 0
                                        workspace:FindFirstChildOfClass("Terrain").WaterReflectance = 0
                                        workspace:FindFirstChildOfClass("Terrain").WaterTransparency = 0
                                        game:GetService("Lighting").GlobalShadows = false
                                        game:GetService("Lighting").FogEnd = 9e9
                                        settings().Rendering.QualityLevel = 1
                                        for i, v in pairs(game:GetDescendants()) do
                                            if
                                                v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") or
                                                    v:IsA("CornerWedgePart") or
                                                    v:IsA("TrussPart")
                                             then
                                                v.Material = "Plastic"
                                                v.Reflectance = 0
                                            elseif v:IsA("Decal") then
                                                v.Transparency = 1
                                            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                                                v.Lifetime = NumberRange.new(0)
                                            elseif v:IsA("Explosion") then
                                                v.BlastPressure = 1
                                                v.BlastRadius = 1
                                            end
                                        end
                                        for i, v in pairs(game:GetService("Lighting"):GetDescendants()) do
                                            if
                                                v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or
                                                    v:IsA("ColorCorrectionEffect") or
                                                    v:IsA("BloomEffect") or
                                                    v:IsA("DepthOfFieldEffect")
                                             then
                                                v.Enabled = false
                                            end
                                        end
                                        workspace.DescendantAdded:Connect(
                                            function(child)
                                                coroutine.wrap(
                                                    function()
                                                        if child:IsA("ForceField") then
                                                            game:GetService("RunService").Heartbeat:Wait()
                                                            child:Destroy()
                                                        elseif child:IsA("Sparkles") then
                                                            game:GetService("RunService").Heartbeat:Wait()
                                                            child:Destroy()
                                                        elseif child:IsA("Smoke") or child:IsA("Fire") then
                                                            game:GetService("RunService").Heartbeat:Wait()
                                                            child:Destroy()
                                                        end
                                                    end
                                                )()
                                            end
                                        )
                                    end
                                },
                                {
                                    Title = "Cancel",
                                    Callback = function()
                                    end
                                }
                            }
                        }
                    )
                end
            }
        )

        offrender = Tabs.Misc:AddToggle("offrendertoggle", {Title = "Off 3D-Render", Default = false})
        offrender:OnChanged(
            function()
                if Options.offrendertoggle.Value == true then
                    game:GetService("RunService"):Set3dRenderingEnabled(false)
                else
                    game:GetService("RunService"):Set3dRenderingEnabled(true)
                end
            end
        )

        Tabs.Misc:AddSection("Makes Server Lagging")
        miscquake = Tabs.Misc:AddToggle("miscquaketoggle", {Title = "Quake Makes Lag", Default = false})
        miscquake:OnChanged(
            function()
                if Options.miscquaketoggle.Value == true then
                    _G.quakelagmisc = true
                    while _G.quakelagmisc do
                        wait(0.1)
                        pcall(
                            function()
                                repeat
                                    local args = {
                                        [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Quake).VTCebvc,
                                        [2] = "QuakePower1",
                                        [3] = "StopCharging",
                                        [4] = workspace:WaitForChild("IslandTown"):WaitForChild("Runic"):WaitForChild(
                                            "Union"
                                        ),
                                        [5] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,
                                        [6] = 100,
                                        [7] = Vector3.new(150.66384887695312, 230.749755859375, 4937.19677734375)
                                    }

                                    game:GetService("Players").LocalPlayer.Character.Powers.Quake.RemoteEvent:FireServer(
                                        unpack(args)
                                    )
                                    task.wait(0.06)
                                until _G.quakelagmisc == false
                            end
                        )
                    end
                else
                    _G.quakelagmisc = false
                end
            end
        )

        Tabs.Misc:AddSection("Misc")
        Tabs.Misc:AddButton(
            {
                Title = "Fix Chair's CFrame",
                Description = "Reset Chair's CFrame",
                Callback = function()
                    game:GetService("Workspace").Island8.Table.Chair.condimemay.CFrame = _G.chaircframeh
                end
            }
        )

        Tabs.Player:AddSection("About Player")

        plrts =
            Tabs.Player:AddInput(
            "plrts",
            {
                Title = "Choose Player:",
                Default = game.Players.LocalPlayer.Name,
                Placeholder = "Insert Here",
                Numeric = false, -- Only allows numbers
                Finished = true, -- Only calls callback when you press enter
                Callback = function()
                end
            }
        )
        plrts:OnChanged(
            function()
                _G.SelectedKillPlayer = ""
                _G.plrlow = string.lower(tostring(plrts.Value))
                _G.plrnum = string.len(_G.plrlow)
                wait()
                for i, e in pairs(game.Players:GetChildren()) do
                    _G.anh = tostring(e.Name)
                    _G.plrchoose = string.lower(string.sub(_G.anh, 1, _G.plrnum))
                    if _G.plrlow == _G.plrchoose then
for i,vista in pairs(anticamp) do
if not string.find(vista, _G.anh) then
                        _G.SelectedKillPlayer = _G.anh
elseif string.find(vista, _G.anh) then
                            Fluent:Notify(
                                {
                                    Title = "Saluna Camp Notify",
                                    Content = _G.anh.." Is An Anti-Camp Target",
                                    Duration = 8
                                }
                            )
end
end
                    end
                end
            end
        )

        targetallpcho =
            Tabs.Player:AddToggle("targetallpchotoggle", {Title = "Target All Spawned Player", Default = false})
        targetallpcho:OnChanged(
            function()
                if Options.targetallpchotoggle.Value == true then
                    getgenv().targeting = true
                else
                    getgenv().targeting = false
                end

                while getgenv().targeting do
                    wait(0.1)
                    pcall(
                        function()
                            for i, v in pairs(game.Players:GetChildren()) do
                                if v.Name ~= game.Players.LocalPlayer.Name then
                                    for i, c in pairs(game.Workspace:GetChildren()) do
                                        if
                                            getgenv().targeting == true and c:IsA("Model") and c.Name == v.Name and
                                                c.HumanoidRootPart.Position.Y < 211000
                                         then
                                            repeat
                                                wait()
                                                _G.SelectedKillPlayer = c.Name
                                            until not getgenv().targeting or
                                                not game.Players:FindFirstChild(_G.SelectedKillPlayer) or
                                                game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.Humanoid.Health ==
                                                    0
                                        end
                                    end
                                end
                            end
                            _G.SelectedKillPlayer = ""
                        end
                    )
                end
            end
        )
        Tabs.Player:AddSection("Players' Stuff")
        viewplr = Tabs.Player:AddToggle("viewplrtoggle", {Title = "View Chosen Player", Default = false})
        viewplr:OnChanged(
            function()
                if Options.viewplrtoggle.Value == true then
                    getgenv().viewplrr = true
                else
                    getgenv().viewplrr = false
                end
            end
        )

        Tabs.Player:AddButton(
            {
                Title = "Fix Cam",
                Description = "Reset Camera (If Error)",
                Callback = function()
                    workspace.CurrentCamera:remove()
                    wait(.1)
                    repeat
                        wait()
                    until game.Players.LocalPlayer.Character ~= nil
                    workspace.CurrentCamera.CameraSubject =
                        game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
                    workspace.CurrentCamera.CameraType = "Custom"
                    game.Players.LocalPlayer.CameraMinZoomDistance = 0.5
                    game.Players.LocalPlayer.CameraMaxZoomDistance = 400
                    game.Players.LocalPlayer.CameraMode = "Classic"
                    game.Players.LocalPlayer.Character.Head.Anchored = false
                end
            }
        )
        Tabs.Player:AddButton(
            {
                Title = "Teleport To Player",
                Description = "Teleport To Chosen Player",
                Callback = function()
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.HumanoidRootPart.CFrame
                end
            }
        )
        Tabs.PVP:AddSection("Anti-Stuff")
        antistunz = Tabs.PVP:AddToggle("antistunztoggle", {Title = "Anti DF_Disabled", Default = false})
        antistunz:OnChanged(
            function()
                if Options.antistunztoggle.Value == true then
                    _G.autostun = true
                    while _G.autostun do
                        wait()
                        pcall(
                            function()
                                game.Players.LocalPlayer.Character.HMS.Value = false
                                game.Players.LocalPlayer.Character["DF_Disabled"].Value = false
                                game.Players.LocalPlayer.Character.SanguineVampiris.Value = true
                            end
                        )
                    end
                else
                    _G.autostun = false
                    for i = 1, 2 do
                        wait(0.2)
                        game.Players.LocalPlayer.Character.SanguineVampiris.Value = false
                    end
                end
            end
        )

        Tabs.PVP:AddSection("Skills")
        azxcwwwcarge = Tabs.PVP:AddToggle("azxcwwwcargetoggle", {Title = "100% Charging", Default = false})
        azxcwwwcarge:OnChanged(
            function()
                if Options.azxcwwwcargetoggle.Value == true then
                    _G.auto100rate = true
                else
                    _G.auto100rate = false
                end
            end
        )

        Tabs.PVP:AddSection("Players' Sight")
        plresp = Tabs.PVP:AddToggle("plresptoggle", {Title = "Esp Players", Default = false})
        plresp:OnChanged(
            function()
                if Options.plresptoggle.Value == true then
                    ESPPlayer = true
                else
                    ESPPlayer = false
                end
            end
        )

        function isnil(thing)
            return (thing == nil)
        end
        local function round(n)
            return math.floor(tonumber(n) + 0.5)
        end
        Number = math.random(1, 1000000)
        function UpdatePlayerChams()
            for i, v in pairs(game:GetService "Players":GetChildren()) do
                if v.Name ~= game.Players.LocalPlayer.Name then
                    pcall(
                        function()
                            if not isnil(v.Character) then
                                if ESPPlayer then
                                    if
                                        not isnil(v.Character.Head) and
                                            not v.Character.Head:FindFirstChild("NameEsp" .. Number)
                                     then
                                        local bill = Instance.new("BillboardGui", v.Character.Head)
                                        bill.Name = "NameEsp" .. Number
                                        bill.ExtentsOffset = Vector3.new(0, 1, 0)
                                        bill.Size = UDim2.new(1, 200, 1, 30)
                                        bill.Adornee = v.Character.Head
                                        bill.AlwaysOnTop = true
                                        local name = Instance.new("TextLabel", bill)
                                        name.FontFace = Font.fromName("Merriweather")
                                        name.FontSize = "Size14"
                                        name.TextWrapped = true
                                        name.Text =
                                            (v.Name ..
                                            " \n" ..
                                                round(
                                                    (game:GetService("Players").LocalPlayer.Character.Head.Position -
                                                        v.Character.Head.Position).Magnitude / 3
                                                ) ..
                                                    " m")
                                        name.Size = UDim2.new(1, 0, 1, 0)
                                        name.TextYAlignment = "Top"
                                        name.BackgroundTransparency = 1
                                        name.TextStrokeTransparency = 0.5
                                        if v.Team == game.Players.LocalPlayer.Team then
                                            name.TextColor3 = Color3.fromRGB(0, 255, 127)
                                        else
                                            name.TextColor3 = Color3.fromRGB(0, 255, 127)
                                        end
                                    else
                                        v.Character.Head["NameEsp" .. Number].TextLabel.Text =
                                            (v.Name ..
                                            "   \n" ..
                                                round(
                                                    (game:GetService("Players").LocalPlayer.Character.Head.Position -
                                                        v.Character.Head.Position).Magnitude / 3
                                                ) ..
                                                    " m")
                                    end
                                end
                            end
                        end
                    )
                end
            end
        end

        sizehahaqw =
            Tabs.PVP:AddSlider(
            "sizehahaqwqweqwzz",
            {
                Title = "HitBox Players",
                Description = "Adjust players' hitbox",
                Default = 10,
                Min = 0,
                Max = 250,
                Rounding = 0,
                Callback = function(concachitbox)
                    fathitbox = tonumber(concachitbox)
                end
            }
        )

        hitboxasdmpo = Tabs.PVP:AddToggle("hitboxasdmpotoggle", {Title = "Hitbox Players", Default = false})
        hitboxasdmpo:OnChanged(
            function()
                if Options.hitboxasdmpotoggle.Value == true then
                    _G.Hitboxplr = true
                else
                    _G.Hitboxplr = false
                end
            end
        )

        Tabs.Player:AddSection("Bring Player")

        bringdis =
            Tabs.Player:AddSlider(
            "bringsl",
            {
                Title = "Bring Distance",
                Description = "Adjust bring distance",
                Default = 4,
                Min = -20,
                Max = 20,
                Rounding = 0,
                Callback = function(dis1t)
                    distancebring = tonumber(dis1t) * (-1)
                end
            }
        )

        disbring1aa = Tabs.Player:AddToggle("disbring1aatoggle", {Title = "Bring Chosen Player", Default = false})
        disbring1aa:OnChanged(
            function()
                if Options.disbring1aatoggle.Value == true then
                    _G.BringPlayer = true
                    while _G.BringPlayer do
                        wait(0.1)
                        pcall(
                            function()
                                repeat
                                    task.wait()
                                    game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.HumanoidRootPart.CFrame =
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame *
                                        CFrame.new(0, 0, distancebring)
                                    if
                                        game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.HumanoidRootPart.Anchored ==
                                            false
                                     then
                                        game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.HumanoidRootPart.Anchored =
                                            true
                                    end
                                until not _G.BringPlayer
                                if
                                    game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.HumanoidRootPart.Anchored ==
                                        true
                                 then
                                    game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.HumanoidRootPart.Anchored =
                                        false
                                end
                            end
                        )
                    end
                else
                    _G.BringPlayer = false
                end
            end
        )

        disbringallplr = Tabs.Player:AddToggle("disbringallplrtoggle", {Title = "Bring All Player", Default = false})
        disbringallplr:OnChanged(
            function()
                if Options.disbringallplrtoggle.Value == true then
                    _G.BringAllPlayer = true
                    while _G.BringAllPlayer do
                        wait(0.1)
                        pcall(
                            function()
                                repeat
                                    task.wait()
                                    for i, v in pairs(game.Players:GetChildren()) do
                                        if v.Name ~= game.Players.LocalPlayer.Name then
                                            v.Character.HumanoidRootPart.CFrame =
                                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame *
                                                CFrame.new(0, 0, distancebring)
                                            if v.Character.HumanoidRootPart.Anchored == false then
                                                v.Character.HumanoidRootPart.Anchored = true
                                            end
                                        end
                                    end
                                until not _G.BringAllPlayer
                                for i, v in pairs(game.Players:GetChildren()) do
                                    if v.Character.HumanoidRootPart.Anchored == true then
                                        v.Character.HumanoidRootPart.Anchored = false
                                    end
                                end
                            end
                        )
                    end
                else
                    _G.BringAllPlayer = false
                end
            end
        )

        Tabs.Player:AddSection("Non-Teleport Camp")
        quakecampchose = Tabs.Player:AddToggle("quakecampchosetoggle", {Title = "Quake Camp", Default = false})
        quakecampchose:OnChanged(
            function()
                if Options.quakecampchosetoggle.Value == true then
                    _G.AutoQuake = true
                    while _G.AutoQuake do
                        wait(0.1)
                        pcall(
                            function()
                                repeat
                                    game:GetService("Players").LocalPlayer.Character.Powers.Quake.RemoteEvent:FireServer(
                                        getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Quake).VTCebvc,
                                        "QuakePower4",
                                        "StopCharging",
                                        workspace.IslandCaver.Stones.Stone,
                                        game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.HumanoidRootPart.CFrame,
                                        100,
                                        Vector3.new(-290.4129333496094, 266.8401794433594, -103.8988037109375)
                                    )
                                    task.wait(0.06)
                                until _G.AutoQuake == false
                            end
                        )
                    end
                else
                    _G.AutoQuake = false
                end
            end
        )

        stringggg = Tabs.Player:AddToggle("stringgggtoggle", {Title = "String Camp", Default = false})
        stringggg:OnChanged(
            function()
                if Options.stringgggtoggle.Value == true then
                    _G.CampString = true
                else
                    _G.CampString = false
                end
            end
        )

        Tabs.Player:AddSection("Teleport Camp")
        cvbvfsx =
            Tabs.Player:AddSlider(
            "gkhlsmxxx",
            {
                Title = "Teleport Distance",
                Description = "Change this for adjusting camp distance",
                Default = 15,
                Min = 0,
                Max = 100,
                Rounding = 0,
                Callback = function(distancecagreva)
                    campdis = tonumber(distancecagreva)
                end
            }
        )

        asdzx =
            Tabs.Player:AddDropdown(
            "asdzx",
            {
                Title = "Tele Method",
                Values = {"Above", "Behind"},
                Multi = false,
                Default = "Above"
            }
        )

        asdzx:OnChanged(
            function(fuckasdzz)
                _G.telecamethod = fuckasdzz
            end
        )

        aweopcz = Tabs.Player:AddToggle("aweopcztoggle", {Title = "Auto Teleport To Camp   (*)", Default = false})
        aweopcz:OnChanged(
            function()
                if Options.aweopcztoggle.Value == true then
                    _G.wqesorry = true
                    while _G.wqesorry do
                        task.wait()
                        pcall(
                            function()
                                if game.Players:FindFirstChild(_G.SelectedKillPlayer) then
                                    if
                                        game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.HumanoidRootPart.Position.Y >
                                            200 and _G.telecamethod == "Behind"
                                     then
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                            game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.HumanoidRootPart.CFrame *
                                            CFrame.new(0, 0, campdis)
                                    elseif
                                        game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.HumanoidRootPart.Position.Y >
                                            200 and _G.telecamethod == "Above"
                                     then
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                            game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.HumanoidRootPart.CFrame *
                                            CFrame.new(0, campdis, 0)
                                    elseif
                                        game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.HumanoidRootPart.Position.Y <
                                            200
                                     then
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                            game:GetService("Workspace")["SafeZoneOuterSpacePart"].CFrame *
                                            CFrame.new(0, 5, 0)
                                    end
                                elseif not game.Players:FindFirstChild(_G.SelectedKillPlayer) then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        game:GetService("Workspace")["SafeZoneOuterSpacePart"].CFrame *
                                        CFrame.new(0, 5, 0)
                                end
                            end
                        )
                    end
                else
                    _G.wqesorry = false
                end
            end
        )

        darksec = Tabs.Player:AddToggle("darksectoggle", {Title = "Dark Camp", Default = false})
        darksec:OnChanged(
            function()
                if Options.darksectoggle.Value == true then
                    _G.CampDark = true
                    while _G.CampDark do
                        wait(0.1)
                        pcall(
                            function()
                                for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
                                    if v.Name == _G.SelectedKillPlayer and _G.CampDark == true then
                                        pcall(
                                            function()
                                                repeat
                                                    x =
                                                        getsenv(
                                                        game:GetService("Players").LocalPlayer.Character.Powers.Dark
                                                    )
                                                    vtcccq = x.VTCjebaj
                                                    local args = {
                                                        [1] = vtcccq,
                                                        [2] = "DarkPower4",
                                                        [3] = "StartCharging",
                                                        [4] = CFrame.new(
                                                            -102.340569,
                                                            213,
                                                            215.227097,
                                                            -0.982314944,
                                                            -0.125758141,
                                                            0.138716429,
                                                            -0,
                                                            0.74086374,
                                                            0.671655476,
                                                            -0.187236086,
                                                            0.659777224,
                                                            -0.727761507
                                                        ),
                                                        [5] = workspace:WaitForChild("IslandWindmill"):WaitForChild(
                                                            "OutterDune"
                                                        ):WaitForChild("Beach"),
                                                        [7] = "Right"
                                                    }

                                                    game:GetService("Players").LocalPlayer.Character.Powers.Dark.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                    task.wait(0.05)
                                                    local args = {
                                                        [1] = vtcccq,
                                                        [2] = "DarkPower4",
                                                        [3] = "StopCharging",
                                                        [4] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame *
                                                            CFrame.new(0, 100, 0),
                                                        [5] = workspace:WaitForChild("IslandGrassy"):WaitForChild(
                                                            "Base"
                                                        ):WaitForChild("Path"):WaitForChild("Union"),
                                                        [6] = 100
                                                    }

                                                    game:GetService("Players").LocalPlayer.Character.Powers.Dark.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                until not _G.CampDark or
                                                    not game.Players:FindFirstChild(SelectedKillPlayer)
                                            end
                                        )
                                    end
                                end
                            end
                        )
                    end
                else
                    _G.CampDark = false
                end
            end
        )

        vamppppp = Tabs.Player:AddToggle("vamppppptoggle", {Title = "Vamp Camp", Default = false})
        vamppppp:OnChanged(
            function()
                if Options.vamppppptoggle.Value == true then
                    _G.CampVamp = true
                    while _G.CampVamp do
                        wait(0.1)
                        pcall(
                            function()
                                for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
                                    if v.Name == _G.SelectedKillPlayer and _G.CampVamp == true then
                                        pcall(
                                            function()
                                                repeat
                                                    wait()
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Vampire
                                                        ).VTCjwf,
                                                        [2] = "VampirePower5",
                                                        [3] = "StartCharging",
                                                        [4] = CFrame.new(
                                                            -391.38922119140625,
                                                            213,
                                                            -232.140625,
                                                            0.5274614095687866,
                                                            -0.7214826345443726,
                                                            0.4486061632633209,
                                                            -1.4901161193847656e-08,
                                                            0.5280334949493408,
                                                            0.8492236733436584,
                                                            -0.8495790362358093,
                                                            -0.44793272018432617,
                                                            0.2785172760486603
                                                        ),
                                                        [5] = workspace:WaitForChild("IslandWindmill"):WaitForChild(
                                                            "Beach"
                                                        ):WaitForChild("Beach"),
                                                        [9] = "Left"
                                                    }

                                                    game:GetService("Players").LocalPlayer.Character.Powers.Vampire.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                    task.wait(0.05)
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Vampire
                                                        ).VTCjwf,
                                                        [2] = "VampirePower5",
                                                        [3] = "StopCharging",
                                                        [4] = v.HumanoidRootPart.CFrame,
                                                        [5] = workspace:WaitForChild("IslandWindmill"):WaitForChild(
                                                            "OutterDune"
                                                        ):WaitForChild("Beach"),
                                                        [6] = 100
                                                    }

                                                    game:GetService("Players").LocalPlayer.Character.Powers.Vampire.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                until not _G.CampVamp or
                                                    not game.Players:FindFirstChild(SelectedKillPlayer)
                                            end
                                        )
                                    end
                                end
                            end
                        )
                    end
                else
                    _G.CampVamp = false
                end
            end
        )

        magmamgggg = Tabs.Player:AddToggle("magmamggggtoggle", {Title = "Magma Camp", Default = false})
        magmamgggg:OnChanged(
            function()
                if Options.magmamggggtoggle.Value == true then
                    _G.CampMagma = true
                    while _G.CampMagma do
                        wait(0.1)
                        pcall(
                            function()
                                for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
                                    if v.Name == _G.SelectedKillPlayer and _G.CampMagma == true then
                                        pcall(
                                            function()
                                                repeat
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Magma
                                                        ).VTCmel,
                                                        [2] = "MagmaPower1",
                                                        [3] = "StartCharging",
                                                        [4] = CFrame.new(
                                                            -123.28974914550781,
                                                            213,
                                                            -871.10595703125,
                                                            0.9992225766181946,
                                                            -0.009072019718587399,
                                                            0.038368139415979385,
                                                            -0,
                                                            0.9731666445732117,
                                                            0.23010201752185822,
                                                            -0.03942607715725899,
                                                            -0.22992312908172607,
                                                            0.9724099040031433
                                                        ),
                                                        [5] = workspace:WaitForChild("IslandTown"):WaitForChild("Beach"):WaitForChild(
                                                            "Beach"
                                                        ),
                                                        [7] = "Right"
                                                    }

                                                    game:GetService("Players").LocalPlayer.Character.Powers.Magma.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                    task.wait(0.05)
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Magma
                                                        ).VTCmel,
                                                        [2] = "MagmaPower1",
                                                        [3] = "StopCharging",
                                                        [4] = v.HumanoidRootPart.CFrame,
                                                        [5] = workspace:WaitForChild("IslandTown"):WaitForChild("Beach"):WaitForChild(
                                                            "Beach"
                                                        ),
                                                        [6] = 100
                                                    }

                                                    game:GetService("Players").LocalPlayer.Character.Powers.Magma.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                until not _G.CampMagma or
                                                    not game.Players:FindFirstChild(SelectedKillPlayer)
                                            end
                                        )
                                    end
                                end
                            end
                        )
                    end
                else
                    _G.CampMagma = false
                end
            end
        )

        flareee = Tabs.Player:AddToggle("flareeetoggle", {Title = "Flare Camp", Default = false})
        flareee:OnChanged(
            function()
                if Options.flareeetoggle.Value == true then
                    _G.CampFlare = true
                    while _G.CampFlare do
                        wait(0.1)
                        pcall(
                            function()
                                for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
                                    if v.Name == _G.SelectedKillPlayer and _G.CampFlare == true then
                                        pcall(
                                            function()
                                                repeat
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Flare
                                                        ).VTCmgwcm,
                                                        [2] = "FlarePower2",
                                                        [3] = "StartCharging",
                                                        [4] = CFrame.new(
                                                            -143.0747833251953,
                                                            218,
                                                            -994.1463012695312,
                                                            0.9986038208007812,
                                                            -0.013327144086360931,
                                                            0.051116567105054855,
                                                            9.313225746154785e-10,
                                                            0.9676525592803955,
                                                            0.2522869408130646,
                                                            -0.05282533913850784,
                                                            -0.2519347071647644,
                                                            0.966301441192627
                                                        ),
                                                        [5] = workspace:WaitForChild("IslandTown"):WaitForChild(
                                                            "GrassUplift"
                                                        ):WaitForChild("Union"),
                                                        [7] = "Left"
                                                    }

                                                    game:GetService("Players").LocalPlayer.Character.Powers.Flare.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                    task.wait(0.05)
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Flare
                                                        ).VTCmgwcm,
                                                        [2] = "FlarePower2",
                                                        [3] = "StopCharging",
                                                        [4] = v.HumanoidRootPart.CFrame,
                                                        [5] = workspace:WaitForChild("IslandTown"):WaitForChild(
                                                            "GrassUplift"
                                                        ):WaitForChild("Union"),
                                                        [6] = 100
                                                    }

                                                    game:GetService("Players").LocalPlayer.Character.Powers.Flare.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                until not _G.CampFlare or
                                                    not game.Players:FindFirstChild(SelectedKillPlayer)
                                            end
                                        )
                                    end
                                end
                            end
                        )
                    end
                else
                    _G.CampFlare = false
                end
            end
        )

        snowww = Tabs.Player:AddToggle("snowwwtoggle", {Title = "Snow Camp", Default = false})
        snowww:OnChanged(
            function()
                if Options.snowwwtoggle.Value == true then
                    _G.CampSnow = true
                    while _G.CampSnow do
                        wait(0.1)
                        pcall(
                            function()
                                for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
                                    if v.Name == _G.SelectedKillPlayer and _G.CampSnow == true then
                                        pcall(
                                            function()
                                                repeat
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Snow
                                                        ).VTCqkxtn,
                                                        [2] = "SnowPower9",
                                                        [3] = "StartCharging",
                                                        [4] = CFrame.new(
                                                            709.24609375,
                                                            238,
                                                            1224.901611328125,
                                                            -0.9550395011901855,
                                                            -0.07896141707897186,
                                                            0.28577059507369995,
                                                            -5.080631026999072e-09,
                                                            0.9638818502426147,
                                                            0.26633062958717346,
                                                            -0.29647889733314514,
                                                            0.2543562650680542,
                                                            -0.9205450415611267
                                                        ),
                                                        [5] = workspace:WaitForChild("IslandGrassy"):WaitForChild(
                                                            "Base"
                                                        ):WaitForChild("DirtGrass"):WaitForChild("Grass"):WaitForChild(
                                                            "Grass"
                                                        ),
                                                        [9] = "Right"
                                                    }

                                                    game:GetService("Players").LocalPlayer.Character.Powers.Snow.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                    task.wait(0.05)
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Snow
                                                        ).VTCqkxtn,
                                                        [2] = "SnowPower9",
                                                        [3] = "StopCharging",
                                                        [4] = v.HumanoidRootPart.CFrame,
                                                        [5] = workspace:WaitForChild("IslandGrassy"):WaitForChild(
                                                            "Base"
                                                        ):WaitForChild("DirtGrass"):WaitForChild("Grass"):WaitForChild(
                                                            "Grass"
                                                        ),
                                                        [6] = 100,
                                                        [7] = 100
                                                    }

                                                    game:GetService("Players").LocalPlayer.Character.Powers.Snow.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                until not _G.CampSnow or
                                                    not game.Players:FindFirstChild(SelectedKillPlayer)
                                            end
                                        )
                                    end
                                end
                            end
                        )
                    end
                else
                    _G.CampSnow = false
                end
            end
        )

        chilll = Tabs.Player:AddToggle("chillltoggle", {Title = "Chilly Camp", Default = false})
        chilll:OnChanged(
            function()
                if Options.chillltoggle.Value == true then
                    _G.CampChilly = true
                    while _G.CampChilly do
                        wait(0.1)
                        pcall(
                            function()
                                for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
                                    if v.Name == _G.SelectedKillPlayer and _G.CampChilly == true then
                                        pcall(
                                            function()
                                                repeat
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Chilly
                                                        ).VTCewddsfe,
                                                        [2] = "ChillyPower5",
                                                        [3] = "StartCharging",
                                                        [4] = CFrame.new(
                                                            -1084.59033,
                                                            -9763.44336,
                                                            501.375885,
                                                            -0,
                                                            0.995015204,
                                                            0.0997241139,
                                                            0.0880244896,
                                                            -0.099337019,
                                                            0.991152883,
                                                            0.996118307,
                                                            0.00877816416,
                                                            -0.08758571
                                                        ),
                                                        [5] = workspace:WaitForChild("IslandPirate"):WaitForChild(
                                                            "Base"
                                                        ):WaitForChild("Beach"),
                                                        [7] = "Right"
                                                    }

                                                    game:GetService("Players").LocalPlayer.Character.Powers.Chilly.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                    task.wait(0.05)
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Chilly
                                                        ).VTCewddsfe,
                                                        [2] = "ChillyPower5",
                                                        [3] = "StopCharging",
                                                        [4] = v.HumanoidRootPart.CFrame,
                                                        [5] = workspace:WaitForChild("IslandPirate"):WaitForChild(
                                                            "Base"
                                                        ):WaitForChild("Beach"),
                                                        [6] = 100
                                                    }

                                                    game:GetService("Players").LocalPlayer.Character.Powers.Chilly.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                until not _G.CampChilly or
                                                    not game.Players:FindFirstChild(SelectedKillPlayer)
                                            end
                                        )
                                    end
                                end
                            end
                        )
                    end
                else
                    _G.CampChilly = false
                end
            end
        )

        bombbbb = Tabs.Player:AddToggle("bombbbbtoggle", {Title = "Bomb Camp", Default = false})
        bombbbb:OnChanged(
            function()
                if Options.bombbbbtoggle.Value == true then
                    _G.CampBomb = true
                    while _G.CampBomb do
                        wait(0.1)
                        pcall(
                            function()
                                for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
                                    if v.Name == _G.SelectedKillPlayer and _G.CampBomb == true then
                                        pcall(
                                            function()
                                                repeat
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Bomb
                                                        ).VTCcpkghc,
                                                        [2] = "BombPower5",
                                                        [3] = "StartCharging",
                                                        [4] = CFrame.new(
                                                            -1039.5162353515625,
                                                            214,
                                                            1886.921875,
                                                            0.2717759311199188,
                                                            0.3374144434928894,
                                                            -0.9012709856033325,
                                                            -0,
                                                            0.9365211129188538,
                                                            0.35061126947402954,
                                                            0.9623605608940125,
                                                            -0.09528770297765732,
                                                            0.254523903131485
                                                        ),
                                                        [5] = workspace:WaitForChild("IslandCaver"):WaitForChild(
                                                            "Grass"
                                                        ):WaitForChild("Grass"),
                                                        [7] = "Left"
                                                    }

                                                    game:GetService("Players").LocalPlayer.Character.Powers.Bomb.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                    task.wait(0.05)
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Bomb
                                                        ).VTCcpkghc,
                                                        [2] = "BombPower5",
                                                        [3] = "StopCharging",
                                                        [4] = v.HumanoidRootPart.CFrame,
                                                        [5] = workspace:WaitForChild("IslandCaver"):WaitForChild(
                                                            "Grass"
                                                        ):WaitForChild("Grass"),
                                                        [6] = 100
                                                    }

                                                    game:GetService("Players").LocalPlayer.Character.Powers.Bomb.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                until not _G.CampBomb or
                                                    not game.Players:FindFirstChild(SelectedKillPlayer)
                                            end
                                        )
                                    end
                                end
                            end
                        )
                    end
                else
                    _G.CampBomb = false
                end
            end
        )

        lightsec = Tabs.Player:AddToggle("lightsectoggle", {Title = "Light Camp", Default = false})
        lightsec:OnChanged(
            function()
                if Options.lightsectoggle.Value == true then
                    _G.CampLight = true
                    while _G.CampLight do
                        wait(0.1)
                        pcall(
                            function()
                                for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
                                    if v.Name == _G.SelectedKillPlayer and _G.CampLight == true then
                                        pcall(
                                            function()
                                                repeat
                                                    x =
                                                        getsenv(
                                                        game:GetService("Players").LocalPlayer.Character.Powers.Light
                                                    )
                                                    lightcode = x.VTCrv
                                                    game:GetService("Players").LocalPlayer.Character.Powers.Light.RemoteEvent:FireServer(
                                                        lightcode,
                                                        "LightPower2",
                                                        "StartCharging",
                                                        CFrame.new(
                                                            Vector3.new(
                                                                -1037.58544921875,
                                                                215.7229461669922,
                                                                -5000.449951171875
                                                            ),
                                                            Vector3.new(
                                                                -0.7139230966567993,
                                                                -0.5779988169670105,
                                                                0.39526084065437317
                                                            )
                                                        ),
                                                        workspace.IslandCaver.Stones.Stone,
                                                        100
                                                    )
                                                    task.wait(0.05)
                                                    local args = {
                                                        [1] = lightcode,
                                                        [2] = "LightPower2",
                                                        [3] = "StopCharging",
                                                        [4] = v.HumanoidRootPart.CFrame,
                                                        [5] = workspace.IslandCaver.Stones.Stone,
                                                        [6] = 100
                                                    }

                                                    game:GetService("Players").LocalPlayer.Character.Powers.Light.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                until not _G.CampLight or
                                                    not game.Players:FindFirstChild(SelectedKillPlayer)
                                            end
                                        )
                                    end
                                end
                            end
                        )
                    end
                else
                    _G.CampLight = false
                end
            end
        )

        plasmasec = Tabs.Player:AddToggle("plasmasectoggle", {Title = "Plasma Camp", Default = false})
        plasmasec:OnChanged(
            function()
                if Options.plasmasectoggle.Value == true then
                    _G.CampPlasma = true
                    while _G.CampPlasma do
                        wait(0.1)
                        pcall(
                            function()
                                for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
                                    if v.Name == _G.SelectedKillPlayer and _G.CampPlasma == true then
                                        pcall(
                                            function()
                                                repeat
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Plasma
                                                        ).VTCpwd,
                                                        [2] = "PlasmaPower4",
                                                        [3] = "StartCharging",
                                                        [4] = Vector3.new(720, 238, 1194)
                                                    }
                                                    game:GetService("Players").LocalPlayer.Character.Powers.Plasma.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                    task.wait(0.08)
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Plasma
                                                        ).VTCpwd,
                                                        [2] = "PlasmaPower4",
                                                        [3] = "Attack",
                                                        [4] = Vector3.new(
                                                            v.HumanoidRootPart.Position.X,
                                                            v.HumanoidRootPart.Position.Y,
                                                            v.HumanoidRootPart.Position.Z
                                                        ),
                                                        [5] = game:GetService("Players"):WaitForChild(
                                                            _G.SelectedKillPlayer
                                                        ).Character.HumanoidRootPart,
                                                        [6] = 100
                                                    }
                                                    game:GetService("Players").LocalPlayer.Character.Powers.Plasma.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Plasma
                                                        ).VTCpwd,
                                                        [2] = "PlasmaPower4",
                                                        [3] = "Attack",
                                                        [4] = Vector3.new(
                                                            v.HumanoidRootPart.Position.X,
                                                            v.HumanoidRootPart.Position.Y,
                                                            v.HumanoidRootPart.Position.Z
                                                        ),
                                                        [5] = game:GetService("Players"):WaitForChild(
                                                            _G.SelectedKillPlayer
                                                        ).Character.HumanoidRootPart,
                                                        [6] = 100
                                                    }
                                                    game:GetService("Players").LocalPlayer.Character.Powers.Plasma.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Plasma
                                                        ).VTCpwd,
                                                        [2] = "PlasmaPower4",
                                                        [3] = "Attack",
                                                        [4] = Vector3.new(
                                                            v.HumanoidRootPart.Position.X,
                                                            v.HumanoidRootPart.Position.Y,
                                                            v.HumanoidRootPart.Position.Z
                                                        ),
                                                        [5] = game:GetService("Players"):WaitForChild(
                                                            _G.SelectedKillPlayer
                                                        ).Character.HumanoidRootPart,
                                                        [6] = 100
                                                    }
                                                    game:GetService("Players").LocalPlayer.Character.Powers.Plasma.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                until not _G.CampPlasma or
                                                    not game.Players:FindFirstChild(SelectedKillPlayer)
                                            end
                                        )
                                    end
                                end
                            end
                        )
                    end
                else
                    _G.CampPlasma = false
                end
            end
        )

        phoenixsec = Tabs.Player:AddToggle("phoenixsectoggle", {Title = "Phoenix Camp", Default = false})
        phoenixsec:OnChanged(
            function()
                if Options.phoenixsectoggle.Value == true then
                    _G.CampPhoenix = true
                    while _G.CampPhoenix do
                        wait(0.1)
                        pcall(
                            function()
                                for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
                                    if v.Name == _G.SelectedKillPlayer and _G.CampPhoenix == true then
                                        pcall(
                                            function()
                                                repeat
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Phoenix
                                                        ).VTCytb,
                                                        [2] = "PhoenixPower9",
                                                        [3] = "StartCharging",
                                                        [4] = CFrame.new(
                                                            690.3527221679688,
                                                            238.20001220703125,
                                                            1188.52685546875,
                                                            -0.2054780274629593,
                                                            -0.3733275532722473,
                                                            0.9046576023101807,
                                                            1.4742429499392529e-10,
                                                            0.9243822693824768,
                                                            0.38146740198135376,
                                                            -0.9786617159843445,
                                                            0.07838317006826401,
                                                            -0.18994025886058807
                                                        ),
                                                        [5] = workspace:WaitForChild("IslandGrassy"):WaitForChild(
                                                            "Base"
                                                        ):WaitForChild("Path"):WaitForChild("Union"),
                                                        [7] = "Right"
                                                    }

                                                    game:GetService("Players").LocalPlayer.Character.Powers.Phoenix.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                    task.wait(0.05)
                                                    local args = {
                                                        [1] = getsenv(
                                                            game:GetService("Players").LocalPlayer.Character.Powers.Phoenix
                                                        ).VTCytb,
                                                        [2] = "PhoenixPower9",
                                                        [3] = "StopCharging",
                                                        [4] = v.HumanoidRootPart.CFrame,
                                                        [5] = workspace:WaitForChild("IslandGrassy"):WaitForChild(
                                                            "Base"
                                                        ):WaitForChild("Path"):WaitForChild("Union"),
                                                        [6] = 100
                                                    }

                                                    game:GetService("Players").LocalPlayer.Character.Powers.Phoenix.RemoteEvent:FireServer(
                                                        unpack(args)
                                                    )
                                                until not _G.CampPhoenix or
                                                    not game.Players:FindFirstChild(SelectedKillPlayer)
                                            end
                                        )
                                    end
                                end
                            end
                        )
                    end
                else
                    _G.CampPhoenix = false
                end
            end
        )

        Tabs.Shop:AddSection("Drinks")

        drinkstype =
            Tabs.Shop:AddDropdown(
            "banlongdiem",
            {
                Title = "Select Drinks",
                Values = {"Smoothie", "Cider", "Juice", "Lemonade", "Smoothie+", "Cider+", "Juice+", "Lemonade+"},
                Multi = false,
                Default = ""
            }
        )

        drinkstype:OnChanged(
            function(typepp)
                _G.drinktret = tostring(typepp)
            end
        )

        drinkamount =
            Tabs.Shop:AddInput(
            "drinkamount",
            {
                Title = "Choose Amount:",
                Default = "",
                Placeholder = "Insert Here",
                Numeric = true, -- Only allows numbers
                Finished = true, -- Only calls callback when you press enter
                Callback = function()
                end
            }
        )

        drinkamount:OnChanged(
            function()
                drinkff = drinkamount.Value
                tretgmm = tonumber(drinkff)
            end
        )

        Tabs.Shop:AddButton(
            {
                Title = "Buy Drinks",
                Description = "Buy selected drinks",
                Callback = function()
                    if
                        _G.drinktret == "Smoothie" or _G.drinktret == "Cider" or _G.drinktret == "Juice" or
                            _G.drinktret == "Lemonade"
                     then
                        for i = 1, tretgmm do
                            local args = {
                                [1] = _G.drinktret
                            }

                            workspace.Merchants.DrinkMerchant.Clickable.Retum:FireServer(unpack(args))
                        end
                    elseif
                        _G.drinktret == "Smoothie+" or _G.drinktret == "Cider+" or _G.drinktret == "Juice+" or
                            _G.drinktret == "Lemonade+"
                     then
                        for i = 1, tretgmm do
                            local args = {
                                [1] = _G.drinktret
                            }

                            workspace.Merchants.BetterDrinkMerchant.Clickable.Retum:FireServer(unpack(args))
                        end
                    end
                end
            }
        )

        Tabs.Shop:AddButton(
            {
                Title = "Instant Drink",
                Description = "Fast Drink",
                Callback = function()
                    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if
                            string.find(v.Name, "Juice") or string.find(v.Name, "Milk") or string.find(v.Name, "Cider") or
                                string.find(v.Name, "Lemonade") or
                                string.find(v.Name, "Smoothie") or
                                string.find(v.Name, "Golden")
                         then
                            v.Parent = game.Players.LocalPlayer.Character
                        end
                    end
                    for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                        if
                            string.find(v.Name, "Juice") or string.find(v.Name, "Milk") or string.find(v.Name, "Cider") or
                                string.find(v.Name, "Lemonade") or
                                string.find(v.Name, "Smoothie") or
                                string.find(v.Name, "Golden")
                         then
                            v:Activate()
                            v:Activate()
                            v:Activate()
                            v:Destroy()
                        end
                    end
                end
            }
        )

        Tabs.Shop:AddSection("Melee Weapon")
        Tabs.Shop:AddButton(
            {
                Title = "Seastone Cestus (Fake Equipment)",
                Description = "Requires 500 Melee",
                Callback = function()
                    if
                        game.Players.LocalPlayer.Backpack:FindFirstChild("Melee") or
                            game.Players.LocalPlayer.Backpack:FindFirstChild("Table Kick") or
                            game.Players.LocalPlayer.Backpack:FindFirstChild("Black Leg") or
                            game.Players.LocalPlayer.Backpack:FindFirstChild("Seastone Cestus") or
                            game.Players.LocalPlayer.Backpack:FindFirstChild("Aqua Staff")
                     then
                        if
                            game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.MeleeLevel.Value >=
                                500
                         then
                            pcall(
                                function()
                                    local A_1 = "Seastone Cestus"
                                    local Event =
                                        game:GetService("Workspace").UserData["User_" .. game.Players.LocalPlayer.UserId].UpdateMelee
                                    Event:FireServer(A_1)
                                end
                            )
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "Equipped Seastone Cestus",
                                    Duration = 5
                                }
                            )
                        else
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "Your Melee Level Is Lower Than 500",
                                    Duration = 5
                                }
                            )
                        end
                    else
                        Fluent:Notify(
                            {
                                Title = "Saluna Shop Notify",
                                Content = "Please Spawn",
                                Duration = 5
                            }
                        )
                    end
                end
            }
        )

        Tabs.Shop:AddButton(
            {
                Title = "Aqua Staff (Fake Equipment)",
                Description = "Requires 500 Melee",
                Callback = function()
                    if
                        game.Players.LocalPlayer.Backpack:FindFirstChild("Melee") or
                            game.Players.LocalPlayer.Backpack:FindFirstChild("Table Kick") or
                            game.Players.LocalPlayer.Backpack:FindFirstChild("Black Leg") or
                            game.Players.LocalPlayer.Backpack:FindFirstChild("Seastone Cestus") or
                            game.Players.LocalPlayer.Backpack:FindFirstChild("Aqua Staff")
                     then
                        if
                            game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.MeleeLevel.Value >=
                                500
                         then
                            pcall(
                                function()
                                    local A_1 = "Aqua Staff"
                                    local Event =
                                        game:GetService("Workspace").UserData["User_" .. game.Players.LocalPlayer.UserId].UpdateMelee
                                    Event:FireServer(A_1)
                                end
                            )
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "Equipped Aqua Staff",
                                    Duration = 5
                                }
                            )
                        else
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "Your Melee Level Is Lower Than 500",
                                    Duration = 5
                                }
                            )
                        end
                    else
                        Fluent:Notify(
                            {
                                Title = "Saluna Shop Notify",
                                Content = "Please Spawn",
                                Duration = 5
                            }
                        )
                    end
                end
            }
        )

        Tabs.Shop:AddSection("Sword")
        Tabs.Shop:AddButton(
            {
                Title = "Dagger",
                Description = "Requires 1,000 Beries",
                Callback = function()
                    if
                        game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.PlayerHas_Dagger.Value ==
                            false
                     then
                        if
                            game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.Cash.Value >=
                                1000
                         then
                            local A_1 = "Dagger"
                            local A_2 = 1000
                            local Event = game:GetService("Workspace").Merchants.SwordMerchant.Clickable.Retum
                            Event:FireServer(A_1, A_2)
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "You just bought Dagger",
                                    Duration = 5
                                }
                            )
                        else
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "Lack Of Beries",
                                    Duration = 5
                                }
                            )
                        end
                    else
                        Fluent:Notify(
                            {
                                Title = "Saluna Shop Notify",
                                Content = "You have already got Dagger",
                                Duration = 5
                            }
                        )
                    end
                end
            }
        )

        Tabs.Shop:AddButton(
            {
                Title = "Wakizashi",
                Description = "Requires 5,000 Beries",
                Callback = function()
                    if
                        game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.PlayerHas_Wakizashi.Value ==
                            false
                     then
                        if
                            game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.Cash.Value >=
                                5000
                         then
                            local A_1 = "Wakizashi"
                            local A_2 = 5000
                            local Event = game:GetService("Workspace").Merchants.SwordMerchant.Clickable.Retum
                            Event:FireServer(A_1, A_2)
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "You just bought Wakizashi",
                                    Duration = 5
                                }
                            )
                        else
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "Lack Of Beries",
                                    Duration = 5
                                }
                            )
                        end
                    else
                        Fluent:Notify(
                            {
                                Title = "Saluna Shop Notify",
                                Content = "You have already got Wakizashi",
                                Duration = 5
                            }
                        )
                    end
                end
            }
        )

        Tabs.Shop:AddButton(
            {
                Title = "Tachi",
                Description = "Requires 7,500 Beries",
                Callback = function()
                    if
                        game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.PlayerHas_Tachi.Value ==
                            false
                     then
                        if
                            game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.Cash.Value >=
                                7500
                         then
                            local A_1 = "Tachi"
                            local A_2 = 7500
                            local Event = game:GetService("Workspace").Merchants.SwordMerchant.Clickable.Retum
                            Event:FireServer(A_1, A_2)
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "You just bought Tachi",
                                    Duration = 5
                                }
                            )
                        else
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "Lack Of Beries",
                                    Duration = 5
                                }
                            )
                        end
                    else
                        Fluent:Notify(
                            {
                                Title = "Saluna Shop Notify",
                                Content = "You have already got Tachi",
                                Duration = 5
                            }
                        )
                    end
                end
            }
        )

        Tabs.Shop:AddButton(
            {
                Title = "Katana",
                Description = "Requires 10,000 Beries",
                Callback = function()
                    if
                        game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.PlayerHas_Katana.Value ==
                            false
                     then
                        if
                            game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.Cash.Value >=
                                10000
                         then
                            local A_1 = "Katana"
                            local A_2 = 10000
                            local Event = game:GetService("Workspace").Merchants.SwordMerchant.Clickable.Retum
                            Event:FireServer(A_1, A_2)
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "You just bought Katana",
                                    Duration = 5
                                }
                            )
                        else
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "Lack Of Beries",
                                    Duration = 5
                                }
                            )
                        end
                    else
                        Fluent:Notify(
                            {
                                Title = "Saluna Shop Notify",
                                Content = "You have already got Katana",
                                Duration = 5
                            }
                        )
                    end
                end
            }
        )

        Tabs.Shop:AddButton(
            {
                Title = "Flail",
                Description = "Requires 50,000 Beries",
                Callback = function()
                    if
                        game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.PlayerHas_Flail.Value ==
                            false
                     then
                        if
                            game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.Cash.Value >=
                                50000
                         then
                            local A_1 = "Flail"
                            local A_2 = 50000
                            local Event = game:GetService("Workspace").Merchants.FlailMerchant.Clickable.Retum
                            Event:FireServer(A_1, A_2)
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "You just bought Flail",
                                    Duration = 5
                                }
                            )
                        else
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "Lack Of Beries",
                                    Duration = 5
                                }
                            )
                        end
                    else
                        Fluent:Notify(
                            {
                                Title = "Saluna Shop Notify",
                                Content = "You have already got Flail",
                                Duration = 5
                            }
                        )
                    end
                end
            }
        )

        Tabs.Shop:AddButton(
            {
                Title = "Krizma",
                Description = "Requires 80,000 Beries",
                Callback = function()
                    if
                        game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.PlayerHas_Krizma.Value ==
                            false
                     then
                        if
                            game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.Cash.Value >=
                                80000
                         then
                            local A_1 = "Krizma"
                            local A_2 = 80000
                            local Event = game:GetService("Workspace").Merchants.KrizmaMerch.Clickable.Retum
                            Event:FireServer(A_1, A_2)
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "You just bought Krizma",
                                    Duration = 5
                                }
                            )
                        else
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "Lack Of Beries",
                                    Duration = 5
                                }
                            )
                        end
                    else
                        Fluent:Notify(
                            {
                                Title = "Saluna Shop Notify",
                                Content = "You have already got Krizma",
                                Duration = 5
                            }
                        )
                    end
                end
            }
        )

        Tabs.Shop:AddSection("Gun")

        Tabs.Shop:AddButton(
            {
                Title = "Slingshot",
                Description = "Requires 1,000 Beries",
                Callback = function()
                    if
                        game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.PlayerHas_Slingshot.Value ==
                            false
                     then
                        if
                            game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.Cash.Value >=
                                1000
                         then
                            local A_1 = "Slingshot"
                            local A_2 = 1000
                            local Event = game:GetService("Workspace").Merchants.SniperMerchant.Clickable.Retum
                            Event:FireServer(A_1, A_2)
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "You just bought Slingshot",
                                    Duration = 5
                                }
                            )
                        else
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "Lack Of Beries",
                                    Duration = 5
                                }
                            )
                        end
                    else
                        Fluent:Notify(
                            {
                                Title = "Saluna Shop Notify",
                                Content = "You have already got Slingshot",
                                Duration = 5
                            }
                        )
                    end
                end
            }
        )

        Tabs.Shop:AddButton(
            {
                Title = "Stars",
                Description = "Requires 5,000 Beries",
                Callback = function()
                    if
                        game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.PlayerHas_Stars.Value ==
                            false
                     then
                        if
                            game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.Cash.Value >=
                                5000
                         then
                            local A_1 = "Stars"
                            local A_2 = 5000
                            local Event = game:GetService("Workspace").Merchants.SniperMerchant.Clickable.Retum
                            Event:FireServer(A_1, A_2)
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "You just bought Stars",
                                    Duration = 5
                                }
                            )
                        else
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "Lack Of Beries",
                                    Duration = 5
                                }
                            )
                        end
                    else
                        Fluent:Notify(
                            {
                                Title = "Saluna Shop Notify",
                                Content = "You have already got Stars",
                                Duration = 5
                            }
                        )
                    end
                end
            }
        )

        Tabs.Shop:AddButton(
            {
                Title = "Crossbow",
                Description = "Requires 7,500 Beries",
                Callback = function()
                    if
                        game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.PlayerHas_Crossbow.Value ==
                            false
                     then
                        if
                            game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.Cash.Value >=
                                7500
                         then
                            local A_1 = "Crossbow"
                            local A_2 = 7500
                            local Event = game:GetService("Workspace").Merchants.SniperMerchant.Clickable.Retum
                            Event:FireServer(A_1, A_2)
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "You just bought Crossbow",
                                    Duration = 5
                                }
                            )
                        else
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "Lack Of Beries",
                                    Duration = 5
                                }
                            )
                        end
                    else
                        Fluent:Notify(
                            {
                                Title = "Saluna Shop Notify",
                                Content = "You have already got Crossbow",
                                Duration = 5
                            }
                        )
                    end
                end
            }
        )

        Tabs.Shop:AddButton(
            {
                Title = "Flintlock",
                Description = "Requires 10,000 Beries",
                Callback = function()
                    if
                        game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.PlayerHas_Flintlock.Value ==
                            false
                     then
                        if
                            game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.Cash.Value >=
                                10000
                         then
                            local A_1 = "Flintlock"
                            local A_2 = 10000
                            local Event = game:GetService("Workspace").Merchants.SniperMerchant.Clickable.Retum
                            Event:FireServer(A_1, A_2)
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "You just bought Flintlock",
                                    Duration = 5
                                }
                            )
                        else
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "Lack Of Beries",
                                    Duration = 5
                                }
                            )
                        end
                    else
                        Fluent:Notify(
                            {
                                Title = "Saluna Shop Notify",
                                Content = "You have already got Flintlock",
                                Duration = 5
                            }
                        )
                    end
                end
            }
        )

        Tabs.Shop:AddButton(
            {
                Title = "Cannon Ball",
                Description = "Requires 400,000 Beries",
                Callback = function()
                    if
                        game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data[
                            "PlayerHas_Cannon Ball"
                        ].Value == false
                     then
                        if
                            game:GetService("Workspace").UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.Cash.Value >=
                                400000
                         then
                            local A_1 = "Cannon Ball"
                            local A_2 = 400000
                            local Event = game:GetService("Workspace").Merchants.HeavyWeaponsMerchant.Clickable.Retum
                            Event:FireServer(A_1, A_2)
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "You just bought Cannon Ball",
                                    Duration = 5
                                }
                            )
                        else
                            Fluent:Notify(
                                {
                                    Title = "Saluna Shop Notify",
                                    Content = "Lack Of Beries",
                                    Duration = 5
                                }
                            )
                        end
                    else
                        Fluent:Notify(
                            {
                                Title = "Saluna Shop Notify",
                                Content = "You have already got Cannon Ball",
                                Duration = 5
                            }
                        )
                    end
                end
            }
        )

        Tabs.Fruit:AddSection("Fruit Stuff")
        Tabs.Fruit:AddSection("Auto Open Fruit Boxes")
        openboxunc =
            Tabs.Fruit:AddToggle("openboxunctoggle", {Title = "Auto Open Common/Uncommon Box", Default = false})
        openboxunc:OnChanged(
            function()
                if Options.openboxunctoggle.Value == true then
                    _G.opencommon = true
                    while _G.opencommon do
                        wait()
                        pcall(
                            function()
                                for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                                    if v:IsA("Tool") and string.find(v.Name, "ommon") then
                                        v.Parent = game.Players.LocalPlayer.Character
                                        v:Activate()
                                    end
                                end
                            end
                        )
                    end
                else
                    _G.opencommon = false
                end
            end
        )

        openboxrare = Tabs.Fruit:AddToggle("openboxraretoggle", {Title = "Auto Open Rare/Ultra Box", Default = false})
        openboxrare:OnChanged(
            function()
                if Options.openboxraretoggle.Value == true then
                    _G.openrare = true
                    while _G.openrare do
                        wait()
                        pcall(
                            function()
                                for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                                    if v:IsA("Tool") and string.find(v.Name, "Rare") then
                                        v.Parent = game.Players.LocalPlayer.Character
                                        v:Activate()
                                    end
                                end
                            end
                        )
                    end
                else
                    _G.openrare = false
                end
            end
        )

        Tabs.Fruit:AddSection("Auto Store Fruits")
        storefruit = Tabs.Fruit:AddToggle("storefruittoggle", {Title = "Auto Store Rare/Ultra Fruit", Default = false})
        storefruit:OnChanged(
            function()
                if Options.storefruittoggle.Value == true then
                    _G.storeffrt = true
                else
                    _G.storeffrt = false
                end
            end
        )

        aurastq = Tabs.Fruit:AddToggle("aurastqtoggle", {Title = "Auto Store Aura Fruit", Default = false})
        aurastq:OnChanged(
            function()
                if Options.aurastqtoggle.Value == true then
                    _G.aurasto = true
                else
                    _G.aurasto = false
                end
            end
        )

        Tabs.Fruit:AddSection("Auto Compass")
        getcompass = Tabs.Fruit:AddToggle("getcompasstoggle", {Title = "Auto Get Compass", Default = false})
        getcompass:OnChanged(
            function()
                if Options.getcompasstoggle.Value == true then
                    getgenv().claim = true
                else
                    getgenv().claim = false
                end

                while getgenv().claim do
                    wait()
                    pcall(
                        function()
                            workspace.Merchants.QuestMerchant.Clickable.Retum:FireServer("Claim10")
                        end
                    )
                    task.wait(1)
                end
            end
        )

        findcompass = Tabs.Fruit:AddToggle("findcompasstoggle", {Title = "Auto Find Compass", Default = false})
        findcompass:OnChanged(
            function()
                if Options.findcompasstoggle.Value == true then
                    getgenv().find = true
                else
                    getgenv().find = false
                end

                while getgenv().find do
                    wait()
                    pcall(
                        function()
                            if game.Players.LocalPlayer.Backpack:FindFirstChild("Compass") then
                                game.Players.LocalPlayer.Character.Humanoid:EquipTool(
                                    game.Players.LocalPlayer.Backpack:FindFirstChild("Compass")
                                )
                            end

                            for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                                if v.Name == "Compass" then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        CFrame.new(v.Poser.Value)
                                end

                                if game.Players.LocalPlayer.Character:FindFirstChild("Compass") then
                                    game.Players.LocalPlayer.Character.Compass:Activate()
                                end
                            end
                            wait(0.5)
                        end
                    )
                end
            end
        )

        Tabs.Farm:AddSection("Auto Cannon Farming")

        fastcannon = Tabs.Farm:AddToggle("fastcannontoggle", {Title = "Fast Cannon", Default = false})
        fastcannon:OnChanged(
            function()
                if Options.fastcannontoggle.Value == true then
                    _G.autocannon = true
                    for i = 1, 3 do
                        wait(0.2)
                        if game.Players.LocalPlayer.Character:FindFirstChild("Cannon Ball") then
                            task.wait()
                            game.Players.LocalPlayer.Character.Humanoid:UnequipTools()
                        end
                    end
                else
                    _G.autocannon = false
                end
            end
        )

        Tabs.Farm:AddButton(
            {
                Title = "Refresh BackPack",
                Description = "Refresh Your BackPack",
                Callback = function()
                    game.Players.LocalPlayer.Character.Humanoid:UnequipTools()
                    wait(0.1)
                    if game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y < 211000 then
                        for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                            v:Destroy()
                        end
                        wait(0.1)
                        game:GetService("Players").LocalPlayer.Character.Weapons:FireServer()
                    end
                end
            }
        )

        autocannonmob = Tabs.Farm:AddToggle("cannonmobtoggle", {Title = "Auto Farm Mobs (Cannon)", Default = false})
        autocannonmob:OnChanged(
            function()
                if Options.cannonmobtoggle.Value == true then
                    _G.autocannonslow = true
                else
                    _G.autocannonslow = false
                end
            end
        )

        autocannonplrbring =
            Tabs.Farm:AddToggle(
            "autocannonplrbringtoggle",
            {Title = "Auto Kill All Player (Bring + Chair)", Default = false}
        )
        autocannonplrbring:OnChanged(
            function()
                if Options.autocannonplrbringtoggle.Value == true then
                    _G.autocannonplrbring = true
                else
                    _G.autocannonplrbring = false
                end
            end
        )

        Tabs.Farm:AddSection("Auto Reset")

        rssli =
            Tabs.Farm:AddSlider(
            "rssliderzz",
            {
                Title = "Reset Time (s)",
                Description = "Adjust reset time",
                Default = 900,
                Min = 100,
                Max = 2000,
                Rounding = 0,
                Callback = function(casd)
                    rstimehaha = tonumber(casd)
                end
            }
        )

        autoreset =
            Tabs.Farm:AddToggle("autoresettoggle", {Title = "Auto Reset (Die To Refresh Ping)", Default = false})
        autoreset:OnChanged(
            function()
                if Options.autoresettoggle.Value == true then
                    _G.resetzxcm = true
                    Fluent:Notify(
                        {
                            Title = "Auto Function Notify",
                            Content = "Auto Reset Is Turned On",
                            Duration = 5
                        }
                    )
                else
                    _G.resetzxcm = false
                end
            end
        )

        Tabs.Farm:AddSection("Auto Buso (Normal) (*)")

        autobusohaki = Tabs.Farm:AddToggle("autobusohakitoggle", {Title = "Auto Buso (On/Off)", Default = false})
        autobusohaki:OnChanged(
            function()
                if Options.autobusohakitoggle.Value == true then
                    _G.autohakibuso = true
                    while _G.autohakibuso do
                        wait()
                        pcall(
                            function()
                                repeat
                                    wait()
                                    if
                                        not game.Players.LocalPlayer.PlayerGui.HealthBar.Frame.Status:FindFirstChild(
                                            "BusoHaki"
                                        )
                                     then
                                        wait(0.5)
                                        game.workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].UpdateHaki:FireServer(

                                        )
                                    end
                                    if
                                        game.Players.LocalPlayer.PlayerGui.HealthBar.Frame.Status:FindFirstChild(
                                            "BusoHaki"
                                        )
                                     then
                                        wait(0.5)
                                        game.workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].UpdateHaki:FireServer(

                                        )
                                    end
                                until not _G.autohakibuso
                            end
                        )
                    end
                else
                    _G.autohakibuso = false
                end
            end
        )

        Tabs.Farm:AddSection("Auto Buso (Fast Regen)   (*)")
        regentargetslider =
            Tabs.Farm:AddSlider(
            "Autobusosli",
            {
                Title = "Regen Target (%)",
                Description = "Change this for adjusting regen target",
                Default = 70,
                Min = 30,
                Max = 90,
                Rounding = 0,
                Callback = function(weqrww)
                    regentarget = tonumber(weqrww)
                end
            }
        )

        regenspeedslider =
            Tabs.Farm:AddSlider(
            "Autorzsli",
            {
                Title = "Regen Speed",
                Description = "Change this for adjusting regen speed",
                Default = 20,
                Min = 5,
                Max = 50,
                Rounding = 0,
                Callback = function(weqrwwtt)
                    regenspeed = tonumber(weqrwwtt)
                end
            }
        )

        autoregenhaki = Tabs.Farm:AddToggle("autoregenhakitoggle", {Title = "Auto Buso Fast Regen", Default = false})
        autoregenhaki:OnChanged(
            function()
                if Options.autoregenhakitoggle.Value == true then
                    _G.autohakicannon = true
                    _G.offhaki = true
                    hakigoc =
                        game.workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.HakiLevel.Value
                    hakiuse = hakigoc / 100 * regentarget
                    task.wait()
                    if
                        game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].HakiBar.Value >
                            hakiuse
                     then
                        _G.onhaki = true
                        _G.regenhaki = false
                    elseif
                        game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].HakiBar.Value <=
                            hakiuse
                     then
                        _G.onhaki = false
                        _G.regenhaki = true
                    end
                else
                    _G.autohakicannon = false
                end
            end
        )

        Tabs.Farm:AddSection("Auto Fishing   (*)")

        autofish = Tabs.Farm:AddToggle("fishytoggle", {Title = "Auto Fishing", Default = false})
        autofish:OnChanged(
            function()
                if Options.fishytoggle.Value == true then
                    getgenv().fishing = true
                else
                    getgenv().fishing = false
                end
            end
        )

        zxcautofi = Tabs.Farm:AddToggle("zxcautofitoggle", {Title = "Auto Grill + Sell Fish", Default = false})
        zxcautofi:OnChanged(
            function()
                if Options.zxcautofitoggle.Value == true then
                    getgenv().grillsell = true
                else
                    getgenv().grillsell = false
                end
            end
        )

        Tabs.Farm:AddSection("Auto Package   (*)")

        restpac =
            Tabs.Farm:AddDropdown(
            "restpac",
            {
                Title = "Rest Package Type",
                Values = {"Random TP", "Safe Zone", "Chair"},
                Multi = false,
                Default = "Chair"
            }
        )
        restpac:OnChanged(
            function(restpacxq)
                _G.resttypezx = restpacxq
            end
        )
        autopackage = Tabs.Farm:AddToggle("packagetoggle", {Title = "Auto Package", Default = false})
        autopackage:OnChanged(
            function()
                if Options.packagetoggle.Value == true then
                    getgenv().tret = true
                else
                    getgenv().tret = false
                end
            end
        )

        Tabs.Automatic:AddSection("General Function")
        AutorjToggle =
            Tabs.Automatic:AddToggle("Autorj1Toggle", {Title = "Auto Hop Server If Disconnect", Default = false})
        AutorjToggle:OnChanged(
            function()
                if Options.Autorj1Toggle.Value == true then
                    _G.autorj = true
                    Fluent:Notify(
                        {
                            Title = "Auto Function Notify",
                            Content = "Auto Reconnect Is Turned On",
                            Duration = 5
                        }
                    )
                    while _G.autorj do
                        wait(3)
                        pcall(
                            function()
                                if game.CoreGui.RobloxPromptGui.promptOverlay.Active == true then
                                    TeleportService = game:GetService("TeleportService")
                                    HttpService = game:GetService("HttpService")
                                    PlaceId, JobId = game.PlaceId, game.JobId
                                    httprequest =
                                        (syn and syn.request) or (http and http.request) or http_request or
                                        (fluxus and fluxus.request) or
                                        request
                                    if httprequest then
                                        httprequest(
                                            {
                                                Url = "http://127.0.0.1:6463/rpc?v=1",
                                                Method = "POST",
                                                Headers = {
                                                    ["Content-Type"] = "application/json",
                                                    Origin = "https://discord.com"
                                                },
                                                Body = HttpService:JSONEncode(
                                                    {
                                                        cmd = "INVITE_BROWSER",
                                                        nonce = HttpService:GenerateGUID(false),
                                                        args = {code = "dYHag43eeU"}
                                                    }
                                                )
                                            }
                                        )
                                    end
                                    if httprequest then
                                        local servers = {}
                                        local req =
                                            httprequest(
                                            {
                                                Url = string.format(
                                                    "https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true",
                                                    PlaceId
                                                )
                                            }
                                        )
                                        local body = HttpService:JSONDecode(req.Body)

                                        if body and body.data then
                                            for i, v in next, body.data do
                                                if
                                                    type(v) == "table" and tonumber(v.playing) and
                                                        tonumber(v.maxPlayers) and
                                                        v.playing < v.maxPlayers and
                                                        v.id ~= JobId
                                                 then
                                                    table.insert(servers, 1, v.id)
                                                end
                                            end
                                        end

                                        if #servers > 0 then
                                            TeleportService:TeleportToPlaceInstance(
                                                PlaceId,
                                                servers[math.random(1, #servers)],
                                                game.Players.LocalPlayer
                                            )
                                        else
                                            return notify("Serverhop", "Couldn't find a server.")
                                        end
                                    else
                                        notify(
                                            "Incompatible Exploit",
                                            "Your exploit does not support this command (missing request)"
                                        )
                                    end
                                end
                            end
                        )
                    end
                else
                    _G.autorj = false
                end
            end
        )
        hopplrsvzz =
            Tabs.Automatic:AddSlider(
            "hopplrsvzzc",
            {
                Title = "Player Numbers To Hop",
                Description = "Adjust player numbers (Recommend: 3)",
                Default = 18,
                Min = 1,
                Max = 18,
                Rounding = 0,
                Callback = function(zxcbbbeg)
                    plrnumforhop = tonumber(zxcbbbeg)
                end
            }
        )

        fewplrhop = Tabs.Automatic:AddToggle("fewplrhoptoggle", {Title = "Auto Hop If Fewer Player", Default = false})
        fewplrhop:OnChanged(
            function()
                if Options.fewplrhoptoggle.Value == true then
                    _G.fewhopsv = true
                    Fluent:Notify(
                        {
                            Title = "Auto Function Notify",
                            Content = "Auto Hop If Fewer Player Is Turned On",
                            Duration = 5
                        }
                    )
                    while _G.fewhopsv do
                        wait(2)
                        pcall(
                            function()
                                if #game.Players:GetChildren() < plrnumforhop then
                                    wait()

                                    game.Players.LocalPlayer:Kick("Hoping Server, Please Wait...")
                                    local PlaceID = game.PlaceId
                                    local HttpService = game:GetService("HttpService")
                                    local TeleportService = game:GetService("TeleportService")

                                    local function getServerList(cursor)
                                        local url =
                                            "https://games.roblox.com/v1/games/" ..
                                            PlaceID .. "/servers/Public?sortOrder=Desc&limit=100"
                                        if cursor and cursor ~= "" then
                                            url = url .. "&cursor=" .. cursor
                                        end
                                        local response = HttpService:JSONDecode(game:HttpGet(url))
                                        return response
                                    end

                                    local function findHighestPlayerServer()
                                        local highestServer = nil
                                        local foundAnything = ""
                                        repeat
                                            local Site = getServerList(foundAnything)
                                            if
                                                Site.nextPageCursor and Site.nextPageCursor ~= "null" and
                                                    Site.nextPageCursor ~= nil
                                             then
                                                foundAnything = Site.nextPageCursor
                                            else
                                                foundAnything = nil
                                            end

                                            for _, server in pairs(Site.data) do
                                                if not highestServer or server.playing > highestServer.playing then
                                                    highestServer = server
                                                end
                                            end
                                        until not foundAnything

                                        return highestServer
                                    end

                                    local function hopToHighestPlayerServer()
                                        local highestServer = findHighestPlayerServer()
                                        if highestServer then
                                            local serverId = highestServer.id
                                            TeleportService:TeleportToPlaceInstance(
                                                PlaceID,
                                                serverId,
                                                game.Players.LocalPlayer
                                            )
                                        else
                                            print("No servers found.")
                                        end
                                    end

                                    -- Execute the hop
                                    hopToHighestPlayerServer()
                                end
                            end
                        )
                    end
                else
                    _G.fewhopsv = false
                end
            end
        )

        Tabs.Automatic:AddSection("In-Game Function")
        AutospawnToggle = Tabs.Automatic:AddToggle("Autospawn1Toggle", {Title = "Auto Spawn", Default = false})
        AutospawnToggle:OnChanged(
            function()
                if Options.Autospawn1Toggle.Value == true then
                    _G.autospawn = true
                    Fluent:Notify(
                        {
                            Title = "Auto Function Notify",
                            Content = "Auto Spawn Is Turned On",
                            Duration = 5
                        }
                    )
                    while _G.autospawn do
                        wait()
                        pcall(
                            function()
                                if game:GetService("Players").LocalPlayer.PlayerGui.Load.Frame.Visible == true then
                                    repeat
                                        wait(4)
                                        for i, v in pairs(
                                            getconnections(
                                                game:GetService("Players").LocalPlayer.PlayerGui.Load.Frame.Load.MouseButton1Click
                                            )
                                        ) do
                                            v.Function()
                                        end
                                    until game:GetService("Players").LocalPlayer.PlayerGui.Load.Frame.Visible == false
                                end
                            end
                        )
                    end
                else
                    _G.autospawn = false
                end
            end
        )

        AutogetexpToggle =
            Tabs.Automatic:AddToggle("Autogetexp1Toggle", {Title = "Auto Get Expertise", Default = false})
        AutogetexpToggle:OnChanged(
            function()
                if Options.Autogetexp1Toggle.Value == true then
                    _G.autogetexp = true
                    Fluent:Notify(
                        {
                            Title = "Auto Function Notify",
                            Content = "Auto Get Expertise Quest Is Turned On",
                            Duration = 5
                        }
                    )
                    while _G.autogetexp do
                        wait()
                        pcall(
                            function()
                                wait(5)
                                workspace:WaitForChild("Merchants"):WaitForChild("ExpertiseMerchant"):WaitForChild(
                                    "Clickable"
                                ):WaitForChild("Retum"):FireServer()
                            end
                        )
                    end
                else
                    _G.autogetexp = false
                end
            end
        )

        autoclaimchal =
            Tabs.Automatic:AddToggle("autoclaimchalToggle", {Title = "Auto Claim Challenge", Default = false})
        autoclaimchal:OnChanged(
            function()
                if Options.autoclaimchalToggle.Value == true then
                    _G.autochallenge = true
                    Fluent:Notify(
                        {
                            Title = "Auto Function Notify",
                            Content = "Auto Claim Challenge Is Turned On",
                            Duration = 5
                        }
                    )
                    while _G.autochallenge do
                        wait()
                        pcall(
                            function()
                                if
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.DailyFrame.ScrollingFrame[
                                        "Challenge_1"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Daily1"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.DailyFrame.ScrollingFrame[
                                        "Challenge_2"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Daily2"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.DailyFrame.ScrollingFrame[
                                        "Challenge_3"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Daily3"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.DailyFrame.ScrollingFrame[
                                        "Challenge_4"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Daily4"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.WeeklyFrame.ScrollingFrame[
                                        "Challenge_1"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Weekly1"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.WeeklyFrame.ScrollingFrame[
                                        "Challenge_2"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Weekly2"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.WeeklyFrame.ScrollingFrame[
                                        "Challenge_3"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Weekly3"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.MonthlyFrame.ScrollingFrame[
                                        "Challenge_1"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Monthly1"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.MonthlyFrame.ScrollingFrame[
                                        "Challenge_2"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Monthly2"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                        "Challenge_1"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Challenge1"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                        "Challenge_2"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Challenge2"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                        "Challenge_3"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Challenge3"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                        "Challenge_4"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Challenge4"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                        "Challenge_6"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Challenge6"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                        "Challenge_7"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Challenge7"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                        "Challenge_8"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Challenge8"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                        "Challenge_9"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Challenge9"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                        "Challenge_10"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Challenge10"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                        "Challenge_11"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Challenge11"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                        "Challenge_12"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Challenge12"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                        "Challenge_13"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Challenge13"
                                    )
                                elseif
                                    game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                        "Challenge_14"
                                    ].Claim.AutoButtonColor == true
                                 then
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                        "Claim",
                                        "Challenge14"
                                    )
                                end
                            end
                        )
                    end
                else
                    _G.autochallenge = false
                end
            end
        )

        Tabs.Teleport:AddSection("Useful Teleport")
        randomtp = Tabs.Teleport:AddToggle("randomtptoggle", {Title = "Random Teleport", Default = false})
        randomtp:OnChanged(
            function()
                if Options.randomtptoggle.Value == true then
                    getgenv().banana = true
                else
                    getgenv().banana = false
                end
            end
        )

        tpsafeplate = Tabs.Teleport:AddToggle("tpsafeplatetoggle", {Title = "Auto Teleport Safe Zone", Default = false})
        tpsafeplate:OnChanged(
            function()
                if Options.tpsafeplatetoggle.Value == true then
                    getgenv().vtt = true
                else
                    getgenv().vtt = false
                end
            end
        )

        chairrr = Tabs.Teleport:AddToggle("chairrrtoggle", {Title = "Auto Teleport Chair", Default = false})
        chairrr:OnChanged(
            function()
                if Options.chairrrtoggle.Value == true then
                    getgenv().chawq = true
                else
                    getgenv().chawq = false
                end
            end
        )

        Tabs.Teleport:AddSection("Special Teleport")

        Tabs.Teleport:AddButton(
            {
                Title = "Teleport To Safe Zone",
                Description = "(A high platform)",
                Callback = function()
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game:GetService("Workspace")["SafeZoneOuterSpacePart"].CFrame * CFrame.new(0, 5, 0)
                end
            }
        )

        Tabs.Teleport:AddButton(
            {
                Title = "Teleport To Fishing Place",
                Description = "(A place where you can go fishing)",
                Callback = function()
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game:GetService("Workspace")["fishingplace"].CFrame * CFrame.new(0, 5, 0)
                end
            }
        )

        Tabs.Teleport:AddButton(
            {
                Title = "Teleport To Rayleigh",
                Description = "Check and teleport to Rayleigh if he spawns",
                Callback = function()
                    if game:GetService("Workspace").Merchants.QuestHakiMerchant.Clickable.Available.Value == true then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                            game:GetService("Workspace").Merchants.QuestHakiMerchant.HumanoidRootPart.CFrame
                    else
                        Fluent:Notify(
                            {
                                Title = "Rayleigh Notify",
                                Content = "Rayleigh hasn't spawned yet",
                                Duration = 4
                            }
                        )
                    end
                end
            }
        )

        Tabs.Teleport:AddButton(
            {
                Title = "Teleport To Dark Atlas",
                Description = "(Legendary Pedestal)",
                Callback = function()
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game.Workspace.Altar.RecepticalEffect.CFrame * CFrame.new(0, 0, 0)
                end
            }
        )

        Tabs.Teleport:AddSection("Teleport")

        MobsTP =
            Tabs.Teleport:AddDropdown(
            "MobsTPdr",
            {
                Title = "NPC Teleport",
                Values = {
                    " ",
                    "Bartender (Sam)",
                    "Bartender (Bar)",
                    "Sam",
                    "Friend",
                    "Cannon Seller",
                    "Krizma Seller",
                    "Flail Seller",
                    "Sword Seller",
                    "Gun Seller",
                    "Merlin",
                    "Emotes Teacher",
                    "Lucy (Affinity)",
                    "Chef",
                    "Expertise Giver"
                },
                Multi = false,
                Default = " "
            }
        )

        MobsTP:OnChanged(
            function(Mobbb)
                if Mobbb == "Bartender (Sam)" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game:GetService("Workspace").Merchants.DrinkMerchant.HumanoidRootPart.CFrame
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. Mobbb,
                            Duration = 1
                        }
                    )
                elseif Mobbb == "Bartender (Bar)" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game:GetService("Workspace").Merchants.BetterDrinkMerchant.HumanoidRootPart.CFrame
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. Mobbb,
                            Duration = 1
                        }
                    )
                elseif Mobbb == "Sam" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game:GetService("Workspace").Merchants.QuestMerchant.HumanoidRootPart.CFrame
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. Mobbb,
                            Duration = 1
                        }
                    )
                elseif Mobbb == "Friend" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game:GetService("Workspace").Merchants.FriendMerchant.HumanoidRootPart.CFrame
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. Mobbb,
                            Duration = 1
                        }
                    )
                elseif Mobbb == "Cannon Seller" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game:GetService("Workspace").Merchants.HeavyWeaponsMerchant.HumanoidRootPart.CFrame
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. Mobbb,
                            Duration = 1
                        }
                    )
                elseif Mobbb == "Krizma Seller" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game:GetService("Workspace").Merchants.KrizmaMerch.HumanoidRootPart.CFrame
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. Mobbb,
                            Duration = 1
                        }
                    )
                elseif Mobbb == "Flail Seller" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game:GetService("Workspace").Merchants.FlailMerchant.HumanoidRootPart.CFrame
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. Mobbb,
                            Duration = 1
                        }
                    )
                elseif Mobbb == "Sword Seller" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game:GetService("Workspace").Merchants.SwordMerchant.HumanoidRootPart.CFrame
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. Mobbb,
                            Duration = 1
                        }
                    )
                elseif Mobbb == "Gun Seller" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game:GetService("Workspace").Merchants.SniperMerchant.HumanoidRootPart.CFrame
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. Mobbb,
                            Duration = 1
                        }
                    )
                elseif Mobbb == "Merlin" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game:GetService("Workspace").Merchants.QuestFishMerchant.HumanoidRootPart.CFrame
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. Mobbb,
                            Duration = 1
                        }
                    )
                elseif Mobbb == "Emotes Teacher" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game:GetService("Workspace").Merchants.EmoteMerchant.HumanoidRootPart.CFrame
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. Mobbb,
                            Duration = 1
                        }
                    )
                elseif Mobbb == "Lucy (Affinity)" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game:GetService("Workspace").Merchants.AffinityMerchant.HumanoidRootPart.CFrame
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. Mobbb,
                            Duration = 1
                        }
                    )
                elseif Mobbb == "Chef" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game:GetService("Workspace").Merchants.FishMerchant.HumanoidRootPart.CFrame
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. Mobbb,
                            Duration = 1
                        }
                    )
                elseif Mobbb == "Expertise Giver" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game:GetService("Workspace").Merchants.ExpertiseMerchant.Head.CFrame
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. Mobbb,
                            Duration = 1
                        }
                    )
                end
            end
        )

        IslandTP =
            Tabs.Teleport:AddDropdown(
            "IslandTP",
            {
                Title = "Island Teleport",
                Values = {
                    " ",
                    "Sam Island",
                    "Sand/Windmill",
                    "Cave",
                    "Near-Bar Island",
                    "Bar",
                    "Boss-5K/Tornado Island",
                    "Kaizu/Aura Boss Island",
                    "Krizma Island",
                    "Sand Castle",
                    "Purple Island",
                    "Merlin/Boar Island",
                    "Flail Island",
                    "Snowy Island",
                    "Big Snow Mountain",
                    "Big Black Mountain",
                    "Marine Ford",
                    "Forest",
                    "Green Rock/Cannon Island",
                    "Race/New Island",
                    "Pyramid",
                    "Mansion",
                    "Moon Island",
                    "Vokun Island"
                },
                Multi = false,
                Default = " "
            }
        )

        IslandTP:OnChanged(
            function(zxcrris)
                if zxcrris == "Sam Island" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        -1280.31726,
                        239.998398,
                        -1326.91028,
                        -0.999996781,
                        7.21743021e-08,
                        -0.00254111853,
                        7.21170679e-08,
                        1,
                        2.26145023e-08,
                        0.00254111853,
                        2.24311716e-08,
                        -0.999996781
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Sand/Windmill" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        85.0743713,
                        282.310211,
                        -36.9613533,
                        0.136958227,
                        -1.5720218e-08,
                        0.990576804,
                        4.45528325e-09,
                        1,
                        1.52537698e-08,
                        -0.990576804,
                        2.3241713e-09,
                        0.136958227
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Cave" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        1.43468678,
                        306.999908,
                        -927.490723,
                        -0.0791061521,
                        -1.76420407e-08,
                        0.996866226,
                        -2.13624607e-09,
                        1,
                        1.75279791e-08,
                        -0.996866226,
                        -7.42980621e-10,
                        -0.0791061521
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Near-Bar Island" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        887.123474,
                        302.998199,
                        1218.83557,
                        -0.00453962386,
                        6.63435955e-08,
                        0.999989688,
                        -9.09009827e-08,
                        1,
                        -6.67569395e-08,
                        -0.999989688,
                        -9.12030984e-08,
                        -0.00453962386
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Bar" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        1520.92224,
                        303.489471,
                        2138.15845,
                        0.996849716,
                        5.16282661e-09,
                        -0.0793136358,
                        -5.49105694e-09,
                        1,
                        -3.92028143e-09,
                        0.0793136358,
                        4.34344694e-09,
                        0.996849716
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Boss-5K/Tornado Island" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        4854.58057,
                        605.394287,
                        -7281.04297,
                        -0.969173074,
                        -2.48229548e-10,
                        0.24638097,
                        -1.49729756e-10,
                        1,
                        4.18520579e-10,
                        -0.24638097,
                        3.68728326e-10,
                        -0.969173074
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Kaizu/Aura Boss Island" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        -1575.16821,
                        215.999954,
                        9946.87207,
                        0.980506063,
                        -4.32691003e-08,
                        0.196488753,
                        3.53463392e-08,
                        1,
                        4.38284715e-08,
                        -0.196488753,
                        -3.60289221e-08,
                        0.980506063
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Krizma Island" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        -1074.56641,
                        376.999908,
                        1667.55762,
                        0.999868512,
                        -3.29602017e-08,
                        0.0162166674,
                        3.19331654e-08,
                        1,
                        6.35909743e-08,
                        -0.0162166674,
                        -6.30647605e-08,
                        0.999868512
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Sand Castle" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        1078.84058,
                        245.200073,
                        -3333.86084,
                        0.710731328,
                        4.62040433e-08,
                        -0.703463554,
                        -3.03972776e-08,
                        1,
                        3.49694673e-08,
                        0.703463554,
                        -3.47051743e-09,
                        0.710731328
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Purple Island" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        -5169.17529,
                        522.999817,
                        -7776.02295,
                        -0.999938011,
                        4.8491323e-08,
                        0.011133004,
                        4.95431145e-08,
                        1,
                        9.41995779e-08,
                        -0.011133004,
                        9.47453032e-08,
                        -0.999938011
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Merlin/Boar Island" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        -1699.38147,
                        217.07135,
                        -275.71048,
                        -0.0825118199,
                        7.11512556e-08,
                        0.996590078,
                        3.90585164e-08,
                        1,
                        -6.81608867e-08,
                        -0.996590078,
                        3.33012515e-08,
                        -0.0825118199
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Flail Island" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        1133.75415,
                        230.999908,
                        3368.14087,
                        -0.0550645292,
                        -1.73162586e-08,
                        0.998482823,
                        -2.23419292e-08,
                        1,
                        1.61104534e-08,
                        -0.998482823,
                        -2.14209184e-08,
                        -0.0550645292
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Snowy Island" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        -1892.50696,
                        224.999954,
                        3303.00659,
                        0.999911904,
                        -2.22762928e-08,
                        0.0132755609,
                        2.16087255e-08,
                        1,
                        5.04288202e-08,
                        -0.0132755609,
                        -5.01375084e-08,
                        0.999911904
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Big Snow Mountain" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        6225.76221,
                        485.999908,
                        -1601.78601,
                        -0.0377998017,
                        1.83320459e-09,
                        0.99928534,
                        -5.03370901e-09,
                        1,
                        -2.02492489e-09,
                        -0.99928534,
                        -5.10665332e-09,
                        -0.0377998017
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Big Black Mountain" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        2013.95776,
                        487.999908,
                        -720.344543,
                        0.151551947,
                        -7.72941178e-08,
                        0.988449275,
                        -2.81923054e-08,
                        1,
                        8.25198825e-08,
                        -0.988449275,
                        -4.03727149e-08,
                        0.151551947
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Marine Ford" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        -3133.93311,
                        275.901154,
                        -3643.74341,
                        -0.999911427,
                        -3.90428356e-09,
                        0.0133108366,
                        -4.18463797e-09,
                        1,
                        -2.10342552e-08,
                        -0.0133108366,
                        -2.1088093e-08,
                        -0.999911427
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Forest" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        -6015.46631,
                        401.999908,
                        13.9106245,
                        0.726529002,
                        2.63533284e-08,
                        0.687135816,
                        4.80932307e-08,
                        1,
                        -8.92028211e-08,
                        -0.687135816,
                        9.78550219e-08,
                        0.726529002
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Green Rock/Cannon Island" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        -2623.29224,
                        269.599915,
                        1090.10852,
                        -0.642234623,
                        -2.10928164e-08,
                        0.766508102,
                        4.81428373e-08,
                        1,
                        6.7855531e-08,
                        -0.766508102,
                        8.04810441e-08,
                        -0.642234623
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Race/New Island" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        -6370.9834,
                        258.601776,
                        3841.90991,
                        1,
                        2.19709069e-08,
                        1.10745526e-13,
                        -2.19709069e-08,
                        1,
                        8.39457854e-08,
                        -1.08901156e-13,
                        -8.39457854e-08,
                        1
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Pyramid" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        118.847107,
                        309.999908,
                        4943.37939,
                        0.99994427,
                        -1.68357115e-08,
                        -0.0105592962,
                        1.60353579e-08,
                        1,
                        -7.58807701e-08,
                        0.0105592962,
                        7.57072129e-08,
                        0.99994427
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Mansion" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        1835.2124,
                        269.999908,
                        861.194275,
                        -0.693691909,
                        -5.51743398e-08,
                        0.720271826,
                        2.95930125e-09,
                        1,
                        7.94521995e-08,
                        -0.720271826,
                        5.72468508e-08,
                        -0.693691909
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Moon Island" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        3188.60791,
                        356.999908,
                        1627.56262,
                        0.999993682,
                        7.89155479e-08,
                        -0.0035616986,
                        -7.86453924e-08,
                        1,
                        7.59900161e-08,
                        0.0035616986,
                        -7.57094227e-08,
                        0.999993682
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                elseif zxcrris == "Vokun Island" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        CFrame.new(
                        4434.4165,
                        487.999908,
                        5735.77051,
                        0.967606544,
                        4.68326107e-08,
                        -0.252463102,
                        -5.17578975e-08,
                        1,
                        -1.28679076e-08,
                        0.252463102,
                        2.55180304e-08,
                        0.967606544
                    )
                    Fluent:Notify(
                        {
                            Title = "Teleport Notify",
                            Content = "Teleported to " .. zxcrris,
                            Duration = 1
                        }
                    )
                end
            end
        )

        Tabs.Weapon:AddSection("Equipment")
        weapontype =
            Tabs.Weapon:AddDropdown(
            "tanglunroie11",
            {
                Title = "Select Weapon Type",
                Values = {"Melee", "Sniper", "Sword", "Utility"},
                Multi = false,
                Default = ""
            }
        )

        weapontype:OnChanged(
            function(wtypea)
                _G.weponity = wtypea
            end
        )

        equipwe = Tabs.Weapon:AddToggle("equipwetoggle", {Title = "Auto Equip Weapon", Default = false})
        equipwe:OnChanged(
            function()
                if Options.equipwetoggle.Value == true then
                    getgenv().eqqqqq = true
                else
                    getgenv().eqqqqq = false
                end

                while getgenv().eqqqqq do
                    wait()
                    pcall(
                        function()
                            if _G.weponity == "Melee" then
                                for _, c in pairs(MeleeTTT) do
                                    if game.Players.LocalPlayer.Backpack:FindFirstChild(c) then
                                        x = game.Players.LocalPlayer.Backpack:FindFirstChild(c)
                                        x.Parent = game.Players.LocalPlayer.Character
                                    end
                                end
                            elseif _G.weponity == "Sniper" then
                                for _, c in pairs(SniperTTT) do
                                    if game.Players.LocalPlayer.Backpack:FindFirstChild(c) then
                                        x = game.Players.LocalPlayer.Backpack:FindFirstChild(c)
                                        x.Parent = game.Players.LocalPlayer.Character
                                    end
                                end
                            elseif _G.weponity == "Sword" then
                                for _, c in pairs(SwordTTT) do
                                    if game.Players.LocalPlayer.Backpack:FindFirstChild(c) then
                                        x = game.Players.LocalPlayer.Backpack:FindFirstChild(c)
                                        x.Parent = game.Players.LocalPlayer.Character
                                    end
                                end
                            elseif _G.weponity == "Utility" then
                                for _, c in pairs(UtilityTTT) do
                                    if game.Players.LocalPlayer.Backpack:FindFirstChild(c) then
                                        x = game.Players.LocalPlayer.Backpack:FindFirstChild(c)
                                        x.Parent = game.Players.LocalPlayer.Character
                                    end
                                end
                            end
                        end
                    )
                end
            end
        )

        attackweapon = Tabs.Weapon:AddToggle("attackweapontoggle", {Title = "Auto Use Weapon", Default = false})
        attackweapon:OnChanged(
            function()
                if Options.attackweapontoggle.Value == true then
                    getgenv().useweapon = true
                else
                    getgenv().useweapon = false
                end

                while getgenv().useweapon do
                    wait()
                    pcall(
                        function()
                            for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                                for i, c in pairs(MeleeTTT) do
                                    if v.Name == c then
                                        v:Activate()
                                    end
                                end

                                for i, d in pairs(SniperTTT) do
                                    if v.Name == d then
                                        v:Activate()
                                    end
                                end

                                for i, e in pairs(SwordTTT) do
                                    if v.Name == e then
                                        v:Activate()
                                    end
                                end

                                for i, f in pairs(UtilityTTT) do
                                    if v.Name == f then
                                        v:Activate()
                                    end
                                end
                            end
                        end
                    )
                end
            end
        )

        Tabs.Weapon:AddSection("Instant Weapon")
        Tabs.Weapon:AddSection("Yoru Spam")
        yorusmazz =
            Tabs.Weapon:AddSlider(
            "yorusmazz",
            {
                Title = "Yoru Spped",
                Description = "Recommend: \nCamp:15 ; Farm:25->50",
                Default = 15,
                Min = 1,
                Max = 100,
                Rounding = 0,
                Callback = function(zxceyoz)
                    yoruspeedzx = tonumber(zxceyoz)
                end
            }
        )

        tyoru = Tabs.Weapon:AddToggle("tyorutoggle", {Title = "Yoru Spamming", Default = false})
        tyoru:OnChanged(
            function()
                if Options.tyorutoggle.Value == true then
                    _G.yoruonrt = true
                    while _G.yoruonrt do
                        wait()
                        pcall(
                            function()
                                if game.Players.LocalPlayer.Backpack:FindFirstChild("Yoru") then
                                    for i, v in pairs(
                                        getconnections(
                                            game.Players.LocalPlayer.Backpack:FindFirstChild("Yoru").RequestAnimation.OnClientEvent
                                        )
                                    ) do
                                        yorucode =
                                            getsenv(
                                            game.Players.LocalPlayer.Backpack:FindFirstChild("Yoru").AnimationController
                                        ).PlaceId
                                    end
                                elseif game.Players.LocalPlayer.Character:FindFirstChild("Yoru") then
                                    for i, v in pairs(
                                        getconnections(
                                            game.Players.LocalPlayer.Character:FindFirstChild("Yoru").RequestAnimation.OnClientEvent
                                        )
                                    ) do
                                        yorucode =
                                            getsenv(
                                            game.Players.LocalPlayer.Character:FindFirstChild("Yoru").AnimationController
                                        ).PlaceId
                                    end
                                end
                                repeat
                                    task.wait()
                                    if yorucode ~= "" then
                                        for i = 1, yoruspeedzx do
                                            local args = {
                                                [1] = yorucode
                                            }

                                            game:GetService("Players").LocalPlayer.Character.Yoru.RequestAnimation:FireServer(
                                                unpack(args)
                                            )
                                        end
                                    end
                                until not _G.yoruonrt or
                                    game:GetService("Players").LocalPlayer.PlayerGui.Load.Frame.Visible == true
                                yorucode = ""
                            end
                        )
                    end
                else
                    _G.yoruonrt = false
                end
            end
        )

        Tabs.Weapon:AddSection("Cestus Spam")
        cestussmazz =
            Tabs.Weapon:AddSlider(
            "cestussmazz",
            {
                Title = "Cestus Spped",
                Description = "Recommend: \nCamp:15 ; Farm:25->50",
                Default = 15,
                Min = 1,
                Max = 100,
                Rounding = 0,
                Callback = function(zxceyoz)
                    cestusspeedzx = tonumber(zxceyoz)
                end
            }
        )

        tcestus = Tabs.Weapon:AddToggle("tcestustoggle", {Title = "Cestus Spamming", Default = false})
        tcestus:OnChanged(
            function()
                if Options.tcestustoggle.Value == true then
                    _G.cestusonrt = true
                    while _G.cestusonrt do
                        wait()
                        pcall(
                            function()
                                if game.Players.LocalPlayer.Backpack:FindFirstChild("Seastone Cestus") then
                                    for i, v in pairs(
                                        getconnections(
                                            game.Players.LocalPlayer.Backpack:FindFirstChild("Seastone Cestus").RequestAnimation.OnClientEvent
                                        )
                                    ) do
                                        cestuscode =
                                            getsenv(
                                            game.Players.LocalPlayer.Backpack:FindFirstChild("Seastone Cestus").AnimationController
                                        ).PlaceId
                                    end
                                elseif game.Players.LocalPlayer.Character:FindFirstChild("Seastone Cestus") then
                                    for i, v in pairs(
                                        getconnections(
                                            game.Players.LocalPlayer.Character:FindFirstChild("Seastone Cestus").RequestAnimation.OnClientEvent
                                        )
                                    ) do
                                        cestuscode =
                                            getsenv(
                                            game.Players.LocalPlayer.Character:FindFirstChild("Seastone Cestus").AnimationController
                                        ).PlaceId
                                    end
                                end
                                repeat
                                    task.wait()
                                    for i = 1, cestusspeedzx do
                                        local args = {
                                            [1] = cestuscode
                                        }

                                        game:GetService("Players").LocalPlayer.Character["Seastone Cestus"].RequestAnimation:FireServer(
                                            unpack(args)
                                        )
                                    end
                                until not _G.cestusonrt or
                                    game:GetService("Players").LocalPlayer.PlayerGui.Load.Frame.Visible == true
                                cestuscode = ""
                            end
                        )
                    end
                else
                    _G.cestusonrt = false
                end
            end
        )

        Tabs.Main:AddSection("Stats Farming")
        statsfarm = Tabs.Main:AddToggle("statstoggle", {Title = "Auto Farm Mixer (Fast)", Default = false})
        statsfarm:OnChanged(
            function()
                if Options.statstoggle.Value == true then
                    getgenv().farmstats = true
                else
                    getgenv().farmstats = false
                end
            end
        )

        statsfarmslow =
            Tabs.Main:AddToggle("statsfarmslowtoggle", {Title = "Auto Farm Mixer (Normal)", Default = false})
        statsfarmslow:OnChanged(
            function()
                if Options.statsfarmslowtoggle.Value == true then
                    getgenv().farmslowstats = true
                else
                    getgenv().farmslowstats = false
                end
            end
        )

        statsdrink = Tabs.Main:AddToggle("statsdrinktoggle", {Title = "Auto Drink Mixer", Default = false})
        statsdrink:OnChanged(
            function()
                if Options.statsdrinktoggle.Value == true then
                    getgenv().autodrinkmixer = true
                else
                    getgenv().autodrinkmixer = false
                end

                while getgenv().autodrinkmixer do
                    wait(2)
                    pcall(
                        function()
                            for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                                if
                                    string.find(v.Name, "Juice") or string.find(v.Name, "Milk") or
                                        string.find(v.Name, "Cider") or
                                        string.find(v.Name, "Lemonade") or
                                        string.find(v.Name, "Smoothie") or
                                        string.find(v.Name, "Golden")
                                 then
                                    v.Parent = game.Players.LocalPlayer.Character
                                end
                            end
                            for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                                if
                                    string.find(v.Name, "Juice") or string.find(v.Name, "Milk") or
                                        string.find(v.Name, "Cider") or
                                        string.find(v.Name, "Lemonade") or
                                        string.find(v.Name, "Smoothie") or
                                        string.find(v.Name, "Golden")
                                 then
                                    v:Activate()
                                    v:Activate()
                                    v:Activate()
                                    v:Destroy()
                                end
                            end
                            for i, c in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                                if string.find(c.Name, "Crab") then
                                    c:Destroy()
                                end
                            end
                        end
                    )
                end
            end
        )

        Tabs.Haki:AddSection("Haki Stuff")
        gethaki = Tabs.Haki:AddToggle("hakiget", {Title = "Auto get haki (1k lvl)", Default = false})
        gethaki:OnChanged(
            function()
                if Options.hakiget.Value == true then
                    _G.gethakiqwe = true
                    while _G.gethakiqwe do
                        wait()
                        pcall(
                            function()
                                workspace:WaitForChild("Merchants"):WaitForChild("QuestHakiMerchant"):WaitForChild(
                                    "Clickable"
                                ):WaitForChild("Retum"):FireServer()
                                wait(3)
                            end
                        )
                    end
                else
                    _G.gethakiqwe = false
                end
            end
        )

        Tabs.Haki:AddButton(
            {
                Title = "Drain Haki",
                Description = "Click To Drain Haki To 0",
                Callback = function()
                    function hakiauto()
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "Off",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                        local args = {
                            [1] = "On",
                            [2] = 1
                        }

                        workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].III:FireServer(unpack(args))
                    end
                    wait()
                    for i = 1, 10 do
                        hakiauto()
                    end
                end
            }
        )

        hakirjoin = Tabs.Haki:AddToggle("hakirjointoggle", {Title = "Rejoin If 0% Haki", Default = false})
        hakirjoin:OnChanged(
            function()
                if Options.hakirjointoggle.Value == true then
                    _G.rejoinifhaki0 = true
                    while _G.rejoinifhaki0 do
                        wait()
                        pcall(
                            function()
                                repeat
                                    wait()
                                    local zxm =
                                        game.workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.HakiLevel.Value
                                    local zcc = zxm / 100 * 2
                                    if
                                        game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].HakiBar.Value <
                                            zcc
                                     then
                                        game.Players.LocalPlayer:Kick("Hoping Server, Please Wait...")
                                        TeleportService = game:GetService("TeleportService")
                                        HttpService = game:GetService("HttpService")
                                        PlaceId, JobId = game.PlaceId, game.JobId
                                        httprequest =
                                            (syn and syn.request) or (http and http.request) or http_request or
                                            (fluxus and fluxus.request) or
                                            request
                                        if httprequest then
                                            httprequest(
                                                {
                                                    Url = "http://127.0.0.1:6463/rpc?v=1",
                                                    Method = "POST",
                                                    Headers = {
                                                        ["Content-Type"] = "application/json",
                                                        Origin = "https://discord.com"
                                                    },
                                                    Body = HttpService:JSONEncode(
                                                        {
                                                            cmd = "INVITE_BROWSER",
                                                            nonce = HttpService:GenerateGUID(false),
                                                            args = {code = "dYHag43eeU"}
                                                        }
                                                    )
                                                }
                                            )
                                        end
                                        if httprequest then
                                            local servers = {}
                                            local req =
                                                httprequest(
                                                {
                                                    Url = string.format(
                                                        "https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true",
                                                        PlaceId
                                                    )
                                                }
                                            )
                                            local body = HttpService:JSONDecode(req.Body)

                                            if body and body.data then
                                                for i, v in next, body.data do
                                                    if
                                                        type(v) == "table" and tonumber(v.playing) and
                                                            tonumber(v.maxPlayers) and
                                                            v.playing < v.maxPlayers and
                                                            v.id ~= JobId
                                                     then
                                                        table.insert(servers, 1, v.id)
                                                    end
                                                end
                                            end

                                            if #servers > 0 then
                                                TeleportService:TeleportToPlaceInstance(
                                                    PlaceId,
                                                    servers[math.random(1, #servers)],
                                                    game.Players.LocalPlayer
                                                )
                                            else
                                                return notify("Serverhop", "Couldn't find a server.")
                                            end
                                        else
                                            notify(
                                                "Incompatible Exploit",
                                                "Your exploit does not support this command (missing request)"
                                            )
                                        end
                                    end
                                until not _G.rejoinifhaki0
                            end
                        )
                    end
                else
                    _G.rejoinifhaki0 = false
                end
            end
        )

        Tabs.Haki:AddSection("Auto Haki Farming")
        hakitargett =
            Tabs.Haki:AddSlider(
            "hakitarsli",
            {
                Title = "Haki Target (%)",
                Description = "Change this for adjusting haki's target",
                Default = 65,
                Min = 20,
                Max = 90,
                Rounding = 0,
                Callback = function(gmm)
                    hakitarget = tonumber(gmm)
                end
            }
        )

        hakispeedt =
            Tabs.Haki:AddSlider(
            "hakispeedsli",
            {
                Title = "Haki Speed",
                Description = "Change this for adjusting haki's speed",
                Default = 10,
                Min = 1,
                Max = 50,
                Rounding = 0,
                Callback = function(gttmm)
                    hakispeed = tonumber(gttmm)
                end
            }
        )

        farmhaki = Tabs.Haki:AddToggle("hakifarmtoggle", {Title = "Auto Farm Haki", Default = false})
        farmhaki:OnChanged(
            function()
                if Options.hakifarmtoggle.Value == true then
                    _G.farmhakinek = true
                else
                    _G.farmhakinek = false
                end
            end
        )

        Tabs.Haki:AddSection("Advanced Haki Farming")
        hakiadvancespeed =
            Tabs.Haki:AddSlider(
            "advanceslihaki",
            {
                Title = "Advanced Haki Speed",
                Description = "Change Advanced Haki Speed",
                Default = 999,
                Min = 1,
                Max = 999,
                Rounding = 0,
                Callback = function(concacadvance)
                    speedyadvance = tonumber(concacadvance)
                end
            }
        )

        advaerqwe = Tabs.Haki:AddToggle("advaerqwetoggle", {Title = "Advance Haki Farming", Default = false})
        advaerqwe:OnChanged(
            function()
                if Options.advaerqwetoggle.Value == true then
                    _G.farmadvanced = true
                else
                    _G.farmadvanced = false
                end
            end
        )

        Tabs.Server:AddSection("Discord")
        Tabs.Server:AddParagraph(
            {
                Title = "Discord Information",
                Content = "Discord Invite Link: https://discord.gg/ecpbhm8G3w"
            }
        )

        Tabs.Server:AddButton(
            {
                Title = "Discord Saluna Hub",
                Description = "Copy Discord Invite Link",
                Callback = function()
                    toClipboard("https://discord.gg/ecpbhm8G3w")
                end
            }
        )

        Tabs.Server:AddSection("Rejoin/Hop")
        Tabs.Server:AddButton(
            {
                Title = "Rejoin Server",
                Description = "Rejoin the current server",
                Callback = function()
                    Window:Dialog(
                        {
                            Title = "Rejoin Server",
                            Content = "Do you want to use?",
                            Buttons = {
                                {
                                    Title = "OK",
                                    Callback = function()
                                        game.Players.LocalPlayer:Kick("Rejoining Server, Please Wait...")
                                        game:GetService("TeleportService"):TeleportToPlaceInstance(
                                            game.PlaceId,
                                            game.JobId,
                                            game.Players.LocalPlayer
                                        )
                                    end
                                },
                                {
                                    Title = "Cancel",
                                    Callback = function()
                                    end
                                }
                            }
                        }
                    )
                end
            }
        )

        Tabs.Server:AddButton(
            {
                Title = "Hop Server",
                Description = "Hop to random server",
                Callback = function()
                    Window:Dialog(
                        {
                            Title = "Hop Server",
                            Content = "Do you want to use?",
                            Buttons = {
                                {
                                    Title = "OK",
                                    Callback = function()
                                        game.Players.LocalPlayer:Kick("Hoping Server, Please Wait...")
                                        TeleportService = game:GetService("TeleportService")
                                        HttpService = game:GetService("HttpService")
                                        PlaceId, JobId = game.PlaceId, game.JobId
                                        httprequest =
                                            (syn and syn.request) or (http and http.request) or http_request or
                                            (fluxus and fluxus.request) or
                                            request
                                        if httprequest then
                                            httprequest(
                                                {
                                                    Url = "http://127.0.0.1:6463/rpc?v=1",
                                                    Method = "POST",
                                                    Headers = {
                                                        ["Content-Type"] = "application/json",
                                                        Origin = "https://discord.com"
                                                    },
                                                    Body = HttpService:JSONEncode(
                                                        {
                                                            cmd = "INVITE_BROWSER",
                                                            nonce = HttpService:GenerateGUID(false),
                                                            args = {code = "dYHag43eeU"}
                                                        }
                                                    )
                                                }
                                            )
                                        end
                                        if httprequest then
                                            local servers = {}
                                            local req =
                                                httprequest(
                                                {
                                                    Url = string.format(
                                                        "https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true",
                                                        PlaceId
                                                    )
                                                }
                                            )
                                            local body = HttpService:JSONDecode(req.Body)

                                            if body and body.data then
                                                for i, v in next, body.data do
                                                    if
                                                        type(v) == "table" and tonumber(v.playing) and
                                                            tonumber(v.maxPlayers) and
                                                            v.playing < v.maxPlayers and
                                                            v.id ~= JobId
                                                     then
                                                        table.insert(servers, 1, v.id)
                                                    end
                                                end
                                            end

                                            if #servers > 0 then
                                                TeleportService:TeleportToPlaceInstance(
                                                    PlaceId,
                                                    servers[math.random(1, #servers)],
                                                    game.Players.LocalPlayer
                                                )
                                            else
                                                return notify("Serverhop", "Couldn't find a server.")
                                            end
                                        else
                                            notify(
                                                "Incompatible Exploit",
                                                "Your exploit does not support this command (missing request)"
                                            )
                                        end
                                    end
                                },
                                {
                                    Title = "Cancel",
                                    Callback = function()
                                    end
                                }
                            }
                        }
                    )
                end
            }
        )

        Tabs.Server:AddButton(
            {
                Title = "Low-Server Hop",
                Description = "Hop to a lowest players server",
                Callback = function()
                    Window:Dialog(
                        {
                            Title = "Low-Server Hop",
                            Content = "Do you want to use?",
                            Buttons = {
                                {
                                    Title = "OK",
                                    Callback = function()
                                        game.Players.LocalPlayer:Kick("Hoping Server, Please Wait...")
                                        local PlaceID = game.PlaceId
                                        local AllIDs = {}
                                        local foundAnything = ""
                                        local actualHour = os.date("!*t").hour
                                        local Deleted = false
                                        function TPReturner()
                                            local Site
                                            if foundAnything == "" then
                                                Site =
                                                    game.HttpService:JSONDecode(
                                                    game:HttpGet(
                                                        "https://games.roblox.com/v1/games/" ..
                                                            PlaceID .. "/servers/Public?sortOrder=Asc&limit=100"
                                                    )
                                                )
                                            else
                                                Site =
                                                    game.HttpService:JSONDecode(
                                                    game:HttpGet(
                                                        "https://games.roblox.com/v1/games/" ..
                                                            PlaceID ..
                                                                "/servers/Public?sortOrder=Asc&limit=100&cursor=" ..
                                                                    foundAnything
                                                    )
                                                )
                                            end
                                            local ID = ""
                                            if
                                                Site.nextPageCursor and Site.nextPageCursor ~= "null" and
                                                    Site.nextPageCursor ~= nil
                                             then
                                                foundAnything = Site.nextPageCursor
                                            end
                                            local num = 0
                                            for i, v in pairs(Site.data) do
                                                local Possible = true
                                                ID = tostring(v.id)
                                                if tonumber(v.maxPlayers) > tonumber(v.playing) then
                                                    for _, Existing in pairs(AllIDs) do
                                                        if num ~= 0 then
                                                            if ID == tostring(Existing) then
                                                                Possible = false
                                                            end
                                                        else
                                                            if tonumber(actualHour) ~= tonumber(Existing) then
                                                                local delFile =
                                                                    pcall(
                                                                    function()
                                                                        -- delfile("NotSameServers.json")
                                                                        AllIDs = {}
                                                                        table.insert(AllIDs, actualHour)
                                                                    end
                                                                )
                                                            end
                                                        end
                                                        num = num + 1
                                                    end
                                                    if Possible == true then
                                                        table.insert(AllIDs, ID)
                                                        wait()
                                                        pcall(
                                                            function()
                                                                -- writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                                                                wait()
                                                                game:GetService("TeleportService"):TeleportToPlaceInstance(
                                                                    PlaceID,
                                                                    ID,
                                                                    game.Players.LocalPlayer
                                                                )
                                                            end
                                                        )
                                                        wait(.1)
                                                    end
                                                end
                                            end
                                        end
                                        function Teleport()
                                            while wait() do
                                                pcall(
                                                    function()
                                                        TPReturner()
                                                        if foundAnything ~= "" then
                                                            TPReturner()
                                                        end
                                                    end
                                                )
                                            end
                                        end
                                        Teleport()
                                    end
                                },
                                {
                                    Title = "Cancel",
                                    Callback = function()
                                    end
                                }
                            }
                        }
                    )
                end
            }
        )

        Tabs.Server:AddButton(
            {
                Title = "High-Server Hop",
                Description = "Hop to a highest players server",
                Callback = function()
                    Window:Dialog(
                        {
                            Title = "High-Server Hop",
                            Content = "Do you want to use?",
                            Buttons = {
                                {
                                    Title = "OK",
                                    Callback = function()
                                        game.Players.LocalPlayer:Kick("Hoping Server, Please Wait...")
                                        local PlaceID = game.PlaceId
                                        local HttpService = game:GetService("HttpService")
                                        local TeleportService = game:GetService("TeleportService")
                                        local function getServerList(cursor)
                                            local url =
                                                "https://games.roblox.com/v1/games/" ..
                                                PlaceID .. "/servers/Public?sortOrder=Desc&limit=100"
                                            if cursor and cursor ~= "" then
                                                url = url .. "&cursor=" .. cursor
                                            end
                                            local response = HttpService:JSONDecode(game:HttpGet(url))
                                            return response
                                        end
                                        local function findHighestPlayerServer()
                                            local highestServer = nil
                                            local foundAnything = ""
                                            repeat
                                                local Site = getServerList(foundAnything)
                                                if
                                                    Site.nextPageCursor and Site.nextPageCursor ~= "null" and
                                                        Site.nextPageCursor ~= nil
                                                 then
                                                    foundAnything = Site.nextPageCursor
                                                else
                                                    foundAnything = nil
                                                end
                                                for _, server in pairs(Site.data) do
                                                    if not highestServer or server.playing > highestServer.playing then
                                                        highestServer = server
                                                    end
                                                end
                                            until not foundAnything
                                            return highestServer
                                        end

                                        local function hopToHighestPlayerServer()
                                            local highestServer = findHighestPlayerServer()
                                            if highestServer then
                                                local serverId = highestServer.id
                                                TeleportService:TeleportToPlaceInstance(
                                                    PlaceID,
                                                    serverId,
                                                    game.Players.LocalPlayer
                                                )
                                            else
                                                print("No servers found.")
                                            end
                                        end
                                        hopToHighestPlayerServer()
                                    end
                                },
                                {
                                    Title = "Cancel",
                                    Callback = function()
                                    end
                                }
                            }
                        }
                    )
                end
            }
        )

        Tabs.Affinity:AddSection("Roll Affinity 1st Devil Fruit")

        Lucyfirst =
            Tabs.Affinity:AddSlider(
            "rollaff1sli",
            {
                Title = "1st Devil Fruit Point",
                Description = "Choose the point of affinity",
                Default = 2,
                Min = 1,
                Max = 2,
                Rounding = 1,
                Callback = function(treotttt)
                    _G.trqpwo = tonumber(treotttt)
                end
            }
        )

        wrrrrr =
            Tabs.Affinity:AddDropdown(
            "dqwww",
            {
                Title = "Lock Affinity (DF1)",
                Description = "You can choose affinities to lock.",
                Values = {"Defense", "Melee", "Sniper", "Sword"},
                Multi = true,
                Default = {""}
            }
        )

        wrrrrr:OnChanged(
            function(Valuer)
                _G.keepdef = false
                _G.keepmelee = false
                _G.keepsnip = false
                _G.keepsword = false
                Values = {"None"}
                task.wait()
                for Valuer, State in next, Valuer do
                    table.insert(Values, Valuer)
                end
                for _, n in pairs(Values) do
                    if string.find(n, "Defense") then
                        _G.keepdef = true
                    end
                    if string.find(n, "Melee") then
                        _G.keepmelee = true
                    end
                    if string.find(n, "Sniper") then
                        _G.keepsnip = true
                    end
                    if string.find(n, "Sword") then
                        _G.keepsword = true
                    end
                end
            end
        )

        wwwwww =
            Tabs.Affinity:AddDropdown(
            "dtqzxcwww",
            {
                Title = "Target Affinity (DF1)",
                Description = "You can choose the target affinity.",
                Values = {"Defense", "Melee", "Sniper", "Sword"},
                Multi = true,
                Default = {""}
            }
        )

        wwwwww:OnChanged(
            function(Valuerr)
                _G.targetdef = false
                _G.targetmelee = false
                _G.targetsnip = false
                _G.targetsword = false
                Valuess = {"None"}
                task.wait()
                for Valuerr, State in next, Valuerr do
                    table.insert(Valuess, Valuerr)
                end
                for _, q in pairs(Valuess) do
                    if string.find(q, "Defense") then
                        _G.targetdef = true
                    end
                    if string.find(q, "Melee") then
                        _G.targetmelee = true
                    end
                    if string.find(q, "Sniper") then
                        _G.targetsnip = true
                    end
                    if string.find(q, "Sword") then
                        _G.targetsword = true
                    end
                end
            end
        )

        ret =
            Tabs.Affinity:AddDropdown(
            "vxe1",
            {
                Title = "Budget Type",
                Values = {"Cash", "Gems"},
                Multi = false,
                Default = ""
            }
        )

        ret:OnChanged(
            function(Valuezx)
                _G.budget = Valuezx
            end
        )

        DF11Toggle = Tabs.Affinity:AddToggle("DF1Toggle", {Title = "Auto Roll Affinity (DF1)", Default = false})
        DF11Toggle:OnChanged(
            function(gg)
                while Options.DF1Toggle.Value do
                    wait()
                    pcall(
                        function()
                            if Options.DF1Toggle.Value == true then
                                _G.quayfirstdf = true
                            else
                                _G.quayfirstdf = false
                            end
                            if
                                _G.targetdef == true and _G.targetsnip == false and _G.targetmelee == false and
                                    _G.targetsword == false and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Defense.Value <
                                        _G.trqpwo
                             then
                                _G.defspin = true
                            else
                                _G.defspin = false
                            end
                            if
                                _G.targetmelee == true and _G.targetdef == false and _G.targetsword == false and
                                    _G.targetsnip == false and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Melee.Value <
                                        _G.trqpwo
                             then
                                _G.meleespin = true
                            else
                                _G.meleespin = false
                            end
                            if
                                _G.targetsnip == true and _G.targetdef == false and _G.targetmelee == false and
                                    _G.targetsword == false and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Sniper.Value <
                                        _G.trqpwo
                             then
                                _G.sniperspin = true
                            else
                                _G.sniperspin = false
                            end
                            if
                                _G.targetsword == true and _G.targetdef == false and _G.targetmelee == false and
                                    _G.targetsnip == false and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Sword.Value <
                                        _G.trqpwo
                             then
                                _G.swordspin = true
                            else
                                _G.swordspin = false
                            end
                            if
                                _G.targetsword == false and _G.targetdef == true and _G.targetmelee == true and
                                    _G.targetsnip == false and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Defense.Value <
                                        _G.trqpwo and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Melee.Value <
                                        _G.trqpwo
                             then
                                _G.defmeleespin = true
                            else
                                _G.defmeleespin = false
                            end
                            if
                                _G.targetsword == false and _G.targetdef == true and _G.targetmelee == false and
                                    _G.targetsnip == true and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Defense.Value <
                                        _G.trqpwo and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Sniper.Value <
                                        _G.trqpwo
                             then
                                _G.defsnipspin = true
                            else
                                _G.defsnipspin = false
                            end
                            if
                                _G.targetsword == true and _G.targetdef == true and _G.targetmelee == false and
                                    _G.targetsnip == false and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Defense.Value <
                                        _G.trqpwo and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Sword.Value <
                                        _G.trqpwo
                             then
                                _G.defswordspin = true
                            else
                                _G.defswordspin = false
                            end
                            if
                                _G.targetsword == false and _G.targetdef == false and _G.targetmelee == true and
                                    _G.targetsnip == true and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Melee.Value <
                                        _G.trqpwo and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Sniper.Value <
                                        _G.trqpwo
                             then
                                _G.meleesnipspin = true
                            else
                                _G.meleesnipspin = false
                            end
                            if
                                _G.targetsword == true and _G.targetdef == false and _G.targetmelee == true and
                                    _G.targetsnip == false and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Melee.Value <
                                        _G.trqpwo and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Sword.Value <
                                        _G.trqpwo
                             then
                                _G.meleeswordspin = true
                            else
                                _G.meleeswordspin = false
                            end
                            if
                                _G.targetsword == true and _G.targetdef == false and _G.targetmelee == false and
                                    _G.targetsnip == true and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Sniper.Value <
                                        _G.trqpwo and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Sword.Value <
                                        _G.trqpwo
                             then
                                _G.swordsnipspin = true
                            else
                                _G.swordsnipspin = false
                            end
                            if
                                _G.targetsword == false and _G.targetdef == true and _G.targetmelee == true and
                                    _G.targetsnip == true and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Sniper.Value <
                                        _G.trqpwo and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Defense.Value <
                                        _G.trqpwo and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Melee.Value <
                                        _G.trqpwo
                             then
                                _G.defmeleesnipspin = true
                            else
                                _G.defmeleesnipspin = false
                            end
                            if
                                _G.targetsword == true and _G.targetdef == true and _G.targetmelee == true and
                                    _G.targetsnip == false and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Sword.Value <
                                        _G.trqpwo and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Defense.Value <
                                        _G.trqpwo and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Melee.Value <
                                        _G.trqpwo
                             then
                                _G.defmeleeswordspin = true
                            else
                                _G.defmeleeswordspin = false
                            end
                            if
                                _G.targetsword == true and _G.targetdef == false and _G.targetmelee == true and
                                    _G.targetsnip == true and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Sword.Value <
                                        _G.trqpwo and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Sniper.Value <
                                        _G.trqpwo and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Melee.Value <
                                        _G.trqpwo
                             then
                                _G.meleesnipswordspin = true
                            else
                                _G.meleesnipswordspin = false
                            end
                            if
                                _G.targetsword == true and _G.targetdef == true and _G.targetmelee == false and
                                    _G.targetsnip == true and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Sword.Value <
                                        _G.trqpwo and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Sniper.Value <
                                        _G.trqpwo and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Defense.Value <
                                        _G.trqpwo
                             then
                                _G.defswordsnip = true
                            else
                                _G.defswordsnip = false
                            end
                            if
                                _G.targetsword == true and _G.targetdef == true and _G.targetmelee == true and
                                    _G.targetsnip == true and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Sword.Value <
                                        _G.trqpwo and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Sniper.Value <
                                        _G.trqpwo and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Melee.Value <
                                        _G.trqpwo and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT1Defense.Value <
                                        _G.trqpwo
                             then
                                _G.allspin = true
                            else
                                _G.allspin = false
                            end
                        end
                    )
                end
            end
        )

        Tabs.Affinity:AddSection("Roll Affinity 2st Devil Fruit")
        Lucysecond =
            Tabs.Affinity:AddSlider(
            "rollaff2sli",
            {
                Title = "2nd Devil Fruit Point",
                Description = "Choose the point of affinity",
                Default = 2,
                Min = 1,
                Max = 2,
                Rounding = 1,
                Callback = function(treot)
                    _G.trqpwo2 = tonumber(treot)
                end
            }
        )

        wrrrrr2 =
            Tabs.Affinity:AddDropdown(
            "vqw44",
            {
                Title = "Lock Affinity (DF2)",
                Description = "You can choose affinities to lock.",
                Values = {"Defense", "Melee", "Sniper", "Sword"},
                Multi = true,
                Default = {""}
            }
        )

        wrrrrr2:OnChanged(
            function(Valuer2)
                _G.keepdef2 = false
                _G.keepmelee2 = false
                _G.keepsnip2 = false
                _G.keepsword2 = false
                Values2 = {"None"}
                wait()
                for Valuer2, State in next, Valuer2 do
                    table.insert(Values2, Valuer2)
                end
                for _, m in pairs(Values2) do
                    if string.find(m, "Defense") then
                        _G.keepdef2 = true
                    end
                    if string.find(m, "Melee") then
                        _G.keepmelee2 = true
                    end
                    if string.find(m, "Sniper") then
                        _G.keepsnip2 = true
                    end
                    if string.find(m, "Sword") then
                        _G.keepsword2 = true
                    end
                end
            end
        )

        wwrwwww2 =
            Tabs.Affinity:AddDropdown(
            "tyumm1z",
            {
                Title = "Target Affinity (DF2)",
                Description = "You can choose the target affinity.",
                Values = {"Defense", "Melee", "Sniper", "Sword"},
                Multi = true,
                Default = {""}
            }
        )

        wwrwwww2:OnChanged(
            function(Valuerr2)
                _G.targetdef2 = false
                _G.targetmelee2 = false
                _G.targetsnip2 = false
                _G.targetsword2 = false
                Valuess2 = {"None"}
                wait()
                for Valuerr2, State in next, Valuerr2 do
                    table.insert(Valuess2, Valuerr2)
                end
                for _, r in pairs(Valuess2) do
                    if string.find(r, "Defense") then
                        _G.targetdef2 = true
                    end
                    if string.find(r, "Melee") then
                        _G.targetmelee2 = true
                    end
                    if string.find(r, "Sniper") then
                        _G.targetsnip2 = true
                    end
                    if string.find(r, "Sword") then
                        _G.targetsword2 = true
                    end
                end
            end
        )

        retw2 =
            Tabs.Affinity:AddDropdown(
            "ccas24ff",
            {
                Title = "Budget Type",
                Values = {"Cash", "Gems"},
                Multi = false,
                Default = ""
            }
        )

        retw2:OnChanged(
            function(Valuezx2)
                _G.budget2 = Valuezx2
            end
        )

        DF22Toggle = Tabs.Affinity:AddToggle("DF2Toggle", {Title = "Auto Roll Affinity (DF2)", Default = false})
        DF22Toggle:OnChanged(
            function(tt)
                while Options.DF2Toggle.Value do
                    wait()
                    pcall(
                        function()
                            if Options.DF2Toggle.Value == true then
                                _G.quayfirstdf2 = true
                            else
                                _G.quayfirstdf2 = false
                            end
                            if
                                _G.targetdef2 == true and _G.targetsnip2 == false and _G.targetmelee2 == false and
                                    _G.targetsword2 == false and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Defense.Value <
                                        _G.trqpwo2
                             then
                                _G.defspin2 = true
                            else
                                _G.defspin2 = false
                            end
                            if
                                _G.targetmelee2 == true and _G.targetdef2 == false and _G.targetsword2 == false and
                                    _G.targetsnip2 == false and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Melee.Value <
                                        _G.trqpwo2
                             then
                                _G.meleespin2 = true
                            else
                                _G.meleespin2 = false
                            end
                            if
                                _G.targetsnip2 == true and _G.targetdef2 == false and _G.targetmelee2 == false and
                                    _G.targetsword2 == false and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Sniper.Value <
                                        _G.trqpwo2
                             then
                                _G.sniperspin2 = true
                            else
                                _G.sniperspin2 = false
                            end
                            if
                                _G.targetsword2 == true and _G.targetdef2 == false and _G.targetmelee2 == false and
                                    _G.targetsnip2 == false and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Sword.Value <
                                        _G.trqpwo2
                             then
                                _G.swordspin2 = true
                            else
                                _G.swordspin2 = false
                            end
                            if
                                _G.targetsword2 == false and _G.targetdef2 == true and _G.targetmelee2 == true and
                                    _G.targetsnip2 == false and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Defense.Value <
                                        _G.trqpwo2 and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Melee.Value <
                                        _G.trqpwo2
                             then
                                _G.defmeleespin2 = true
                            else
                                _G.defmeleespin2 = false
                            end
                            if
                                _G.targetsword2 == false and _G.targetdef2 == true and _G.targetmelee2 == false and
                                    _G.targetsnip2 == true and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Defense.Value <
                                        _G.trqpwo2 and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Sniper.Value <
                                        _G.trqpwo2
                             then
                                _G.defsnipspin2 = true
                            else
                                _G.defsnipspin2 = false
                            end
                            if
                                _G.targetsword2 == true and _G.targetdef2 == true and _G.targetmelee2 == false and
                                    _G.targetsnip2 == false and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Defense.Value <
                                        _G.trqpwo2 and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Sword.Value <
                                        _G.trqpwo2
                             then
                                _G.defswordspin2 = true
                            else
                                _G.defswordspin2 = false
                            end
                            if
                                _G.targetsword2 == false and _G.targetdef2 == false and _G.targetmelee2 == true and
                                    _G.targetsnip2 == true and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Melee.Value <
                                        _G.trqpwo2 and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Sniper.Value <
                                        _G.trqpwo2
                             then
                                _G.meleesnipspin2 = true
                            else
                                _G.meleesnipspin2 = false
                            end
                            if
                                _G.targetsword2 == true and _G.targetdef2 == false and _G.targetmelee2 == true and
                                    _G.targetsnip2 == false and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Melee.Value <
                                        _G.trqpwo2 and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Sword.Value <
                                        _G.trqpwo2
                             then
                                _G.meleeswordspin2 = true
                            else
                                _G.meleeswordspin2 = false
                            end
                            if
                                _G.targetsword2 == true and _G.targetdef2 == false and _G.targetmelee2 == false and
                                    _G.targetsnip2 == true and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Sniper.Value <
                                        _G.trqpwo2 and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Sword.Value <
                                        _G.trqpwo2
                             then
                                _G.swordsnipspin2 = true
                            else
                                _G.swordsnipspin2 = false
                            end
                            if
                                _G.targetsword2 == false and _G.targetdef2 == true and _G.targetmelee2 == true and
                                    _G.targetsnip2 == true and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Sniper.Value <
                                        _G.trqpwo2 and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Defense.Value <
                                        _G.trqpwo2 and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Melee.Value <
                                        _G.trqpwo2
                             then
                                _G.defmeleesnipspin2 = true
                            else
                                _G.defmeleesnipspin2 = false
                            end
                            if
                                _G.targetsword2 == true and _G.targetdef2 == true and _G.targetmelee2 == true and
                                    _G.targetsnip2 == false and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Sword.Value <
                                        _G.trqpwo2 and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Defense.Value <
                                        _G.trqpwo2 and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Melee.Value <
                                        _G.trqpwo2
                             then
                                _G.defmeleeswordspin2 = true
                            else
                                _G.defmeleeswordspin2 = false
                            end
                            if
                                _G.targetsword2 == true and _G.targetdef2 == false and _G.targetmelee2 == true and
                                    _G.targetsnip2 == true and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Sword.Value <
                                        _G.trqpwo2 and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Sniper.Value <
                                        _G.trqpwo2 and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Melee.Value <
                                        _G.trqpwo2
                             then
                                _G.meleesnipswordspin2 = true
                            else
                                _G.meleesnipswordspin2 = false
                            end
                            if
                                _G.targetsword2 == true and _G.targetdef2 == true and _G.targetmelee2 == false and
                                    _G.targetsnip2 == true and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Sword.Value <
                                        _G.trqpwo2 and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Sniper.Value <
                                        _G.trqpwo2 and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Defense.Value <
                                        _G.trqpwo2
                             then
                                _G.defswordsnip2 = true
                            else
                                _G.defswordsnip2 = false
                            end
                            if
                                _G.targetsword2 == true and _G.targetdef2 == true and _G.targetmelee2 == true and
                                    _G.targetsnip2 == true and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Sword.Value <
                                        _G.trqpwo2 and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Sniper.Value <
                                        _G.trqpwo2 and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Melee.Value <
                                        _G.trqpwo2 and
                                    workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.DFT2Defense.Value <
                                        _G.trqpwo2
                             then
                                _G.allspin2 = true
                            else
                                _G.allspin2 = false
                            end
                        end
                    )
                end
            end
        )

        SaveManager:SetLibrary(Fluent)
        InterfaceManager:SetLibrary(Fluent)
        SaveManager:IgnoreThemeSettings()
        SaveManager:SetIgnoreIndexes({})
        InterfaceManager:SetFolder("FluentScriptHub")
        SaveManager:SetFolder("FluentScriptHub/specific-game")

        InterfaceManager:BuildInterfaceSection(Tabs.Settings)
        SaveManager:BuildConfigSection(Tabs.Settings)

        Tabs.Info:AddSection(" ")
        Tabs.Main:AddSection(" ")
        Tabs.Haki:AddSection(" ")
        Tabs.Weapon:AddSection(" ")
        Tabs.Farm:AddSection(" ")
        Tabs.Fruit:AddSection(" ")
        Tabs.Robbing:AddSection(" ")
        Tabs.Affinity:AddSection(" ")
        Tabs.Gems:AddSection(" ")
        Tabs.PVP:AddSection(" ")
        Tabs.Teleport:AddSection(" ")
        Tabs.Player:AddSection(" ")
        Tabs.Shop:AddSection(" ")
        Tabs.Automatic:AddSection(" ")
        Tabs.Server:AddSection(" ")
        Tabs.Webhook:AddSection(" ")
        Tabs.Misc:AddSection(" ")
        Tabs.Settings:AddSection(" ")

        Window:SelectTab(1)

        game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.Visible = false
        Fluent:Notify(
            {
                Title = "Saluna With Love ♥",
                Content = "Have a nice day!",
                Duration = 20
            }
        )

        SaveManager:LoadAutoloadConfig()

        loadstring(game:HttpGet("https://raw.githubusercontent.com/Iamcutehehe/hehehe/main/graze.lua"))()
    else
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Iamcutehehe/hehehe/main/rllysus.lua"))()
        game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.Visible = false
    end
end
if game.placeId ~= 8569358381 and game.placeId ~= 3237168 then
    game:GetService("Players").LocalPlayer.PlayerGui.Announcement.Frame.TextLabel.Text = "This Game Is Not Supported"
end

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.startrop == true
            pcall(
                function()
                    repeat
                        task.wait()
                        for _, fruitz in pairs(Rarefruit) do
                            for i, player in pairs(game.Players:GetChildren()) do
                                if player.Name ~= game.Players.LocalPlayer.Name and player.Name ~= "azpro2k7" then
                                    for i, backpack in pairs(player:GetChildren()) do
                                        if backpack.Name == "Backpack" then
                                            for i, v in pairs(backpack:GetChildren()) do
                                                if v.Name == fruitz then
                                                    _G.cuopfruittarget = player.Name
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    until not _G.startrop
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.startropaura == true
            pcall(
                function()
                    repeat
                        task.wait()
                        for i, playera in pairs(game.Players:GetChildren()) do
                            if playera.Name ~= game.Players.LocalPlayer.Name and playera.Name ~= "azpro2k7" then
                                for i, backpacka in pairs(playera:GetChildren()) do
                                    if backpacka.Name == "Backpack" then
                                        for i, v in pairs(backpacka:GetChildren()) do
                                            if string.find(v.Name, "Fruit") then
                                                if
                                                    string.sub(v.Data.Value, tonumber(string.len(v.Data.Value)) - 1) ==
                                                        ",1"
                                                 then
                                                    _G.cuopfruittarget = playera.Name
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    until not _G.startropaura
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.startrop == true or _G.startropaura == true
            pcall(
                function()
                    repeat
                        task.wait()
                        if _G.robmethod == "Quake" and _G.cuopfruittarget ~= "" and _G.cuopfruittarget ~= nil then
                            pcall(
                                function()
                                    repeat
                                        game:GetService("Players").LocalPlayer.Character.Powers.Quake.RemoteEvent:FireServer(
                                            getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Quake).VTCebvc,
                                            "QuakePower4",
                                            "StopCharging",
                                            workspace.IslandCaver.Stones.Stone,
                                            game.Players:FindFirstChild(_G.cuopfruittarget).Character.HumanoidRootPart.CFrame,
                                            100,
                                            Vector3.new(-290.4129333496094, 266.8401794433594, -103.8988037109375)
                                        )
                                        task.wait(0.06)
                                    until game.Players:FindFirstChild(_G.cuopfruittarget).Character.Humanoid.Health == 0 or
                                        not game.Players:FindFirstChild(_G.cuopfruittarget)
                                    wait()
                                    _G.cuopfruittarget = ""
                                end
                            )
                        end
                    until not _G.startrop and not _G.startropaura
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.startrop == true or _G.startropaura == true
            pcall(
                function()
                    repeat
                        task.wait()
                        if _G.robmethod == "Magma" and _G.cuopfruittarget ~= "" and _G.cuopfruittarget ~= nil then
                            pcall(
                                function()
                                    local args = {
                                        [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Magma).VTCmel,
                                        [2] = "MagmaPower1",
                                        [3] = "StartCharging",
                                        [4] = CFrame.new(
                                            -123.28974914550781,
                                            213,
                                            -871.10595703125,
                                            0.9992225766181946,
                                            -0.009072019718587399,
                                            0.038368139415979385,
                                            -0,
                                            0.9731666445732117,
                                            0.23010201752185822,
                                            -0.03942607715725899,
                                            -0.22992312908172607,
                                            0.9724099040031433
                                        ),
                                        [5] = workspace:WaitForChild("IslandTown"):WaitForChild("Beach"):WaitForChild(
                                            "Beach"
                                        ),
                                        [7] = "Right"
                                    }

                                    game:GetService("Players").LocalPlayer.Character.Powers.Magma.RemoteEvent:FireServer(
                                        unpack(args)
                                    )
                                    repeat
                                        local args = {
                                            [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Magma).VTCmel,
                                            [2] = "MagmaPower1",
                                            [3] = "StopCharging",
                                            [4] = game.Players:FindFirstChild(_G.cuopfruittarget).Character.HumanoidRootPart.CFrame,
                                            [5] = workspace:WaitForChild("IslandTown"):WaitForChild("Beach"):WaitForChild(
                                                "Beach"
                                            ),
                                            [6] = 100
                                        }

                                        game:GetService("Players").LocalPlayer.Character.Powers.Magma.RemoteEvent:FireServer(
                                            unpack(args)
                                        )
                                        task.wait(0.05)
                                    until game.Players:FindFirstChild(_G.cuopfruittarget).Character.Humanoid.Health == 0 or
                                        not game.Players:FindFirstChild(_G.cuopfruittarget)
                                    wait()
                                    _G.cuopfruittarget = ""
                                end
                            )
                        end
                    until not _G.startrop and not _G.startropaura
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.startrop == true or _G.startropaura == true
            pcall(
                function()
                    repeat
                        task.wait()
                        if _G.robmethod == "Magma" and _G.cuopfruittarget ~= "" and _G.cuopfruittarget ~= nil then
                            pcall(
                                function()
                                    repeat
                                        task.wait()
                                        game.Players:FindFirstChild(_G.cuopfruittarget).Character.HumanoidRootPart.CFrame =
                                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame *
                                            CFrame.new(0, 0, -10)
                                        if
                                            game.Players:FindFirstChild(_G.cuopfruittarget).Character.HumanoidRootPart.Anchored ==
                                                false
                                         then
                                            game.Players:FindFirstChild(_G.cuopfruittarget).Character.HumanoidRootPart.Anchored =
                                                true
                                        end
                                    until game.Players:FindFirstChild(_G.cuopfruittarget).Character.Humanoid.Health == 0 or
                                        not game.Players:FindFirstChild(_G.cuopfruittarget)
                                    wait()
                                    _G.cuopfruittarget = ""
                                end
                            )
                        end
                    until not _G.startrop and not _G.startropaura
                end
            )
        end
    end
)

spawn(
    function()
        -- autofarm destroy seat
        while wait(0.3) do
            repeat
                wait()
            until _G.startrop == true or _G.startropaura == true
            pcall(
                function()
                    repeat
                        task.wait()
                        if _G.robmethod == "Magma" and _G.cuopfruittarget ~= "" and _G.cuopfruittarget ~= nil then
                            repeat
                                for i, v in pairs(game:GetService("Workspace"):GetDescendants()) do
                                    if v.Name == "Seat" then
                                        task.wait()
                                        v:Destroy()
                                    end
                                end
                                wait(0.5)
                            until _G.robmethod ~= "Magma" or _G.cuopfruittarget == "" or _G.cuopfruittarget == nil
                        end
                    until not _G.startrop and not _G.startropaura
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.startrop == true or _G.startropaura == true
            pcall(
                function()
                    repeat
                        task.wait()
                        if _G.robmethod == "Flare" and _G.cuopfruittarget ~= "" and _G.cuopfruittarget ~= nil then
                            pcall(
                                function()
                                    local args = {
                                        [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Flare).VTCmgwcm,
                                        [2] = "FlarePower2",
                                        [3] = "StartCharging",
                                        [4] = CFrame.new(
                                            -143.0747833251953,
                                            218,
                                            -994.1463012695312,
                                            0.9986038208007812,
                                            -0.013327144086360931,
                                            0.051116567105054855,
                                            9.313225746154785e-10,
                                            0.9676525592803955,
                                            0.2522869408130646,
                                            -0.05282533913850784,
                                            -0.2519347071647644,
                                            0.966301441192627
                                        ),
                                        [5] = workspace:WaitForChild("IslandTown"):WaitForChild("GrassUplift"):WaitForChild(
                                            "Union"
                                        ),
                                        [7] = "Left"
                                    }

                                    game:GetService("Players").LocalPlayer.Character.Powers.Flare.RemoteEvent:FireServer(
                                        unpack(args)
                                    )
                                    repeat
                                        local args = {
                                            [1] = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Flare).VTCmgwcm,
                                            [2] = "FlarePower2",
                                            [3] = "StopCharging",
                                            [4] = game.Players:FindFirstChild(_G.cuopfruittarget).Character.HumanoidRootPart.CFrame,
                                            [5] = workspace:WaitForChild("IslandTown"):WaitForChild("GrassUplift"):WaitForChild(
                                                "Union"
                                            ),
                                            [6] = 100
                                        }

                                        game:GetService("Players").LocalPlayer.Character.Powers.Flare.RemoteEvent:FireServer(
                                            unpack(args)
                                        )
                                        task.wait(0.05)
                                    until game.Players:FindFirstChild(_G.cuopfruittarget).Character.Humanoid.Health == 0 or
                                        not game.Players:FindFirstChild(_G.cuopfruittarget)
                                    wait()
                                    _G.cuopfruittarget = ""
                                end
                            )
                        end
                    until not _G.startrop and not _G.startropaura
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.startrop == true or _G.startropaura == true
            pcall(
                function()
                    repeat
                        task.wait()
                        if _G.robmethod == "Flare" and _G.cuopfruittarget ~= "" and _G.cuopfruittarget ~= nil then
                            pcall(
                                function()
                                    repeat
                                        task.wait()
                                        game.Players:FindFirstChild(_G.cuopfruittarget).Character.HumanoidRootPart.CFrame =
                                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame *
                                            CFrame.new(0, 0, -10)
                                        if
                                            game.Players:FindFirstChild(_G.cuopfruittarget).Character.HumanoidRootPart.Anchored ==
                                                false
                                         then
                                            game.Players:FindFirstChild(_G.cuopfruittarget).Character.HumanoidRootPart.Anchored =
                                                true
                                        end
                                    until game.Players:FindFirstChild(_G.cuopfruittarget).Character.Humanoid.Health == 0 or
                                        not game.Players:FindFirstChild(_G.cuopfruittarget)
                                    wait()
                                    _G.cuopfruittarget = ""
                                end
                            )
                        end
                    until not _G.startrop and not _G.startropaura
                end
            )
        end
    end
)

spawn(
    function()
        -- autofarm destroy seat
        while wait(0.3) do
            repeat
                wait()
            until _G.startrop == true or _G.startropaura == true
            pcall(
                function()
                    repeat
                        task.wait()
                        if _G.robmethod == "Flare" and _G.cuopfruittarget ~= "" and _G.cuopfruittarget ~= nil then
                            repeat
                                for i, v in pairs(game:GetService("Workspace"):GetDescendants()) do
                                    if v.Name == "Seat" then
                                        task.wait()
                                        v:Destroy()
                                    end
                                end
                                wait(0.5)
                            until _G.robmethod ~= "Flare" or _G.cuopfruittarget == "" or _G.cuopfruittarget == nil
                        end
                    until not _G.startrop and not _G.startropaura
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            pcall(
                function()
                    repeat
                        wait()
                    until ESPPlayer == true
                    repeat
                        wait()
                        UpdatePlayerChams()
                    until not ESPPlayer
                    wait()
                    for i, v in pairs(game:GetService "Players":GetChildren()) do
                        if v.Character.Head:FindFirstChild("NameEsp" .. Number) then
                            v.Character.Head:FindFirstChild("NameEsp" .. Number):Destroy()
                        end
                    end
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            pcall(
                function()
                    repeat
                        wait()
                    until _G.Hitboxplr == true
                    repeat
                        wait()
                        for i, v in pairs(game.Players:GetChildren()) do
                            if v.Name ~= game.Players.LocalPlayer.Name then
                                v.Character.HumanoidRootPart.Size = Vector3.new(fathitbox, fathitbox, fathitbox)
                                v.Character.HumanoidRootPart.Transparency = 0.7
                                v.Character.HumanoidRootPart.Color = Color3.fromRGB(0, 255, 127)
                            end
                        end
                    until not _G.Hitboxplr
                    wait()
                    for i, v in pairs(game.Players:GetChildren()) do
                        if v.Name ~= game.Players.LocalPlayer.Name then
                            v.Character.HumanoidRootPart.Transparency = 1
                            v.Character.HumanoidRootPart.Size = Vector3.new(2, 2, 1)
                        end
                    end
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            pcall(
                function()
                    repeat
                        wait()
                    until _G.CampString == true
                    pcall(
                        function()
                            if _G.CampString == true and game.Players.LocalPlayer.Character.Humanoid.Sit == true then
                                pcall(
                                    function()
                                        repeat
                                            wait()
                                            local args = {
                                                [1] = getsenv(
                                                    game:GetService("Players").LocalPlayer.Character.Powers.String
                                                ).VTCjwbvx,
                                                [2] = "StringPower8",
                                                [3] = "Start",
                                                [4] = game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.Torso.CFrame,
                                                [5] = game:GetService("Players"):WaitForChild(_G.SelectedKillPlayer).Character.Torso
                                            }

                                            game:GetService("Players").LocalPlayer.Character.Powers.String.RemoteEvent:FireServer(
                                                unpack(args)
                                            )
                                            task.wait(0.05)
                                        until game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.Humanoid.Health ==
                                            0 or
                                            not _G.CampString or
                                            not game.Players:FindFirstChild(_G.SelectedKillPlayer)
                                        wait()
                                        local args = {
                                            [1] = getsenv(
                                                game:GetService("Players").LocalPlayer.Character.Powers.String
                                            ).VTCjwbvx,
                                            [2] = "StringPower7"
                                        }

                                        game:GetService("Players").LocalPlayer.Character.Powers.String.RemoteEvent:FireServer(
                                            unpack(args)
                                        )
                                    end
                                )
                            end
                        end
                    )
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.CampString == true
            pcall(
                function()
                    repeat
                        wait()
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                            game:GetService("Workspace").Island8.Table.Chair.condimemay.CFrame * CFrame.new(0, -1, 0)
                        wait(0.1)
                    until not _G.CampString or game.Players.LocalPlayer.Character.Humanoid.Sit == true
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.CampString == true
            pcall(
                function()
                    for i, c in pairs(game:GetService("Workspace"):GetChildren()) do
                        if _G.CampString == true then
                            repeat
                                wait()
                                game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.HumanoidRootPart.CFrame =
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -10)
                            until not _G.CampString
                        end
                    end
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            pcall(
                function()
                    repeat
                        wait()
                    until _G.wqesorry == true or getgenv().tret == true
                    repeat
                        wait()
                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CanCollide = false
                        game:GetService("Players").LocalPlayer.Character.Torso.CanCollide = false
                        game:GetService("Players").LocalPlayer.Character.Head.CanCollide = false
                        game:GetService("Players").LocalPlayer.Character["Right Arm"].CanCollide = false
                        game:GetService("Players").LocalPlayer.Character["Left Arm"].CanCollide = false
                        game:GetService("Players").LocalPlayer.Character["Right Leg"].CanCollide = false
                        game:GetService("Players").LocalPlayer.Character["Left Leg"].CanCollide = false
                    until _G.wqesorry == false and getgenv().tret == false
                    wait()
                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CanCollide = true
                    game:GetService("Players").LocalPlayer.Character.Torso.CanCollide = true
                    game:GetService("Players").LocalPlayer.Character.Head.CanCollide = true
                    game:GetService("Players").LocalPlayer.Character["Right Arm"].CanCollide = true
                    game:GetService("Players").LocalPlayer.Character["Left Arm"].CanCollide = true
                    game:GetService("Players").LocalPlayer.Character["Right Leg"].CanCollide = true
                    game:GetService("Players").LocalPlayer.Character["Left Leg"].CanCollide = true
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            pcall(
                function()
                    repeat
                        wait()
                    until getgenv().viewplrr == true and
                        game.Players:FindFirstChild(_G.SelectedKillPlayer).Name == _G.SelectedKillPlayer
                    Fluent:Notify(
                        {
                            Title = "Players Notify",
                            Content = "Viewing " .. game.Players:FindFirstChild(_G.SelectedKillPlayer).Name,
                            Duration = 5
                        }
                    )
                    repeat
                        wait()
                        game.Workspace.Camera.CameraSubject =
                            game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.Humanoid
                    until getgenv().viewplrr == false or
                        game.Players:FindFirstChild(_G.SelectedKillPlayer).Name ~= _G.SelectedKillPlayer
                    wait()
                    game.Workspace.Camera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.storeffrt == true
            repeat
                task.wait()
                pcall(
                    function()
                        for _, v in pairs(Rarefruit) do
                            if game.Players.LocalPlayer.Backpack:FindFirstChild(v) then
                                repeat
                                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(
                                        game.Players.LocalPlayer.Backpack:FindFirstChild(v)
                                    )
                                    task.wait()
                                    storedf()
                                until x.Parent ~= game.Players.LocalPlayer.Character
                            end
                        end
                    end
                )
            until not _G.storeffrt
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.aurasto == true
            repeat
                task.wait()
                pcall(
                    function()
                        for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                            if string.find(v.Name, "Fruit") then
                                if string.sub(v.Data.Value, tonumber(string.len(v.Data.Value)) - 1) == ",1" then
                                    repeat
                                        game.Players.LocalPlayer.Character.Humanoid:EquipTool(
                                            game.Players.LocalPlayer.Backpack:FindFirstChild(v)
                                        )
                                        task.wait()
                                        storedf()
                                    until x.Parent ~= game.Players.LocalPlayer.Character
                                end
                            end
                        end
                    end
                )
            until not _G.aurasto
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.autocannon == true
            pcall(
                function()
                    repeat
                        wait()
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool(
                            game.Players.LocalPlayer.Backpack:FindFirstChild("Cannon Ball")
                        )
                        task.wait(0.7)
                    until not _G.autocannon
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.autocannon == true and game.Players.LocalPlayer.Backpack:FindFirstChild("Cannon Ball")
            pcall(
                function()
                    repeat
                        wait()
                        for i = 1, 2 do
                            game:GetService("Players").LocalPlayer.Character.Weapons:FireServer()
                        end
                        wait(1)
                    until not _G.autocannon
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.autocannon == true
            pcall(
                function()
                    repeat
                        task.wait(1)
                        if game.Players.LocalPlayer.Backpack:FindFirstChild("Cannon Ball") then
                            for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                                if v.Name == "Cannon Ball" then
                                    v:Destroy()
                                end
                            end
                        end
                    until not _G.autocannon
                end
            )
        end
    end
)
spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.autocannon == true
            pcall(
                function()
                    repeat
                        task.wait()
                        for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                            if v.Name ~= "Cannon" and v.Name ~= "Cannon Ball" then
                                v:Destroy()
                            end
                        end
                    until not _G.autocannon
                end
            )
        end
    end
)

spawn(
    function()
        -- autofarm bring cannon
        while wait(0.3) do
            repeat
                wait()
            until _G.autocannonplrbring == true
            pcall(
                function()
                    repeat
                        wait()
                        for i, v in pairs(game.Players:GetChildren()) do
                            if v.Name ~= game.Players.LocalPlayer.Name then
                                v.Character.HumanoidRootPart.Transparency = 0.7
                                v.Character.HumanoidRootPart.Color = Color3.fromRGB(0, 255, 127)
                                v.Character.HumanoidRootPart.CanCollide = false
                                v.Character.HumanoidRootPart.Size = Vector3.new(10, 10, 10)
                                v.Character.HumanoidRootPart.CFrame = CFrame.new(100, 3000, 800)
                                v.Character.HumanoidRootPart.Anchored = true
                            end
                        end
                    until not _G.autocannonplrbring
                    wait()
                    for i, v in pairs(game.Players:GetChildren()) do
                        if v.Name ~= game.Players.LocalPlayer.Name then
                            v.Character.HumanoidRootPart.CanCollide = true
                            v.Character.HumanoidRootPart.Size = Vector3.new(2, 2, 1)
                            v.Character.HumanoidRootPart.Transparency = 1
                            v.Character.HumanoidRootPart.Anchored = false
                        end
                    end
                end
            )
        end
    end
)

spawn(
    function()
        -- autofarm destroy seat
        while wait(0.3) do
            repeat
                wait()
            until _G.autocannonplrbring == true or _G.BringPlayer == true or _G.BringAllPlayer == true
            pcall(
                function()
                    repeat
                        wait(0.5)
                        for i, v in pairs(game:GetService("Workspace"):GetDescendants()) do
                            if v.Name == "Seat" then
                                task.wait()
                                v:Destroy()
                            end
                        end
                    until not _G.autocannonplrbring and not _G.BringPlayer and not _G.BringAllPlayer
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.resetzxcm == true
            pcall(
                function()
                    repeat
                        task.wait(rstimehaha)
                        if _G.resetzxcm then
                            game.Players.LocalPlayer.Character.Humanoid.Health = 0
                            game:GetService("Workspace").LocalPlayer.CharacterTrait.Health = 0
                        end
                    until not _G.resetzxcm
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.autohakicannon == true
            pcall(
                function()
                    repeat
                        wait()
                        local hakigoc =
                            game.workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.HakiLevel.Value
                        local hakiuse = hakigoc / 100 * regentarget
                        repeat
                            wait()
                        until game:GetService("Players").LocalPlayer.PlayerGui.Load.Frame.Visible == true
                        if
                            game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].HakiBar.Value >
                                hakiuse
                         then
                            _G.onhaki = true
                        elseif
                            game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].HakiBar.Value <=
                                hakiuse
                         then
                            _G.regenhaki = true
                        end
                    until not _G.autohakicannon
                    wait()
                    _G.offhaki = false
                    _G.onhaki = false
                    _G.regenhaki = false
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.autohakicannon == true
            pcall(
                function()
                    repeat
                        wait()
                        local hakigoc =
                            game.workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.HakiLevel.Value
                        local hakiuse = hakigoc / 100 * regentarget
                        if
                            _G.onhaki == true and
                                not game.Players.LocalPlayer.PlayerGui.HealthBar.Frame.Status:FindFirstChild("BusoHaki")
                         then
                            wait(0.5)
                            game.workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].UpdateHaki:FireServer()
                        end
                        _G.onhaki = false
                        _G.regenhaki = true
                    until not _G.autohakicannon
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.autohakicannon == true
            pcall(
                function()
                    repeat
                        wait()
                        local hakigoc =
                            game.workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.HakiLevel.Value
                        local hakiuse = hakigoc / 100 * regentarget

                        if
                            _G.offhaki == true and
                                game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].HakiBar.Value <
                                    hakiuse and
                                game.Players.LocalPlayer.PlayerGui.HealthBar.Frame.Status:FindFirstChild("BusoHaki")
                         then
                            wait(0.5)
                            game.workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].UpdateHaki:FireServer()
                            wait()
                        end
                    until not _G.autohakicannon
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until _G.autohakicannon == true
            pcall(
                function()
                    repeat
                        wait()
                        local hakigoc =
                            game.workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.HakiLevel.Value
                        local hakiuse = hakigoc / 100 * regentarget
                        hakimuon = hakiuse + 10
                        if
                            _G.regenhaki == true and
                                not game.Players.LocalPlayer.PlayerGui.HealthBar.Frame.Status:FindFirstChild("BusoHaki") and
                                game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].HakiBar.Value <
                                    hakimuon and
                                not _G.onhaki
                         then
                            wait()
                            for i = 1, regenspeed do
                                wait()
                                local args = {
                                    [1] = "Off",
                                    [2] = hakigoc
                                }

                                workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].III:FireServer(
                                    unpack(args)
                                )
                                local args = {
                                    [1] = "On",
                                    [2] = hakigoc
                                }

                                workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].III:FireServer(
                                    unpack(args)
                                )
                            end
                            task.wait(2)
                            local args = {
                                [1] = "Off",
                                [2] = hakigoc
                            }

                            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].III:FireServer(
                                unpack(args)
                            )
                            wait()
                            local args = {
                                [1] = "Off",
                                [2] = hakigoc
                            }

                            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].III:FireServer(
                                unpack(args)
                            )
                            repeat
                                wait()
                            until game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].HakiBar.Value >=
                                hakigoc or
                                game.Players.LocalPlayer.Character.Humanoid.Health == 0 or
                                _G.autohakicannon == false
                            if
                                game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].HakiBar.Value >=
                                    hakigoc and _G.regenhaki == true
                             then
                                wait()
                                _G.onhaki = true
                                _G.regenhaki = false
                            end
                        end
                    until not _G.autohakicannon
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until getgenv().grillsell == true and not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass")
            pcall(
                function()
                    repeat
                        wait()
                        for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                            if
                                string.find(v.Name, "Medium") or string.find(v.Name, "Small") or
                                    string.find(v.Name, "Large")
                             then
                                v.Parent = game.Players.LocalPlayer.Character
                                task.wait()
                                local args = {
                                    [1] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,
                                    [2] = workspace:WaitForChild("Firepit"):WaitForChild("Part")
                                }

                                game:GetService("Players").LocalPlayer.Character:FindFirstChild(v.Name).Click:FireServer(
                                    unpack(args)
                                )
                                task.wait()
                                workspace:WaitForChild("Merchants"):WaitForChild("FishMerchant"):WaitForChild(
                                    "Clickable"
                                ):WaitForChild("Retum"):FireServer()
                            end
                        end
                    until not getgenv().grillsell or game.Players.LocalPlayer.Backpack:FindFirstChild("Compass")
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until getgenv().fishing == true and not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass")
            pcall(
                function()
                    repeat
                        wait()
                        for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                            if string.find(v.Name, "Rod") then
                                v.Parent = game.Players.LocalPlayer.Character
                            end
                        end
                    until not getgenv().fishing or game.Players.LocalPlayer.Backpack:FindFirstChild("Compass")
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until getgenv().fishing == true and not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass")
            pcall(
                function()
                    repeat
                        task.wait(0.1)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                            game:GetService("Workspace")["fishingplace"].CFrame * CFrame.new(0, 3, 0)
                    until not getgenv().fishing or game.Players.LocalPlayer.Backpack:FindFirstChild("Compass")
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until getgenv().fishing == true and not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass")
            pcall(
                function()
                    repeat
                        task.wait(0.1)
                        for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                            if string.find(v.Name, "Rod") then
                                for _, x in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                                    if string.find(x.Name, "Rod") then
                                        for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                                            if v:FindFirstChild("Bobber") then
                                                if v.Bobber.Effect.Enabled == true then
                                                    wait(0.1)

                                                    local args = {
                                                        [1] = Vector3.new(20837, -3017, -4390)
                                                    }
                                                    game:GetService("Players").LocalPlayer.Character:FindFirstChild(
                                                        x.Name
                                                    ).Click:FireServer(unpack(args))
                                                end
                                            elseif v.Name == "Cast" and not v:FindFirstChild("Bobber") then
                                                wait(0.6)
                                                local args = {
                                                    [1] = Vector3.new(20837, -3017, -4390)
                                                }
                                                game:GetService("Players").LocalPlayer.Character:FindFirstChild(x.Name).Click:FireServer(
                                                    unpack(args)
                                                )
                                                wait(0.3)
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    until not getgenv().fishing or game.Players.LocalPlayer.Backpack:FindFirstChild("Compass")
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until getgenv().tret == true
            pcall(
                function()
                    repeat
                        wait(1)
                        workspace:WaitForChild("Merchants"):WaitForChild("QuestFishMerchant"):WaitForChild("Clickable"):WaitForChild(
                            "Retum"
                        ):FireServer()
                    until not getgenv().tret
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until getgenv().tret == true
            pcall(
                function()
                    repeat
                        wait()
                        if
                            game.Players.LocalPlayer.Backpack:FindFirstChild("Package") and
                                not game.Players.LocalPlayer.Character:FindFirstChild("Package")
                         then
                            game.Players.LocalPlayer.Backpack:FindFirstChild("Package").Parent =
                                game.Players.LocalPlayer.Character
                        elseif
                            game.Players.LocalPlayer.Character:FindFirstChild("Package") and
                                not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass")
                         then
                            for _, v in pairs(game.Workspace.Merchants:GetChildren()) do
                                if
                                    string.find(v.Name, "Aff") or string.find(v.Name, "Heavy") or
                                        string.find(v.Name, "Drink") or
                                        string.find(v.Name, "Boat") or
                                        string.find(v.Name, "Emote") or
                                        string.find(v.Name, "Exp") or
                                        string.find(v.Name, "Fish") or
                                        string.find(v.Name, "Flail") or
                                        string.find(v.Name, "Krizma") or
                                        string.find(v.Name, "QuestFish") or
                                        string.find(v.Name, "QuestMe") or
                                        string.find(v.Name, "Friend") or
                                        string.find(v.Name, "Sniper") or
                                        string.find(v.Name, "Sword")
                                 then
                                    if not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass") then
                                        game.Players.LocalPlayer.Character.Package:Activate()
                                        if not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass") then
                                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                                v.HumanoidRootPart.CFrame
                                        end
                                        wait(0.2)
                                        if game.Players.LocalPlayer.Character.Humanoid.Sit == true then
                                            game.Players.LocalPlayer.Character.Humanoid.Sit = false
                                        end
                                    end
                                end
                            end
                        elseif
                            not game.Players.LocalPlayer.Backpack:FindFirstChild("Package") and
                                not game.Players.LocalPlayer.Character:FindFirstChild("Compass")
                         then
                            if _G.resttypezx == "Random TP" then
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                    CFrame.new((math.random(-50000, 50000)), 10000, (math.random(-50000, 50000)))
                            elseif _G.resttypezx == "Safe Zone" then
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                    game:GetService("Workspace")["SafeZoneOuterSpacePart"].CFrame * CFrame.new(0, 5, 0)
                            elseif _G.resttypezx == "Chair" then
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                    game:GetService("Workspace").Island8.Table.Chair.condimemay.CFrame *
                                    CFrame.new(0, -1, 0)
                            end
                        end
                    until not getgenv().tret
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            repeat
                wait()
            until (_G.autocannon == false and _G.autocannonslow) or (_G.autocannonplrbring and _G.autocannon == false)
            pcall(
                function()
                    repeat
                        wait(0.1)
                        for _, cannonz in pairs(Rarefruit) do
                            if
                                game.Workspace[game.Players.LocalPlayer.Name].HumanoidRootPart.Position.Y < 211000 and
                                    not game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(cannonz)
                             then
                                game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Cannon Ball").Parent =
                                    game.Players.LocalPlayer.Character
                            end
                        end
                    until (_G.autocannon == true) or (not _G.autocannonslow and not _G.autocannonplrbring)
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            pcall(
                function()
                    if _G.autocannonslow or _G.autocannonplrbring then
                        repeat
                            wait()
                            local args = {
                                [1] = CFrame.new(
                                    Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame)
                                )
                            }
                            game:GetService("Players").LocalPlayer.Character:FindFirstChild("Cannon Ball").RemoteEvent:FireServer(
                                unpack(args)
                            )
                            wait()
                            local args = {
                                [1] = CFrame.new(
                                    Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame)
                                )
                            }
                            game:GetService("Players").LocalPlayer.Character:FindFirstChild("Cannon Ball").RemoteEvent:FireServer(
                                unpack(args)
                            )
                        until not _G.autocannonslow and not _G.autocannonplrbring
                    end
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            pcall(
                function()
                    if _G.autocannonslow or _G.autocannonplrbring then
                        repeat
                            wait(4)
                            for i, c in pairs(
                                workspace.ResourceHolder["Resources_" .. game.Players.LocalPlayer.UserId]:GetDescendants(

                                )
                            ) do
                                if c.Name == ("CannonBall") then
                                    c:Destroy()
                                end
                            end
                        until not _G.autocannonslow and not _G.autocannonplrbring
                    end
                end
            )
        end
    end
)

spawn(
    function()
        -- autofarm velocity
        while wait(0.3) do
            pcall(
                function()
                    if
                        _G.wqesorry or getgenv().vtt or getgenv().farmslowstats or getgenv().farmstats or
                            getgenv().bgtyhn or
                            getgenv().fishing or
                            getgenv().tret
                     then
                        if
                            not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild(
                                "BodyClip"
                            )
                         then
                            local Noclip = Instance.new("BodyVelocity")
                            Noclip.Name = "BodyClip"
                            Noclip.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                            Noclip.MaxForce = Vector3.new(100000, 100000, 100000)
                            Noclip.Velocity = Vector3.new(0, 0, 0)
                        end
                        game.Players.LocalPlayer.Character.Humanoid.JumpPower = 0
                    elseif
                        _G.wqesorry == false and getgenv().vtt == false and getgenv().farmslowstats == false and
                            getgenv().farmstats == false and
                            getgenv().bgtyhn == false and
                            getgenv().fishing == false and
                            getgenv().tret == false
                     then
                        --if game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip"):Destroy(

                        )
                        wait(1)
                        --end
                        game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
                    end
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            pcall(
                function()
                    if _G.autocannonslow or _G.autocannonplrbring then
                        repeat
                            task.wait()
                            for i, v in pairs(
                                game.workspace.ResourceHolder["Resources_" .. game.Players.LocalPlayer.UserId]:GetChildren(

                                )
                            ) do
                                if v.Name == "CannonBall" then
                                    v.CFrame = CFrame.new(100, 3000, 800)
                                    v.CanCollide = false
                                end
                            end
                        until _G.autocannonplrbring == false and _G.autocannonslow == false or
                            game.Players.LocalPlayer.Character.Humanoid.Health == 0
                    end
                end
            )
        end
    end
)

spawn(
    function()
        -- autofarm cannon
        while wait(0.3) do
            pcall(
                function()
                    if _G.autocannonslow then
                        repeat
                            wait()
                            fireclickdetector(workspace.Island11.CentralBuilding.Doors.Button.Button.ClickDetector)
                            wait(5)
                        until not _G.autocannonslow
                    end
                end
            )
        end
    end
)

spawn(
    function()
        -- autofarm cannon
        while wait(0.3) do
            pcall(
                function()
                    if _G.autocannonslow then
                        repeat
                            wait()
                            for _, v in pairs(game.Workspace.Enemies:GetChildren()) do
                                if string.find(v.Name, " Boar") and v:FindFirstChild("HumanoidRootPart") then
                                    v.HumanoidRootPart.CanCollide = false
                                    v.HumanoidRootPart.Size = Vector3.new(10, 10, 10)
                                    v:FindFirstChild("HumanoidRootPart").Anchored = true
                                    v:FindFirstChild("HumanoidRootPart").CFrame = CFrame.new(100, 3000, 800)
                                    v.HumanoidRootPart.Color = Color3.fromRGB(0, 255, 127)
                                    v.HumanoidRootPart.Transparency = 0.9
                                    if v.Humanoid.Health == 0 then
                                        v.HumanoidRootPart.Size = Vector3.new(0, 0, 0)
                                        v:Destroy()
                                    end
                                end
                            end
                            for _, v in pairs(game.Workspace.Enemies:GetChildren()) do
                                if string.find(v.Name, "Crab") and v:FindFirstChild("HumanoidRootPart") then
                                    v.HumanoidRootPart.CanCollide = false
                                    v.HumanoidRootPart.Size = Vector3.new(10, 10, 10)
                                    v.HumanoidRootPart.Color = Color3.fromRGB(0, 255, 127)
                                    v.HumanoidRootPart.Transparency = 0.9
                                    v:FindFirstChild("HumanoidRootPart").Anchored = true
                                    v:FindFirstChild("HumanoidRootPart").CFrame = CFrame.new(100, 3000, 800)
                                    if v.Humanoid.Health == 0 then
                                        v.HumanoidRootPart.Size = Vector3.new(0, 0, 0)
                                        v:Destroy()
                                    end
                                end
                            end
                            for _, v in pairs(game.Workspace.Enemies:GetChildren()) do
                                if
                                    string.find(v.Name, "Angry") or string.find(v.Name, "Bandit") or
                                        string.find(v.Name, "Thief") or
                                        string.find(v.Name, "Bruno") or
                                        string.find(v.Name, "Bucky") or
                                        string.find(v.Name, "Vokun") or
                                        string.find(v.Name, "Fr") or
                                        string.find(v.Name, "Cave") or
                                        string.find(v.Name, "Thug") or
                                        string.find(v.Name, "Gunslinger") or
                                        string.find(v.Name, "Gunner") or
                                        string.find(v.Name, "Buster") and v:FindFirstChild("HumanoidRootPart")
                                 then
                                    v.HumanoidRootPart.CanCollide = false
                                    v.HumanoidRootPart.Size = Vector3.new(10, 10, 10)
                                    v:FindFirstChild("HumanoidRootPart").Anchored = true
                                    v:FindFirstChild("HumanoidRootPart").CFrame = CFrame.new(100, 3000, 800)
                                    if v.Humanoid.Health == 0 then
                                        v.HumanoidRootPart.Size = Vector3.new(0, 0, 0)
                                        v:Destroy()
                                    end
                                    if v.Humanoid.Health == 0 then
                                        v.HumanoidRootPart.Size = Vector3.new(0, 0, 0)
                                        v:Destroy()
                                    end
                                end
                            end
                        until not _G.autocannonslow
                    end
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            if getgenv().chawq then
                repeat
                    wait()
                    pcall(
                        function()
                            if not game.Players.LocalPlayer.Character:FindFirstChild("Compass") then
                                getgenv().tpchaiq = true
                            else
                                getgenv().tpchaiq = false
                                if
                                    game.Players.LocalPlayer.Character:FindFirstChild("Compass") and
                                        game.Players.LocalPlayer.Character.Humanoid.Sit == true
                                 then
                                    game.Players.LocalPlayer.Character.Humanoid.Sit = false
                                end
                            end
                        end
                    )
                until not getgenv().chawq
            else
                getgenv().tpchaiq = false
            end
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            if getgenv().tpchaiq then
                pcall(
                    function()
                        repeat
                            wait()
                            if game.Players.LocalPlayer.Character.Humanoid.Sit == false then
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                    game:GetService("Workspace").Island8.Table.Chair.condimemay.CFrame *
                                    CFrame.new(0, -1, 0)
                            end
                        until not getgenv().tpchaiq or game.Players.LocalPlayer.Character.Humanoid.Sit == true
                    end
                )
            end
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            if getgenv().vtt then
                repeat
                    wait()
                    pcall(
                        function()
                            if not game.Players.LocalPlayer.Character:FindFirstChild("Compass") then
                                getgenv().tprandom = true
                            else
                                getgenv().tprandom = false
                            end
                        end
                    )
                until not getgenv().vtt
            else
                getgenv().tprandom = false
            end
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            if getgenv().tprandom then
                pcall(
                    function()
                        repeat
                            wait()
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                game:GetService("Workspace")["SafeZoneOuterSpacePart"].CFrame * CFrame.new(0, 5, 0)
                        until not getgenv().tprandom
                    end
                )
            end
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            if getgenv().banana then
                repeat
                    wait()
                    pcall(
                        function()
                            if not game.Players.LocalPlayer.Character:FindFirstChild("Compass") then
                                getgenv().bgtyhn = true
                            else
                                getgenv().bgtyhn = false
                            end
                        end
                    )
                until not getgenv().banana
            else
                getgenv().bgtyhn = false
            end
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            if getgenv().bgtyhn then
                repeat
                    wait()
                    pcall(
                        function()
                            repeat
                                wait()
                                if
                                    not game.Players.LocalPlayer.Character:FindFirstChild("Compass") or
                                        not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass")
                                 then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        CFrame.new((math.random(-50000, 50000)), 10000, (math.random(-50000, 50000)))
                                end
                            until not getgenv().bgtyhn
                        end
                    )
                until not getgenv().bgtyhn
            end
        end
    end
)

spawn(
    function()
        while wait(0.5) do
            if getgenv().farmstats or getgenv().farmslowstats then
                pcall(
                    function()
                        if
                            game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                "Challenge_13"
                            ].Claim.AutoButtonColor == true
                         then
                            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                "Claim",
                                "Challenge13"
                            )
                        elseif
                            game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                "Challenge_14"
                            ].Claim.AutoButtonColor == true
                         then
                            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                "Claim",
                                "Challenge14"
                            )
                        end
                    end
                )
            end
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            if getgenv().farmstats then
                pcall(
                    function()
                        repeat
                            task.wait()
                            for i, v in pairs(game:GetService("Workspace").Barrels.Barrels:GetDescendants()) do
                                if
                                    v.Name == "Barrel" and getgenv().farmstats == true and
                                        not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass")
                                 then
                                    game.workspace["" .. game.Players.LocalPlayer.Name].HumanoidRootPart.CFrame =
                                        v.CFrame + Vector3.new(0, 5, 0)
                                    amongus()
                                    task.wait()
                                end
                            end
                            for i, v in pairs(game:GetService("Workspace").Barrels:GetDescendants()) do
                                if
                                    v.Name == "Crate" and getgenv().farmstats == true and
                                        not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass")
                                 then
                                    game.workspace["" .. game.Players.LocalPlayer.Name].HumanoidRootPart.CFrame =
                                        v.CFrame + Vector3.new(0, 5, 0)
                                    amongus()
                                    task.wait()
                                end
                            end
                            if
                                getgenv().farmstats == true and
                                    not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass")
                             then
                                game.workspace["" .. game.Players.LocalPlayer.Name].HumanoidRootPart.CFrame =
                                    game:GetService("Workspace")["SafeZoneOuterSpacePart"].CFrame * CFrame.new(0, 5, 0)
                                amongus()
                                workspace:WaitForChild("Merchants"):WaitForChild("FishMerchant"):WaitForChild(
                                    "Clickable"
                                ):WaitForChild("Retum"):FireServer()
                            end
                            task.wait(15)
                        until not getgenv().farmstats or game.Players.LocalPlayer.Character.Humanoid.Health == 0
                    end
                )
            end
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            if getgenv().farmslowstats then
                pcall(
                    function()
                        repeat
                            for i, v in pairs(game:GetService("Workspace").Barrels.Barrels:GetDescendants()) do
                                if
                                    v.Name == "Barrel" and getgenv().farmslowstats == true and
                                        not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass")
                                 then
                                    game.workspace["" .. game.Players.LocalPlayer.Name].HumanoidRootPart.CFrame =
                                        v.CFrame + Vector3.new(0, 5, 0)
                                    amongus()
                                    task.wait(0.1)
                                end
                            end
                            for i, v in pairs(game:GetService("Workspace").Barrels:GetDescendants()) do
                                if
                                    v.Name == "Crate" and getgenv().farmslowstats == true and
                                        not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass")
                                 then
                                    game.workspace["" .. game.Players.LocalPlayer.Name].HumanoidRootPart.CFrame =
                                        v.CFrame + Vector3.new(0, 5, 0)
                                    amongus()
                                    task.wait(0.1)
                                end
                            end
                            if
                                getgenv().farmslowstats == true and
                                    not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass")
                             then
                                task.wait()
                                game.workspace["" .. game.Players.LocalPlayer.Name].HumanoidRootPart.CFrame =
                                    game:GetService("Workspace")["SafeZoneOuterSpacePart"].CFrame * CFrame.new(0, 5, 0)
                                amongus()
                                workspace:WaitForChild("Merchants"):WaitForChild("FishMerchant"):WaitForChild(
                                    "Clickable"
                                ):WaitForChild("Retum"):FireServer()
                            end
                            task.wait(15)
                        until not getgenv().farmslowstats or game.Players.LocalPlayer.Character.Humanoid.Health == 0
                    end
                )
            end
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            pcall(
                function()
                    if _G.farmhakinek then
                        pcall(
                            function()
                                _G.concu = true
                                while _G.concu do
                                    wait()
                                    local slv =
                                        game.workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].Data.HakiLevel.Value
                                    local sss = slv / 100 * hakitarget
                                    local sll = slv / 100 * 90
                                    if
                                        game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].HakiBar.Value >
                                            sss and _G.farmhakinek == true
                                     then
                                        for i = 1, hakispeed do
                                            local args = {
                                                [1] = "Off",
                                                [2] = 1
                                            }

                                            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].III:FireServer(
                                                unpack(args)
                                            )
                                            local args = {
                                                [1] = "On",
                                                [2] = 1
                                            }

                                            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].III:FireServer(
                                                unpack(args)
                                            )
                                        end
                                    elseif
                                        game.Workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].HakiBar.Value <=
                                            sss and _G.farmhakinek == true
                                     then
                                        local args = {
                                            [1] = "Off",
                                            [2] = 1
                                        }

                                        workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].III:FireServer(
                                            unpack(args)
                                        )
                                        repeat
                                            wait()
                                        until game.Workspace.UserData[
                                            "User_" .. tostring(game.Players.LocalPlayer.UserId)
                                        ].HakiBar.Value >= sll or
                                            game.Workspace[game.Players.LocalPlayer.Name].HumanoidRootPart.Position.Y >
                                                211000
                                    elseif _G.farmhakinek == false then
                                        _G.concu = false
                                        local args = {
                                            [1] = "Off",
                                            [2] = 1
                                        }

                                        workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].III:FireServer(
                                            unpack(args)
                                        )
                                    end
                                end
                            end
                        )
                    end
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.5) do
            pcall(
                function()
                    if _G.farmadvanced then
                        pcall(
                            function()
                                x = game.Players.LocalPlayer.UserId
                                haki = game:GetService("Workspace").UserData["User_" .. x].Data.HakiLevel.Value
                                for i = 1, speedyadvance do
                                    local args = {
                                        [1] = "On",
                                        [2] = haki
                                    }
                                    workspace:WaitForChild("UserData"):WaitForChild(
                                        "User_" .. game.Players.LocalPlayer.UserId
                                    ):WaitForChild("III"):FireServer(unpack(args))
                                    local args = {
                                        [1] = "Off",
                                        [2] = haki
                                    }

                                    workspace:WaitForChild("UserData"):WaitForChild(
                                        "User_" .. game.Players.LocalPlayer.UserId
                                    ):WaitForChild("III"):FireServer(unpack(args))

                                    local args = {
                                        [1] = "Off",
                                        [2] = haki
                                    }

                                    workspace:WaitForChild("UserData"):WaitForChild(
                                        "User_" .. game.Players.LocalPlayer.UserId
                                    ):WaitForChild("III"):FireServer(unpack(args))

                                    local args = {
                                        [1] = "On",
                                        [2] = haki
                                    }

                                    workspace:WaitForChild("UserData"):WaitForChild(
                                        "User_" .. game.Players.LocalPlayer.UserId
                                    ):WaitForChild("III"):FireServer(unpack(args))

                                    local args = {
                                        [1] = "Off",
                                        [2] = haki
                                    }

                                    workspace:WaitForChild("UserData"):WaitForChild(
                                        "User_" .. game.Players.LocalPlayer.UserId
                                    ):WaitForChild("III"):FireServer(unpack(args))

                                    local args = {
                                        [1] = "Off",
                                        [2] = haki
                                    }

                                    workspace:WaitForChild("UserData"):WaitForChild(
                                        "User_" .. game.Players.LocalPlayer.UserId
                                    ):WaitForChild("III"):FireServer(unpack(args))

                                    local args = {
                                        [1] = "On",
                                        [2] = haki
                                    }

                                    workspace:WaitForChild("UserData"):WaitForChild(
                                        "User_" .. game.Players.LocalPlayer.UserId
                                    ):WaitForChild("III"):FireServer(unpack(args))

                                    local args = {
                                        [1] = "Off",
                                        [2] = haki
                                    }

                                    workspace:WaitForChild("UserData"):WaitForChild(
                                        "User_" .. game.Players.LocalPlayer.UserId
                                    ):WaitForChild("III"):FireServer(unpack(args))

                                    local args = {
                                        [1] = "Off",
                                        [2] = haki
                                    }

                                    workspace:WaitForChild("UserData"):WaitForChild(
                                        "User_" .. game.Players.LocalPlayer.UserId
                                    ):WaitForChild("III"):FireServer(unpack(args))

                                    local args = {
                                        [1] = "On",
                                        [2] = haki
                                    }

                                    workspace:WaitForChild("UserData"):WaitForChild(
                                        "User_" .. game.Players.LocalPlayer.UserId
                                    ):WaitForChild("III"):FireServer(unpack(args))

                                    local args = {
                                        [1] = "Off",
                                        [2] = haki
                                    }

                                    workspace:WaitForChild("UserData"):WaitForChild(
                                        "User_" .. game.Players.LocalPlayer.UserId
                                    ):WaitForChild("III"):FireServer(unpack(args))

                                    local args = {
                                        [1] = "Off",
                                        [2] = haki
                                    }

                                    workspace:WaitForChild("UserData"):WaitForChild(
                                        "User_" .. game.Players.LocalPlayer.UserId
                                    ):WaitForChild("III"):FireServer(unpack(args))

                                    local args = {
                                        [1] = "On",
                                        [2] = haki
                                    }

                                    workspace:WaitForChild("UserData"):WaitForChild(
                                        "User_" .. game.Players.LocalPlayer.UserId
                                    ):WaitForChild("III"):FireServer(unpack(args))

                                    local args = {
                                        [1] = "Off",
                                        [2] = haki
                                    }

                                    workspace:WaitForChild("UserData"):WaitForChild(
                                        "User_" .. game.Players.LocalPlayer.UserId
                                    ):WaitForChild("III"):FireServer(unpack(args))

                                    local args = {
                                        [1] = "Off",
                                        [2] = haki
                                    }

                                    workspace:WaitForChild("UserData"):WaitForChild(
                                        "User_" .. game.Players.LocalPlayer.UserId
                                    ):WaitForChild("III"):FireServer(unpack(args))
                                end
                                wait(7)
                            end
                        )
                    end
                end
            )
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            if _G.quayfirstdf then
                pcall(
                    function()
                        if _G.defswordsnip == true then
                            local args = {
                                [1] = "DFT1",
                                [2] = _G.keepdef,
                                [3] = _G.keepmelee,
                                [4] = _G.keepsnip,
                                [5] = _G.keepsword,
                                [6] = _G.budget
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.allspin == true then
                            local args = {
                                [1] = "DFT1",
                                [2] = _G.keepdef,
                                [3] = _G.keepmelee,
                                [4] = _G.keepsnip,
                                [5] = _G.keepsword,
                                [6] = _G.budget
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.meleesnipswordspin == true then
                            local args = {
                                [1] = "DFT1",
                                [2] = _G.keepdef,
                                [3] = _G.keepmelee,
                                [4] = _G.keepsnip,
                                [5] = _G.keepsword,
                                [6] = _G.budget
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.defmeleeswordspin == true then
                            local args = {
                                [1] = "DFT1",
                                [2] = _G.keepdef,
                                [3] = _G.keepmelee,
                                [4] = _G.keepsnip,
                                [5] = _G.keepsword,
                                [6] = _G.budget
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.defmeleesnipspin == true then
                            local args = {
                                [1] = "DFT1",
                                [2] = _G.keepdef,
                                [3] = _G.keepmelee,
                                [4] = _G.keepsnip,
                                [5] = _G.keepsword,
                                [6] = _G.budget
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.swordsnipspin == true then
                            local args = {
                                [1] = "DFT1",
                                [2] = _G.keepdef,
                                [3] = _G.keepmelee,
                                [4] = _G.keepsnip,
                                [5] = _G.keepsword,
                                [6] = _G.budget
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.meleeswordspin == true then
                            local args = {
                                [1] = "DFT1",
                                [2] = _G.keepdef,
                                [3] = _G.keepmelee,
                                [4] = _G.keepsnip,
                                [5] = _G.keepsword,
                                [6] = _G.budget
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.meleesnipspin == true then
                            local args = {
                                [1] = "DFT1",
                                [2] = _G.keepdef,
                                [3] = _G.keepmelee,
                                [4] = _G.keepsnip,
                                [5] = _G.keepsword,
                                [6] = _G.budget
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.defswordspin == true then
                            local args = {
                                [1] = "DFT1",
                                [2] = _G.keepdef,
                                [3] = _G.keepmelee,
                                [4] = _G.keepsnip,
                                [5] = _G.keepsword,
                                [6] = _G.budget
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.defsnipspin == true then
                            local args = {
                                [1] = "DFT1",
                                [2] = _G.keepdef,
                                [3] = _G.keepmelee,
                                [4] = _G.keepsnip,
                                [5] = _G.keepsword,
                                [6] = _G.budget
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.defmeleespin == true then
                            local args = {
                                [1] = "DFT1",
                                [2] = _G.keepdef,
                                [3] = _G.keepmelee,
                                [4] = _G.keepsnip,
                                [5] = _G.keepsword,
                                [6] = _G.budget
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.swordspin == true then
                            local args = {
                                [1] = "DFT1",
                                [2] = _G.keepdef,
                                [3] = _G.keepmelee,
                                [4] = _G.keepsnip,
                                [5] = _G.keepsword,
                                [6] = _G.budget
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.sniperspin == true then
                            local args = {
                                [1] = "DFT1",
                                [2] = _G.keepdef,
                                [3] = _G.keepmelee,
                                [4] = _G.keepsnip,
                                [5] = _G.keepsword,
                                [6] = _G.budget
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.meleespin == true then
                            local args = {
                                [1] = "DFT1",
                                [2] = _G.keepdef,
                                [3] = _G.keepmelee,
                                [4] = _G.keepsnip,
                                [5] = _G.keepsword,
                                [6] = _G.budget
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.defspin == true then
                            local args = {
                                [1] = "DFT1",
                                [2] = _G.keepdef,
                                [3] = _G.keepmelee,
                                [4] = _G.keepsnip,
                                [5] = _G.keepsword,
                                [6] = _G.budget
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        end
                        wait(12)
                    end
                )
            end
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            if _G.quayfirstdf2 then
                pcall(
                    function()
                        if _G.defswordsnip2 == true then
                            local args = {
                                [1] = "DFT2",
                                [2] = _G.keepdef2,
                                [3] = _G.keepmelee2,
                                [4] = _G.keepsnip2,
                                [5] = _G.keepsword2,
                                [6] = _G.budget2
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.allspin2 == true then
                            local args = {
                                [1] = "DFT2",
                                [2] = _G.keepdef2,
                                [3] = _G.keepmelee2,
                                [4] = _G.keepsnip2,
                                [5] = _G.keepsword2,
                                [6] = _G.budget2
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.meleesnipswordspin2 == true then
                            local args = {
                                [1] = "DFT2",
                                [2] = _G.keepdef2,
                                [3] = _G.keepmelee2,
                                [4] = _G.keepsnip2,
                                [5] = _G.keepsword2,
                                [6] = _G.budget2
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.defmeleeswordspin2 == true then
                            local args = {
                                [1] = "DFT2",
                                [2] = _G.keepdef2,
                                [3] = _G.keepmelee2,
                                [4] = _G.keepsnip2,
                                [5] = _G.keepsword2,
                                [6] = _G.budget2
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.defmeleesnipspin2 == true then
                            local args = {
                                [1] = "DFT2",
                                [2] = _G.keepdef2,
                                [3] = _G.keepmelee2,
                                [4] = _G.keepsnip2,
                                [5] = _G.keepsword2,
                                [6] = _G.budget2
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.swordsnipspin2 == true then
                            local args = {
                                [1] = "DFT2",
                                [2] = _G.keepdef2,
                                [3] = _G.keepmelee2,
                                [4] = _G.keepsnip2,
                                [5] = _G.keepsword2,
                                [6] = _G.budget2
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.meleeswordspin2 == true then
                            local args = {
                                [1] = "DFT2",
                                [2] = _G.keepdef2,
                                [3] = _G.keepmelee2,
                                [4] = _G.keepsnip2,
                                [5] = _G.keepsword2,
                                [6] = _G.budget2
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.meleesnipspin2 == true then
                            local args = {
                                [1] = "DFT2",
                                [2] = _G.keepdef2,
                                [3] = _G.keepmelee2,
                                [4] = _G.keepsnip2,
                                [5] = _G.keepsword2,
                                [6] = _G.budget2
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.defswordspin2 == true then
                            local args = {
                                [1] = "DFT2",
                                [2] = _G.keepdef2,
                                [3] = _G.keepmelee2,
                                [4] = _G.keepsnip2,
                                [5] = _G.keepsword2,
                                [6] = _G.budget2
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.defsnipspin2 == true then
                            local args = {
                                [1] = "DFT2",
                                [2] = _G.keepdef2,
                                [3] = _G.keepmelee2,
                                [4] = _G.keepsnip2,
                                [5] = _G.keepsword2,
                                [6] = _G.budget2
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.defmeleespin2 == true then
                            local args = {
                                [1] = "DFT2",
                                [2] = _G.keepdef2,
                                [3] = _G.keepmelee2,
                                [4] = _G.keepsnip2,
                                [5] = _G.keepsword2,
                                [6] = _G.budget2
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.swordspin2 == true then
                            local args = {
                                [1] = "DFT2",
                                [2] = _G.keepdef2,
                                [3] = _G.keepmelee2,
                                [4] = _G.keepsnip2,
                                [5] = _G.keepsword2,
                                [6] = _G.budget2
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.sniperspin2 == true then
                            local args = {
                                [1] = "DFT2",
                                [2] = _G.keepdef2,
                                [3] = _G.keepmelee2,
                                [4] = _G.keepsnip2,
                                [5] = _G.keepsword2,
                                [6] = _G.budget2
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.meleespin2 == true then
                            local args = {
                                [1] = "DFT2",
                                [2] = _G.keepdef2,
                                [3] = _G.keepmelee2,
                                [4] = _G.keepsnip2,
                                [5] = _G.keepsword2,
                                [6] = _G.budget2
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        elseif _G.defspin2 == true then
                            local args = {
                                [1] = "DFT2",
                                [2] = _G.keepdef2,
                                [3] = _G.keepmelee2,
                                [4] = _G.keepsnip2,
                                [5] = _G.keepsword2,
                                [6] = _G.budget2
                            }

                            workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild(
                                "Clickable"
                            ):WaitForChild("Retum"):FireServer(unpack(args))
                        end
                        wait(12)
                    end
                )
            end
        end
    end
)

spawn(
    function()
        while wait(0.3) do
            if _G.quayfirstdf2 or _G.quayfirstdf then
                pcall(
                    function()
                        if
                            game.Players["" .. tostring(game.Players.LocalPlayer)].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame[
                                "Challenge_12"
                            ].Claim.AutoButtonColor == true
                         then
                            workspace.UserData["User_" .. tostring(game.Players.LocalPlayer.UserId)].ChallengesRemote:FireServer(
                                "Claim",
                                "Challenge12"
                            )
                        end
                    end
                )
            end
        end
    end
)
