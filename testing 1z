Rarefruit = {
"Candy Fruit",
"Chilly Fruit",
"Flare Fruit",
"Gas Fruit",
"Gravity Fruit",
"Hollow Fruit",
"Light Fruit",
"Magma Fruit",
"Ope Fruit",
"Plasma Fruit",
"Rumble Fruit",
"Sand Fruit",
"Smoke Fruit",
"Snow Fruit",
"Venom Fruit",
"Dark Fruit",
"Phoenix Fruit",
"Quake Fruit",
"Vampire Fruit"
}

function storedf()
if game.Workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF1Unlocked.Value == true and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF1.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF1.Button.Text == "Store" then
                local args = {
                    [1] = "StoredDF1"
                }
                
                game:GetService("Workspace").UserData["User_"..game.Players.LocalPlayer.UserId].StoredDFRequest:FireServer(unpack(args))
elseif game.Workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF2Unlocked.Value == true and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF2.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF2.Button.Text == "Store" then
                local args = {
                    [1] = "StoredDF2"
                }
                
                game:GetService("Workspace").UserData["User_"..game.Players.LocalPlayer.UserId].StoredDFRequest:FireServer(unpack(args))
elseif game.Workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF3Unlocked.Value == true and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF3.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF3.Button.Text == "Store" then
                local args = {
                    [1] = "StoredDF3"
                }
                
                game:GetService("Workspace").UserData["User_"..game.Players.LocalPlayer.UserId].StoredDFRequest:FireServer(unpack(args))
elseif game.Workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF4Unlocked.Value == true and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF4.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF4.Button.Text == "Store" then
                local args = {
                    [1] = "StoredDF4"
                }
                
                game:GetService("Workspace").UserData["User_"..game.Players.LocalPlayer.UserId].StoredDFRequest:FireServer(unpack(args))
elseif game.Workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF5Unlocked.Value == true and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF5.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF5.Button.Text == "Store" then
                local args = {
                    [1] = "StoredDF5"
                }
                
                game:GetService("Workspace").UserData["User_"..game.Players.LocalPlayer.UserId].StoredDFRequest:FireServer(unpack(args))
elseif game.Workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF6Unlocked.Value == true and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF6.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF6.Button.Text == "Store" then
                local args = {
                    [1] = "StoredDF6"
                }
                
                game:GetService("Workspace").UserData["User_"..game.Players.LocalPlayer.UserId].StoredDFRequest:FireServer(unpack(args))
elseif game.Workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF7Unlocked.Value == true and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF7.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF7.Button.Text == "Store" then
                local args = {
                    [1] = "StoredDF7"
                }
                
                game:GetService("Workspace").UserData["User_"..game.Players.LocalPlayer.UserId].StoredDFRequest:FireServer(unpack(args))
elseif game.Workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF8Unlocked.Value == true and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF8.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF8.Button.Text == "Store" then
                local args = {
                    [1] = "StoredDF8"
                }
                
                game:GetService("Workspace").UserData["User_"..game.Players.LocalPlayer.UserId].StoredDFRequest:FireServer(unpack(args))
elseif game.Workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF9Unlocked.Value == true and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF9.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF9.Button.Text == "Store" then
                local args = {
                    [1] = "StoredDF9"
                }
                
                game:GetService("Workspace").UserData["User_"..game.Players.LocalPlayer.UserId].StoredDFRequest:FireServer(unpack(args))
elseif game.Workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF10Unlocked.Value == true and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF10.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF10.Button.Text == "Store" then
                local args = {
                    [1] = "StoredDF10"
                }
                
                game:GetService("Workspace").UserData["User_"..game.Players.LocalPlayer.UserId].StoredDFRequest:FireServer(unpack(args))
elseif game.Workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF11Unlocked.Value == true and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF11.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF11.Button.Text == "Store" then
                local args = {
                    [1] = "StoredDF11"
                }
                
                game:GetService("Workspace").UserData["User_"..game.Players.LocalPlayer.UserId].StoredDFRequest:FireServer(unpack(args))
elseif game.Workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF12Unlocked.Value == true and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF12.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF12.Button.Text == "Store" then
                local args = {
                    [1] = "StoredDF12"
                }
                
                game:GetService("Workspace").UserData["User_"..game.Players.LocalPlayer.UserId].StoredDFRequest:FireServer(unpack(args))
end
end

spawn(function()
while wait(0.3) do
repeat wait() until _G.storeffrt == true
pcall(function()
repeat task.wait()
for i, t in pairs(Rarefruit) do
for i, u in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
if u.Name == t then
game.Players.LocalPlayer.Character.Humanoid:EquipTool(u)
task.wait()
storedf()
end
end
end
storedf()
until not _G.storeffrt
end)
end
end)

spawn(function()
while wait(0.3) do
repeat wait() until _G.aurasto == true
pcall(function()
repeat task.wait()
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
if string.find(v.Name,"Fruit") and string.sub(v.Data.Value,tonumber(string.len(v.Data.Value)) - 1) == ",1" then
game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
task.wait()
storedf()
end
end
task.wait()
storedf()
until not _G.aurasto
end)
end
end)

_G.aurasto = true
_G.storeffrt = true

spawn(function()
while wait(0.3) do
pcall(function()
_G.fruitdata1 = workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF1.Value
repeat wait(0.5) until workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF1.Value ~= _G.fruitdata1 and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF1.Value ~= "None"
local fruitdataz = workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF1.Value
local fruitparts1 = {}
for part1 in string.gmatch(fruitdataz, "[^,]+") do
    local trimmed = part1:match("^%s*(.-)%s*$")  -- Trim spaces
    table.insert(fruitparts1, trimmed)  -- Add the trimmed part to the table
end

if fruitparts1[6] == "1" then
_G.fruitauraistrue = "(Aura Fruit!!!)"
else
_G.fruitauraistrue = "(Normal Fruit)"
end

local url = "https://discord.com/api/webhooks/1271257970965086278/L-FsAiKEQHfyNIBbvYkvht8m9sh5zfCQi-J0Ki6jKy6N56RKS1YSHsBX1yfXMnZhm7On"
        local data = {
        ["content"] = "",
        ["embeds"] = {
            {
                ["title"] = " Saluna Notify",
                ["description"] = "\nUsername: " .. game.Players.LocalPlayer.Name .. "\nGameID: " .. game.PlaceId .. "\nJobID: " .. game.JobId .. "\n============================================ \nStored DF Slot: 1 \nFruit: " .. fruitparts1[1] .. " " .. _G.fruitauraistrue .. "\nAffinity: :point_down: \nDef: "..fruitparts1[2] .." ; Melee: " .. fruitparts1[3] .. " ; Snip: " .. fruitparts1[4] .. " ; Sword: " .. fruitparts1[5],
                ["type"] = "rich",
                ["color"] = tonumber(0x00FF7F)
            }
        }
        }
        local newdata = game:GetService("HttpService"):JSONEncode(data)
    
        local headers = {
        ["content-type"] = "application/json"
        }
        request = http_request or request or HttpPost or syn.request
        local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
        request(abcdef)
end)
end
end)

spawn(function()
while wait(0.3) do
pcall(function()
_G.fruitdata2 = workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF2.Value
repeat wait(0.5) until workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF2.Value ~= _G.fruitdata2 and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF2.Value ~= "None"
local fruitdatax = workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF2.Value
local fruitparts2 = {}
for part2 in string.gmatch(fruitdatax, "[^,]+") do
    local trimmed = part2:match("^%s*(.-)%s*$")  -- Trim spaces
    table.insert(fruitparts2, trimmed)  -- Add the trimmed part to the table
end

if fruitparts2[6] == "1" then
_G.fruitauraistrue = "(Aura Fruit!!!)"
else
_G.fruitauraistrue = "(Normal Fruit)"
end

local url = "https://discord.com/api/webhooks/1271257970965086278/L-FsAiKEQHfyNIBbvYkvht8m9sh5zfCQi-J0Ki6jKy6N56RKS1YSHsBX1yfXMnZhm7On"
        local data = {
        ["content"] = "",
        ["embeds"] = {
            {
                ["title"] = " Saluna Notify",
                ["description"] = "\nUsername: " .. game.Players.LocalPlayer.Name .. "\nGameID: " .. game.PlaceId .. "\nJobID: " .. game.JobId .. "\n============================================ \nStored DF Slot: 2 \nFruit: " .. fruitparts2[1] .. " " .. _G.fruitauraistrue .. "\nAffinity: :point_down:  \nDef: "..fruitparts2[2] .." ; Melee: " .. fruitparts2[3] .. " ; Snip: " .. fruitparts2[4] .. " ; Sword: " .. fruitparts2[5],
                ["type"] = "rich",
                ["color"] = tonumber(0x00FF7F)
            }
        }
        }
        local newdata = game:GetService("HttpService"):JSONEncode(data)
    
        local headers = {
        ["content-type"] = "application/json"
        }
        request = http_request or request or HttpPost or syn.request
        local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
        request(abcdef)
end)
end
end)

spawn(function()
while wait(0.3) do
pcall(function()
_G.fruitdata3 = workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF3.Value
repeat wait(0.5) until workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF3.Value ~= _G.fruitdata3 and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF3.Value ~= "None"
local fruitdatac = workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF3.Value
local fruitparts3 = {}
for part3 in string.gmatch(fruitdatac, "[^,]+") do
    local trimmed = part3:match("^%s*(.-)%s*$")  -- Trim spaces
    table.insert(fruitparts3, trimmed)  -- Add the trimmed part to the table
end

if fruitparts3[6] == "1" then
_G.fruitauraistrue = "(Aura Fruit!!!)"
else
_G.fruitauraistrue = "(Normal Fruit)"
end

local url = "https://discord.com/api/webhooks/1271257970965086278/L-FsAiKEQHfyNIBbvYkvht8m9sh5zfCQi-J0Ki6jKy6N56RKS1YSHsBX1yfXMnZhm7On"
        local data = {
        ["content"] = "",
        ["embeds"] = {
            {
                ["title"] = " Saluna Notify",
                ["description"] = "\nUsername: " .. game.Players.LocalPlayer.Name .. "\nGameID: " .. game.PlaceId .. "\nJobID: " .. game.JobId .. "\n============================================ \nStored DF Slot: 3 \nFruit: " .. fruitparts3[1] .. " " .. _G.fruitauraistrue .. "\nAffinity: :point_down:  \nDef: "..fruitparts3[2] .." ; Melee: " .. fruitparts3[3] .. " ; Snip: " .. fruitparts3[4] .. " ; Sword: " .. fruitparts3[5],
                ["type"] = "rich",
                ["color"] = tonumber(0x00FF7F)
            }
        }
        }
        local newdata = game:GetService("HttpService"):JSONEncode(data)
    
        local headers = {
        ["content-type"] = "application/json"
        }
        request = http_request or request or HttpPost or syn.request
        local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
        request(abcdef)
end)
end
end)

spawn(function()
while wait(0.3) do
pcall(function()
_G.fruitdata4 = workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF4.Value
repeat wait(0.5) until workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF4.Value ~= _G.fruitdata4 and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF4.Value ~= "None"
local fruitdatav = workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF4.Value
local fruitparts4 = {}
for part4 in string.gmatch(fruitdatav, "[^,]+") do
    local trimmed = part4:match("^%s*(.-)%s*$")  -- Trim spaces
    table.insert(fruitparts4, trimmed)  -- Add the trimmed part to the table
end

if fruitparts4[6] == "1" then
_G.fruitauraistrue = "(Aura Fruit!!!)"
else
_G.fruitauraistrue = "(Normal Fruit)"
end

local url = "https://discord.com/api/webhooks/1271257970965086278/L-FsAiKEQHfyNIBbvYkvht8m9sh5zfCQi-J0Ki6jKy6N56RKS1YSHsBX1yfXMnZhm7On"
        local data = {
        ["content"] = "",
        ["embeds"] = {
            {
                ["title"] = " Saluna Notify",
                ["description"] = "\nUsername: " .. game.Players.LocalPlayer.Name .. "\nGameID: " .. game.PlaceId .. "\nJobID: " .. game.JobId .. "\n============================================ \nStored DF Slot: 4 \nFruit: " .. fruitparts4[1] .. " " .. _G.fruitauraistrue .. "\nAffinity: :point_down:  \nDef: "..fruitparts4[2] .." ; Melee: " .. fruitparts4[3] .. " ; Snip: " .. fruitparts4[4] .. " ; Sword: " .. fruitparts4[5],
                ["type"] = "rich",
                ["color"] = tonumber(0x00FF7F)
            }
        }
        }
        local newdata = game:GetService("HttpService"):JSONEncode(data)
    
        local headers = {
        ["content-type"] = "application/json"
        }
        request = http_request or request or HttpPost or syn.request
        local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
        request(abcdef)
end)
end
end)

spawn(function()
while wait(0.3) do
pcall(function()
_G.fruitdata5 = workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF5.Value
repeat wait(0.5) until workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF5.Value ~= _G.fruitdata5 and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF5.Value ~= "None"
local fruitdatab = workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF5.Value
local fruitparts5 = {}
for part5 in string.gmatch(fruitdatab, "[^,]+") do
    local trimmed = part5:match("^%s*(.-)%s*$")  -- Trim spaces
    table.insert(fruitparts5, trimmed)  -- Add the trimmed part to the table
end

if fruitparts5[6] == "1" then
_G.fruitauraistrue = "(Aura Fruit!!!)"
else
_G.fruitauraistrue = "(Normal Fruit)"
end

local url = "https://discord.com/api/webhooks/1271257970965086278/L-FsAiKEQHfyNIBbvYkvht8m9sh5zfCQi-J0Ki6jKy6N56RKS1YSHsBX1yfXMnZhm7On"
        local data = {
        ["content"] = "",
        ["embeds"] = {
            {
                ["title"] = " Saluna Notify",
                ["description"] = "\nUsername: " .. game.Players.LocalPlayer.Name .. "\nGameID: " .. game.PlaceId .. "\nJobID: " .. game.JobId .. "\n============================================ \nStored DF Slot: 5 \nFruit: " .. fruitparts5[1] .. " " .. _G.fruitauraistrue .. "\nAffinity: :point_down:  \nDef: "..fruitparts5[2] .." ; Melee: " .. fruitparts5[3] .. " ; Snip: " .. fruitparts5[4] .. " ; Sword: " .. fruitparts5[5],
                ["type"] = "rich",
                ["color"] = tonumber(0x00FF7F)
            }
        }
        }
        local newdata = game:GetService("HttpService"):JSONEncode(data)
    
        local headers = {
        ["content-type"] = "application/json"
        }
        request = http_request or request or HttpPost or syn.request
        local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
        request(abcdef)
end)
end
end)

spawn(function()
while wait(0.3) do
pcall(function()
_G.fruitdata6 = workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF6.Value
repeat wait(0.5) until workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF6.Value ~= _G.fruitdata6 and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF6.Value ~= "None"
local fruitdatan = workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF6.Value
local fruitparts6 = {}
for part6 in string.gmatch(fruitdatan, "[^,]+") do
    local trimmed = part6:match("^%s*(.-)%s*$")  -- Trim spaces
    table.insert(fruitparts6, trimmed)  -- Add the trimmed part to the table
end

if fruitparts6[6] == "1" then
_G.fruitauraistrue = "(Aura Fruit!!!)"
else
_G.fruitauraistrue = "(Normal Fruit)"
end

local url = "https://discord.com/api/webhooks/1271257970965086278/L-FsAiKEQHfyNIBbvYkvht8m9sh5zfCQi-J0Ki6jKy6N56RKS1YSHsBX1yfXMnZhm7On"
        local data = {
        ["content"] = "",
        ["embeds"] = {
            {
                ["title"] = " Saluna Notify",
                ["description"] = "\nUsername: " .. game.Players.LocalPlayer.Name .. "\nGameID: " .. game.PlaceId .. "\nJobID: " .. game.JobId .. "\n============================================ \nStored DF Slot: 6 \nFruit: " .. fruitparts6[1] .. " " .. _G.fruitauraistrue .. "\nAffinity: :point_down:  \nDef: "..fruitparts6[2] .." ; Melee: " .. fruitparts6[3] .. " ; Snip: " .. fruitparts6[4] .. " ; Sword: " .. fruitparts6[5],
                ["type"] = "rich",
                ["color"] = tonumber(0x00FF7F)
            }
        }
        }
        local newdata = game:GetService("HttpService"):JSONEncode(data)
    
        local headers = {
        ["content-type"] = "application/json"
        }
        request = http_request or request or HttpPost or syn.request
        local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
        request(abcdef)
end)
end
end)

spawn(function()
while wait(0.3) do
pcall(function()
_G.fruitdata7 = workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF7.Value
repeat wait(0.5) until workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF7.Value ~= _G.fruitdata7 and workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF7.Value ~= "None"
local fruitdatam = workspace.UserData["User_"..tostring(game.Players.LocalPlayer.UserId)].Data.StoredDF7.Value
local fruitparts7 = {}
for part7 in string.gmatch(fruitdatam, "[^,]+") do
    local trimmed = part7:match("^%s*(.-)%s*$")  -- Trim spaces
    table.insert(fruitparts7, trimmed)  -- Add the trimmed part to the table
end

if fruitparts7[6] == "1" then
_G.fruitauraistrue = "(Aura Fruit!!!)"
else
_G.fruitauraistrue = "(Normal Fruit)"
end

local url = "https://discord.com/api/webhooks/1271257970965086278/L-FsAiKEQHfyNIBbvYkvht8m9sh5zfCQi-J0Ki6jKy6N56RKS1YSHsBX1yfXMnZhm7On"
        local data = {
        ["content"] = "",
        ["embeds"] = {
            {
                ["title"] = " Saluna Notify",
                ["description"] = "\nUsername: " .. game.Players.LocalPlayer.Name .. "\nGameID: " .. game.PlaceId .. "\nJobID: " .. game.JobId .. "\n============================================ \nStored DF Slot: 7 \nFruit: " .. fruitparts7[1] .. " " .. _G.fruitauraistrue .. "\nAffinity: :point_down:  \nDef: "..fruitparts7[2] .." ; Melee: " .. fruitparts7[3] .. " ; Snip: " .. fruitparts7[4] .. " ; Sword: " .. fruitparts7[5],
                ["type"] = "rich",
                ["color"] = tonumber(0x00FF7F)
            }
        }
        }
        local newdata = game:GetService("HttpService"):JSONEncode(data)
    
        local headers = {
        ["content-type"] = "application/json"
        }
        request = http_request or request or HttpPost or syn.request
        local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
        request(abcdef)
end)
end
end)

