_G.name = "UPDATING PLEASE WAIT..."
_G.facebookid = "UPDATING PLEASE WAIT..."
repeat wait() until game:IsLoaded()
  if game.placeId == 8569358381 or game.placeId == 3237168 then
local plr = game.Players.LocalPlayer
repeat wait() until plr.PlayerGui.Load.Frame.Visible == true or game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y < 211000
local Pedo = {
    1135910299, -- Havelic
    520944, -- Oblivic
    43247021, -- BowTiedPony
    2350183594, -- icydragonwingsis
    835620275, -- Silvers_Rayleig
    137621, -- mariobros38
    295337577, -- ModeratorDaMarcuses
    1338963426, -- happypandamagic2
    1276541545, -- VanitasThePlague
    587649463, -- happypandamagic
    245586741, -- Tiptop98
    174941504, -- FoxKingFab
    136099207,-- CudlessTheCat
    94825741, -- NATSUDRAGN331
    358051152, -- VortexFragmented
    529455640, -- vlonedd
    281482099, -- Quixotize
    355207559, -- Elianmc1s
    5084487, -- Americanflag
    928623624, -- TrashPanda2361
    30049170, -- Farquanetta
    474452017 -- Bige0n
}

for _, v in pairs(game:GetService("Players"):GetPlayers()) do
    for _, v1 in pairs(Pedo) do
        if v.UserId == v1 then
            game:GetService("Players").LocalPlayer:Kick("Admin or Staff is in the server")
        end
    end
end

game:GetService("Players").PlayerAdded:Connect(function(r)
    for _, v in pairs(Pedo) do
        if r.UserId == v then
            game:GetService("Players").LocalPlayer:Kick("Admin or Staff has joined the server")
        end
    end
end)  

local listed = loadstring(game:HttpGet('https://raw.githubusercontent.com/Iamcutehehe/hehehe/main/whitelist.lua'))()
_G.WhiteListed = false
        for _, v1 in pairs(listed) do
local gethwid = game:GetService("RbxAnalyticsService"):GetClientId()
            if gethwid == v1 then
_G.WhiteListed = true
            end
        end
if _G.WhiteListed then

game:GetService("Players").LocalPlayer.PlayerGui.Menu.Frame.C.Frame.Nametag.TextColor3 = Color3.fromRGB(0, 255, 127)
game:GetService("Players").LocalPlayer.PlayerGui.Menu.Frame.C.Frame.Nametag.Text = "Saluna"
game:GetService("Players").LocalPlayer.PlayerGui.Menu.Frame.C.Frame.Header.Text = "PROTECTED BY:"

local currenthwid = game:GetService("RbxAnalyticsService"):GetClientId()
if currenthwid == listed[1] then
_G.name = "Irenkiss Trần"
_G.facebookid = "IrenkissWantPeace"
elseif currenthwid == listed[2] then
_G.name = "Nguyễn Ngọc Khôi"
_G.facebookid = "ng.khoi.07"
elseif currenthwid == listed[3] then
_G.name = "Hiếu Trung"
_G.facebookid = "cao.hieu.77312"
elseif currenthwid == listed[4] then
_G.name = "Khoa GK"
_G.facebookid = "khoa.gk.75"
elseif currenthwid == listed[5] then
_G.name = "Huy Tú"
_G.facebookid = "100041333672880"
elseif currenthwid == listed[6] then
_G.name = "Huy Tú (2)"
_G.facebookid = "100041333672880"
elseif currenthwid == listed[7] then
_G.name = "Nguyễn Anh Tiến"
_G.facebookid = "TienSama2x"
elseif currenthwid == listed[8] then
_G.name = "Tài Nhớt"
_G.facebookid = "KakutoChan"
elseif currenthwid == listed[9] then
_G.name = "Lâm Quốc Bảo"
_G.facebookid = "theayma8"
elseif currenthwid == listed[10] then
_G.name = "Anh Long"
_G.facebookid = "100086491617614"
elseif currenthwid == listed[11] then
_G.name = "Duy Pham"
_G.facebookid = "61557719982076"
elseif currenthwid == listed[12] then
_G.name = "Trần Minh Đạt"
_G.facebookid = "dat15112006"
elseif currenthwid == listed[13] then
_G.name = "Huyy Niee"
_G.facebookid = "teobo.huy"
elseif currenthwid == listed[14] then
_G.name = "Huyy Niee (2)"
_G.facebookid = "teobo.huy"
elseif currenthwid == listed[15] then
_G.name = "Đặng Bá Dương"
_G.facebookid = "baduonggg.2706"
elseif currenthwid == listed[16] then
_G.name = "Cậu Ngân Hà"
_G.facebookid = "100014813557316"
elseif currenthwid == listed[17] then
_G.name = "Quang Quý"
_G.facebookid = "61560483452261"
elseif currenthwid == listed[18] then
_G.name = "Phan Van Long"
_G.facebookid = "100039356352586"
elseif currenthwid == listed[19] then
_G.name = "Lê Trường Giang"
_G.facebookid = "61560880736193"
elseif currenthwid == listed[20] then
_G.name = "Irenkiss Test"
_G.facebookid = "Irenkiss Test"
elseif currenthwid == listed[23] then
_G.name = "Minh Phạm"
_G.facebookid = "beminhdzvl"
elseif currenthwid == listed[24] then
_G.name = "Nguyên Phúc"
_G.facebookid = "61558821711905"
elseif currenthwid == listed[25] then
_G.name = "Minh Chính"
_G.facebookid = "100080445215092"
elseif currenthwid == listed[26] then
_G.name = "Nguyễn Bin"
_G.facebookid = "61553546437694"
end

    local vu = game:GetService("VirtualUser")
    game:GetService("Players").LocalPlayer.Idled:connect(function()
       vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
       wait(1)
       vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    end)


local Players = game:GetService("Players")
    local cache = {}
    function lol(name)
        if cache[name] then return cache[name] end
        local player = Players:FindFirstChild(name)
        if player then
            cache[name] = player.UserId
            return player.UserId
        end 
    
        local id
        pcall(function ()
            id = Players:lol(name)
        end)
        cache[name] = id
        return id
    end
    local ehh = game.Players.LocalPlayer.Name
    local Final = lol(ehh)
    getgenv().firstfruit = game.Workspace.UserData["User_"..Final].Data["DevilFruit"].Value
    getgenv().secondfruit = game.Workspace.UserData["User_"..Final].Data["DevilFruit2"].Value

   do  
    local fishingplace =  game:GetService("Workspace"):FindFirstChild("fishingplace")  
    if fishingplace then 
    fishingplace:Destroy() 
    end 
    end
    local fishingplace = Instance.new("Part",game.Workspace)
    fishingplace.Name = "fishingplace"
    fishingplace.Size = Vector3.new(2,1,2)
    fishingplace.Position = Vector3.new(19784, 210,5000)
    fishingplace.Anchored = true
    
    do  
    local safezonedestroyspace =  game:GetService("Workspace"):FindFirstChild("SafeZoneOuterSpacePart")  
    if safezonedestroyspace then 
    safezonedestroyspace:Destroy() 
    end 
    end
        if game.CoreGui:FindFirstChild("BBB") then
            game.CoreGui:FindFirstChild("BBB"):Destroy()
        end
    local SafeZoneOuterSpace = Instance.new("Part",game.Workspace)
    SafeZoneOuterSpace.Name = "SafeZoneOuterSpacePart"
    SafeZoneOuterSpace.Size = Vector3.new(200,3,200)
    SafeZoneOuterSpace.Position = Vector3.new((math.random(-100000, 100000)), 10000, (math.random(-100000, 100000)))
    SafeZoneOuterSpace.Anchored = true
local mta = getrawmetatable(game)
local namecall = mta.__namecall
aaxc = hookmetamethod(game, "__namecall", function(self, ...)
    local args = {...}
    local method = getnamecallmethod()
    if method == "FireServer" or method == "InvokeServer" then
        if self.Name == "RemoteEvent" and args[3] == "StopCharging" and _G.auto100rate then
            args[6] = 100
            return aaxc(self, unpack(args))
        end
    end
    return aaxc(self, ...)
end)

local remotes = {}
    local azc
    azc=hookmetamethod(game,"__namecall",function(self,...)
        local args = {...}
        local method = getnamecallmethod()
        if method == "FireServer" or method == "InvokeServer" then
            if self.Name == "RemoteEvent" then
                remotes[self.Name] = args[1]
                return azc(self,unpack(args))
            end
        end
          return azc(self,...)
    end)
    
    function serializeTable(val, name, skipnewlines, depth)
    skipnewlines = skipnewlines or false
    depth = depth or 0
 
    local tmp = string.rep("", depth)
 
    if name then tmp = tmp end
 
    if type(val) == "table" then
        tmp = tmp .. (not skipnewlines and "" or "")
 
        for k, v in pairs(val) do
            tmp =  tmp .. serializeTable(v, k, skipnewlines, depth + 1) .. (not skipnewlines and "" or "")
        end
 
        tmp = tmp .. string.rep("", depth) 
    elseif type(val) == "number" then
        tmp = tmp .. tostring(val)
    elseif type(val) == "string" then
        tmp = tmp .. string.format("%q", val)
    elseif type(val) == "boolean" then
        tmp = tmp .. (val and "true" or "false")
    elseif type(val) == "function" then
        tmp = tmp  .. "func: " .. debug.getinfo(val).name
    else
        tmp = tmp .. tostring(val)
    end
 
    return tmp
 end

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/Iamcutehehe/UI_Interface/main/Fluent.lua"))()
local Window = Fluent:CreateWindow({
    Title = "SALUNA VIP",
    SubTitle = "Made by Saluna",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.F2 -- Used when theres no MinimizeKeybind
})
local Tabs = {
    Info = Window:AddTab({ Title = "About", Icon = "rbxassetid://4871684504" }),
    Main = Window:AddTab({ Title = "Stats", Icon = "rbxassetid://8587689304" }),
    Haki = Window:AddTab({ Title = "Haki", Icon = "rbxassetid://6523858394" }),
    Weapon = Window:AddTab({ Title = "Weapon", Icon = "rbxassetid://7485051715" }),
    Farm = Window:AddTab({ Title = "Farming", Icon = "rbxassetid://16397066979" }),
    Fruit = Window:AddTab({ Title = "Fruit & Compass", Icon = "rbxassetid://13492316250" }),
    Robbing = Window:AddTab({ Title = "Robbing", Icon = "rbxassetid://10651327243" }),
    Affinity = Window:AddTab({ Title = "Affinity", Icon = "rbxassetid://13321880274" }),
    Gems = Window:AddTab({ Title = "Gems (At Risk)", Icon = "rbxassetid://6788518051" }),
    PVP =  Window:AddTab({ Title = "PVP", Icon = "rbxassetid://2294529381" }),
    Teleport = Window:AddTab({ Title = "Teleport", Icon = "rbxassetid://6723742952" }),
    Player = Window:AddTab({ Title = "Player", Icon = "rbxassetid://16149111731" }),
    Shop = Window:AddTab({ Title = "Shop", Icon = "rbxassetid://11385419674" }),
    Automatic = Window:AddTab({ Title = "Automatic", Icon = "rbxassetid://11860859170" }),
    Server = Window:AddTab({ Title = "Server", Icon = "rbxassetid://7539983773" }),
    Webhook = Window:AddTab({ Title = "Webhook", Icon = "rbxassetid://14769727847" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "rbxassetid://16181364687" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" }),
    nonef = Window:AddTab({ Title = "-------", Icon = "" }),
    nonet = Window:AddTab({ Title = "-------", Icon = "" })
}
local Options = Fluent.Options

local rob1 = Tabs.Robbing:AddSection("Fruit Robbing")
local robdrop = Tabs.Robbing:AddDropdown("robdrop", {
        Title = "Robbing Method",
        Values = {"Quake"},
        Multi = false,
        Default = "",
    })


    robdrop:OnChanged(function(dropzxmcc)
_G.robmethod = dropzxmcc
end)

local robfr = Tabs.Robbing:AddToggle("robfrtoggle", {Title = "Auto Rob Rare/Ultra Fruits", Default = false })
robfr:OnChanged(function()
if Options.robfrtoggle.Value == true then
_G.startrop = true
else
_G.startrop = false
end
end)

local bringfruit = Tabs.Robbing:AddToggle("bringfruittoggle", {Title = "Auto Bring Fruit", Default = false })
bringfruit:OnChanged(function()
if Options.bringfruittoggle.Value == true then
getgenv().pickkk = true
else
getgenv().pickkk = false
end
end)

spawn(function()
    while task.wait() do
        pcall(function()
if getgenv().pickkk then
repeat task.wait()
	pcall(function()
for i,v in pairs(game:GetService("Workspace").Trees.Tree:GetDescendants()) do
if v:IsA("ClickDetector") then
fireclickdetector(v)
end
end
	end)
until not getgenv().pickkk
end
end)
end
end)

local Rarefruit = {
"Candy Fruit",
"Chilly Fruit",
"Flare Fruit",
"Gas Fruit",
"Gravity Fruit",
"Hollow Fruit",
"Light Fruit",
"Magma Fruit",
"Ope Fruit",
"Plasma Fruit",
"Rumble Fruit",
"Sand Fruit",
"Smoke Fruit",
"Snow Fruit",
"Venom Fruit",
"Dark Fruit",
"Phoenix Fruit",
"Quake Fruit",
"Vampire Fruit"
}

spawn(function()
while task.wait() do
pcall(function()
if _G.startrop then
pcall(function()
for _, fruitz in pairs(Rarefruit) do
for i, player in pairs(game.Players:GetChildren()) do 
if player.Name ~= game.Players.LocalPlayer.Name then
for i, backpack in pairs(player:GetChildren()) do
if backpack.Name == "Backpack" then 
for i, v in pairs(backpack:GetChildren()) do
if v.Name == fruitz then
_G.cuopfruittarget = player.Name
end
end
end
end
end
end
end
end)
end
end)
end
end)

spawn(function()
while task.wait() do
pcall(function()
if _G.startrop and _G.robmethod == "Quake" and _G.cuopfruittarget ~= "" and _G.cuopfruittarget ~= game.Players.LocalPlayer.Name then
pcall(function()

	for i, tacc in pairs(game.Players:GetChildren()) do 
	if tostring(tacc.Name) == tostring(_G.cuopfruittarget) then
	for i, backpackz in pairs(game.Players:FindFirstChild(_G.cuopfruittarget):GetChildren()) do
	if backpackz.Name == "Backpack" then 
	for i, v in pairs(backpackz:GetChildren()) do
	for _, fruitz in pairs(Rarefruit) do
	if v.Name == fruitz then
	for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
	if v.Name == _G.cuopfruittarget then
	repeat task.wait()
local xr = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Quake)
local vptt = xr.VTCebvc
local dcv = game.Players:FindFirstChild(_G.cuopfruittarget).Character
game:GetService("Players").LocalPlayer.Character.Powers.Quake.RemoteEvent:FireServer(vptt,"QuakePower4", "StopCharging",workspace.IslandCaver.Stones.Stone,dcv.HumanoidRootPart.CFrame,100,Vector3.new(-290.4129333496094, 266.8401794433594, -103.8988037109375))
	until v.Humanoid.Health == 0
wait()
_G.cuopfruittarget = ""
	end
	end
	end
	end
	end
	end
	end
	end
	end

end)
end
end)
end
end)




local info1 = Tabs.Info:AddSection("Developer/Owner")
Tabs.Info:AddParagraph({
Title = "Saluna Hub",
Content = "This script is belong to Saluna aka Irenkiss Trần. \nFacebook: IrenkissWantPeace \nDiscord: AZ-BrAg#6921 \nWe hope you will have a nice experience by using this script!"
})

local info2 = Tabs.Info:AddSection("Information")
local plr = game.Players.LocalPlayer.Character.Name
local plrid = tostring(game.Players.LocalPlayer.UserId)
Tabs.Info:AddParagraph({
Title = "User Information",
Content = "Register Name: ".._G.name.."\nFacebook ID: ".._G.facebookid.."\nUser Name: "..plr .."\nUser ID: "..plrid
})

local Asset = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
Tabs.Info:AddParagraph({
Title = "Server Information",
Content = "Place Name: " ..Asset.Name .."\nPlace ID: " ..game.PlaceId .."\nMax Players: "..game.Players.MaxPlayers
})


local gems1 = Tabs.Gems:AddSection("Dupe Gems (At Risk)")
Tabs.Gems:AddParagraph({
Title = "Warning When Dupe Gems: ",
Content = [[Operation:
When you got a bound slot in first page (1st to 12nd), 
You will get refund 3k gems per 1 bound slot.
When you reset stats, The refund function will reset too.
Thus, when you reset stats and rejoin, you will get refund again.]]
})

local duping = Tabs.Gems:AddToggle("dupingtoggle", {Title = "Auto Dupe Gems (Save & Autoload Config)", Default = false })
duping:OnChanged(function()
if Options.dupingtoggle.Value == true then
_G.dupegem = true
else
_G.dupegem = false
_G.startdupe = false
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.dupegem then
pcall(function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
local plr = tostring(game.Players.LocalPlayer)
if game.Workspace.UserData["User_"..plrid].Data.BoundUnlock1.Value == true or
game.Workspace.UserData["User_"..plrid].Data.BoundUnlock2.Value == true or
game.Workspace.UserData["User_"..plrid].Data.BoundUnlock3.Value == true or
game.Workspace.UserData["User_"..plrid].Data.BoundUnlock4.Value == true or
game.Workspace.UserData["User_"..plrid].Data.BoundUnlock5.Value == true or 
game.Workspace.UserData["User_"..plrid].Data.BoundUnlock6.Value == true or 
game.Workspace.UserData["User_"..plrid].Data.BoundUnlock7.Value == true or
game.Workspace.UserData["User_"..plrid].Data.BoundUnlock8.Value == true or
game.Workspace.UserData["User_"..plrid].Data.BoundUnlock9.Value == true or
game.Workspace.UserData["User_"..plrid].Data.BoundUnlock10.Value == true or
game.Workspace.UserData["User_"..plrid].Data.BoundUnlock11.Value == true or
game.Workspace.UserData["User_"..plrid].Data.BoundUnlock12.Value == true then
_G.startdupe = true
else
Fluent:Notify({
    Title = "Dupe Gems Notify",
    Content = "You don't have any 1st-page bound slot",
    Duration = 3
})
end
end)
end
end)
end
end)






spawn(function()
while wait() do
pcall(function()
if _G.startdupe then
pcall(function()
task.wait(7)
local plr = game.Players.LocalPlayer
repeat task.wait()
until plr.PlayerGui.Load.Frame.Visible
if plr.PlayerGui.Load.Frame.Visible == true then
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Load.Frame.Load.MouseButton1Click)) do
       v:Fire()
   end
end
wait(2)
if plr.PlayerGui.Load.Frame.Visible == true then
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Load.Frame.Load.MouseButton1Click)) do
       v:Fire()
   end
end
wait(2)
if plr.PlayerGui.Load.Frame.Visible == true then
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Load.Frame.Load.MouseButton1Click)) do
       v:Fire()
   end
end
repeat task.wait()
until game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y < 211000
wait(7)
workspace:WaitForChild("UserData"):WaitForChild("User_"..game.Players.LocalPlayer.UserId):WaitForChild("Stats"):FireServer()
wait(5)

game.Players.LocalPlayer:Kick("Hoping Server, Please Wait...")
game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId)
TeleportService = game:GetService("TeleportService")
HttpService = game:GetService("HttpService")
PlaceId, JobId = game.PlaceId, game.JobId
httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
	if httprequest then
		httprequest({
			Url = 'http://127.0.0.1:6463/rpc?v=1',
			Method = 'POST',
			Headers = {
				['Content-Type'] = 'application/json',
				Origin = 'https://discord.com'
			},
			Body = HttpService:JSONEncode({
				cmd = 'INVITE_BROWSER',
				nonce = HttpService:GenerateGUID(false),
				args = {code = 'dYHag43eeU'}
			})
		})
	end   
 if httprequest then
        local servers = {}
        local req = httprequest({Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true", PlaceId)})
        local body = HttpService:JSONDecode(req.Body)

        if body and body.data then
            for i, v in next, body.data do
                if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
                    table.insert(servers, 1, v.id)
                end
            end
        end

        if #servers > 0 then
            TeleportService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], game.Players.LocalPlayer)
        else
            return notify("Serverhop", "Couldn't find a server.")
        end
    else
        notify("Incompatible Exploit", "Your exploit does not support this command (missing request)")
    end          
end)
end
end)
end
end)


local gems2 = Tabs.Gems:AddSection("Exchange Gems To Beries (At Risk)")
Tabs.Gems:AddParagraph({
Title = "Warning When Exchange: ",
Content = "Operation: Fast Reroll And Claim Challenge12 \n(500 Gems = 100.000 Beries) \nBe careful with your affinities!"
})

local wqettt = Tabs.Gems:AddDropdown("bentauga11", {
        Title = "Select Fruit To Exchange",
        Values = {"DFT1", "DFT2"},
        Multi = false,
        Default = "",
    })

    wqettt:OnChanged(function(koedpwqbb)
_G.fruitexchange = koedpwqbb
end)

local exchangett = Tabs.Gems:AddToggle("exchangetttoggle", {Title = "Auto Exchange", Default = false })
exchangett:OnChanged(function()
if Options.exchangetttoggle.Value == true then
_G.exchangegem = true
else
_G.exchangegem = false
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.exchangegem then
pcall(function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
local plr = tostring(game.Players.LocalPlayer)

if game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_12"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Challenge12")
end
repeat wait() 
until game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_12"].Claim.AutoButtonColor == false
wait()

for i = 1,50 do
local args = {
    [1] = _G.fruitexchange,
    [2] = false,
    [3] = false,
    [4] = false,
    [5] = false,
    [6] = "Gems"
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
end

repeat wait() 
until game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_12"].Claim.AutoButtonColor == true

wait()

end)
end
end)
end
end)
local cqwezzz = Tabs.Misc:AddSection("Other Scripts")

    Tabs.Misc:AddButton({
        Title = "Infinite Yield",
        Description = "Open Infinite Yield GUI",
        Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
        end
    })



local mgfrrr = Tabs.Misc:AddSection("Boost")
    Tabs.Misc:AddButton({
        Title = "Low-Graphic Mode",
        Description = "Use to reduce lag",
        Callback = function()
            Window:Dialog({
                Title = "Low-Graphic Mode",
                Content = "Do you want to use?",
                Buttons = {
                    {
                        Title = "OK",
                        Callback = function()
workspace:FindFirstChildOfClass('Terrain').WaterWaveSize = 0
	workspace:FindFirstChildOfClass('Terrain').WaterWaveSpeed = 0
	workspace:FindFirstChildOfClass('Terrain').WaterReflectance = 0
	workspace:FindFirstChildOfClass('Terrain').WaterTransparency = 0
	game:GetService("Lighting").GlobalShadows = false
	game:GetService("Lighting").FogEnd = 9e9
	settings().Rendering.QualityLevel = 1
	for i,v in pairs(game:GetDescendants()) do
		if v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
			v.Material = "Plastic"
			v.Reflectance = 0
		elseif v:IsA("Decal") then
			v.Transparency = 1
		elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
			v.Lifetime = NumberRange.new(0)
		elseif v:IsA("Explosion") then
			v.BlastPressure = 1
			v.BlastRadius = 1
		end
	end
	for i,v in pairs(game:GetService("Lighting"):GetDescendants()) do
		if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
			v.Enabled = false
		end
	end
	workspace.DescendantAdded:Connect(function(child)
		coroutine.wrap(function()
			if child:IsA('ForceField') then
				game:GetService('RunService').Heartbeat:Wait()
				child:Destroy()
			elseif child:IsA('Sparkles') then
				game:GetService('RunService').Heartbeat:Wait()
				child:Destroy()
			elseif child:IsA('Smoke') or child:IsA('Fire') then
				game:GetService('RunService').Heartbeat:Wait()
				child:Destroy()
			end
		end)()
	end)                        end
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
                        end
                    }
                }
            })
        end
    })

local offrender = Tabs.Misc:AddToggle("offrendertoggle", {Title = "Off 3D-Render", Default = false })
offrender:OnChanged(function()
if Options.offrendertoggle.Value == true then
game:GetService("RunService"):Set3dRenderingEnabled(false)
else
game:GetService("RunService"):Set3dRenderingEnabled(true)
end
end)

local Miscc1 = Tabs.Misc:AddSection("Makes Server Lagging")
local miscquake = Tabs.Misc:AddToggle("miscquaketoggle", {Title = "Quake Makes Lag", Default = false })
miscquake:OnChanged(function()
if Options.miscquaketoggle.Value == true then
_G.quakelagmisc = true
else
_G.quakelagmisc = false
end
end)

spawn(function()
while wait() do
if _G.quakelagmisc then
pcall(function()
local x = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Quake)
local vp = x.VTCebvc
    for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
        if v.Name == game.Players.LocalPlayer.Name then
repeat task.wait(0.1)
local args = {
    [1] = vp,
    [2] = "QuakePower1",
    [3] = "StopCharging",
    [4] = workspace:WaitForChild("IslandTown"):WaitForChild("Runic"):WaitForChild("Union"),
    [5] = v.HumanoidRootPart.CFrame,
    [6] = 100,
    [7] = Vector3.new(150.66384887695312, 230.749755859375, 4937.19677734375)
}

game:GetService("Players").LocalPlayer.Character.Powers.Quake.RemoteEvent:FireServer(unpack(args))
until _G.quakelagmisc == false
        end
    end
end)
end
end
end)

local Miscc2 = Tabs.Misc:AddSection("Misc")
Tabs.Misc:AddButton({
        Title = "Fix Cam",
        Description = "Reset Camera (If Error)",
        Callback = function()
	workspace.CurrentCamera:remove()
	wait(.1)
	repeat wait() until game.Players.LocalPlayer.Character ~= nil
	workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid')
	workspace.CurrentCamera.CameraType = "Custom"
	game.Players.LocalPlayer.CameraMinZoomDistance = 0.5
	game.Players.LocalPlayer.CameraMaxZoomDistance = 400
	game.Players.LocalPlayer.CameraMode = "Classic"
	game.Players.LocalPlayer.Character.Head.Anchored = false       
end
    })
local plrsec = Tabs.Player:AddSection("About Player")

    local plrts = Tabs.Player:AddInput("plrts", {
        Title = "Choose Player:",
        Default = "",
        Placeholder = "Insert Here",
        Numeric = false, -- Only allows numbers
        Finished = true, -- Only calls callback when you press enter
        Callback = function()
        end
    })
    plrts:OnChanged(function()
_G.SelectedKillPlayer = ""
_G.plrlow = string.lower(tostring(plrts.Value))
_G.plrnum = string.len(_G.plrlow)
wait()
for i,e in pairs(game.Players:GetChildren()) do
_G.anh = tostring(e.Name)
_G.plrchoose = string.lower(string.sub(_G.anh,1,_G.plrnum))
if _G.plrlow == _G.plrchoose then
_G.SelectedKillPlayer = _G.anh
end
end
end)

local targetallpcho = Tabs.Player:AddToggle("targetallpchotoggle", {Title = "Target All Spawned Player", Default = false })
targetallpcho:OnChanged(function()
if Options.targetallpchotoggle.Value == true then
getgenv().targeting = true
else
getgenv().targeting = false
end
end)

spawn(function()
while wait() do
pcall(function()
if getgenv().targeting then
for i,v in pairs(game.Players:GetChildren()) do
if v.Name ~= game.Players.LocalPlayer.Name then
for i,c in pairs(game.Workspace:GetChildren()) do
if c:IsA("Model") and c.Name == v.Name and c.HumanoidRootPart.Position.Y < 211000 and c.Humanoid.Health > 0 then
repeat task.wait()
if getgenv().targeting == true and c.Humanoid.Health > 0 and c.HumanoidRootPart.Position.Y < 211000 then
_G.SelectedKillPlayer = c.Name
end
until not getgenv().targeting or c.Name ~= v.Name or c.Humanoid.Health == 0
end
end
end
end
end
end)
end
end)


local viewplr = Tabs.Player:AddToggle("viewplrtoggle", {Title = "View Chosen Player", Default = false })
viewplr:OnChanged(function()
if Options.viewplrtoggle.Value == true then
getgenv().viewplrr = true
else
getgenv().viewplrr = false
end
end)

Tabs.Player:AddButton({
        Title = "Teleport To Player",
        Description = "Teleport To Chosen Player",
        Callback = function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.HumanoidRootPart.CFrame
end
    })

local asdzxcvvv = Tabs.PVP:AddSection("Skills")
local azxcwwwcarge = Tabs.PVP:AddToggle("azxcwwwcargetoggle", {Title = "100% Charging", Default = false })
azxcwwwcarge:OnChanged(function()
if Options.azxcwwwcargetoggle.Value == true then
_G.auto100rate = true
else
_G.auto100rate = false
end
end)

local plrsightzxcsz = Tabs.PVP:AddSection("Players' Sight")
local plresp = Tabs.PVP:AddToggle("plresptoggle", {Title = "Esp Players", Default = false })
plresp:OnChanged(function()
if Options.plresptoggle.Value == true then
ESPPlayer = true
else
ESPPlayer = false
end
end)

        function isnil(thing)
            return (thing == nil)
        end
        local function round(n)
            return math.floor(tonumber(n) + 0.5)
        end
        Number = math.random(1, 1000000)
        function UpdatePlayerChams()
            for i,v in pairs(game:GetService'Players':GetChildren()) do
 if v.Name ~= game.Players.LocalPlayer.Name then
                pcall(function()
                    if not isnil(v.Character) then
                        if ESPPlayer then
                            if not isnil(v.Character.Head) and not v.Character.Head:FindFirstChild('NameEsp'..Number) then
                                local bill = Instance.new('BillboardGui',v.Character.Head)
                                bill.Name = 'NameEsp'..Number
                                bill.ExtentsOffset = Vector3.new(0, 1, 0)
                                bill.Size = UDim2.new(1,200,1,30)
                                bill.Adornee = v.Character.Head
                                bill.AlwaysOnTop = true
                                local name = Instance.new('TextLabel',bill)
                                name.FontFace = Font.fromName("Merriweather")
                                name.FontSize = "Size14"
                                name.TextWrapped = true
                                name.Text = (v.Name ..' \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Character.Head.Position).Magnitude/3) ..' m')
                                name.Size = UDim2.new(1,0,1,0)
                                name.TextYAlignment = 'Top'
                                name.BackgroundTransparency = 1
                                name.TextStrokeTransparency = 0.5
                                if v.Team == game.Players.LocalPlayer.Team then
                                    name.TextColor3 = Color3.fromRGB(0, 255, 127)
                                else
                                    name.TextColor3 = Color3.fromRGB(0, 255, 127)
                                end
                            else
                                v.Character.Head['NameEsp'..Number].TextLabel.Text = (v.Name ..'   \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Character.Head.Position).Magnitude/3) ..' m')
                            end
                        end
                    end
                end)
	end
            end
        end

spawn(function()
while task.wait() do
pcall(function()
if ESPPlayer then
UpdatePlayerChams()
else
for i,v in pairs(game:GetService'Players':GetChildren()) do
if v.Character.Head:FindFirstChild('NameEsp'..Number) then
v.Character.Head:FindFirstChild('NameEsp'..Number):Destroy()
end
end
end
end)
end
end)

local sizehahaqw = Tabs.PVP:AddSlider("sizehahaqwqweqwzz", {
    Title = "HitBox Players",
    Description = "Adjust players' hitbox",
    Default = 10,
    Min = 0,
    Max = 250,
    Rounding = 0,
    Callback = function(concachitbox)
            fathitbox = tonumber(concachitbox)
        end
    })

local hitboxasdmpo = Tabs.PVP:AddToggle("hitboxasdmpotoggle", {Title = "Hitbox Players", Default = false })
hitboxasdmpo:OnChanged(function()
if Options.hitboxasdmpotoggle.Value == true then
_G.Hitboxplr = true
else
_G.Hitboxplr = false
end
end)

spawn(function()
       while wait() do
              pcall(function()
if _G.Hitboxplr then
                                          
for i,v in pairs(game.Players:GetChildren()) do
if v.Name ~= game.Players.LocalPlayer.Name then
v.Character.HumanoidRootPart.Size = Vector3.new(fathitbox, fathitbox, fathitbox)
v.Character.HumanoidRootPart.Transparency = 0.7
v.Character.HumanoidRootPart.Color = Color3.fromRGB(0, 255, 127)
end
end
                                          
else
                                          
for i,v in pairs(game.Players:GetChildren()) do
if v.Name ~= game.Players.LocalPlayer.Name then
v.Character.HumanoidRootPart.Transparency = 1
v.Character.HumanoidRootPart.Size = Vector3.new(2, 2, 1)
end
end
                                          
end
              end)
       end
end)



local bringadeksoaet = Tabs.Player:AddSection("Bring Player")

local bringdis = Tabs.Player:AddSlider("bringsl", {
    Title = "Bring Distance",
    Description = "Adjust bring distance",
    Default = 4,
    Min = -20,
    Max = 20,
    Rounding = 0,
    Callback = function(dis1t)
            distancebring = tonumber(dis1t)*(-1)
        end
    })

local disbring1aa = Tabs.Player:AddToggle("disbring1aatoggle", {Title = "Bring Chosen Player", Default = false })
disbring1aa:OnChanged(function()
if Options.disbring1aatoggle.Value == true then
_G.BringPlayer = true
else
_G.BringPlayer = false
end
end)

local disbringallplr = Tabs.Player:AddToggle("disbringallplrtoggle", {Title = "Bring All Player", Default = false })
disbringallplr:OnChanged(function()
if Options.disbringallplrtoggle.Value == true then
_G.BringAllPlayer = true
else
_G.BringAllPlayer = false
end
end)

        spawn(function()
            while wait() do
pcall(function()
                if _G.BringAllPlayer then
                    pcall(function()
repeat task.wait()
for i,v in pairs(game.Players:GetChildren()) do
if v.Name ~= game.Players.LocalPlayer.Name then
v.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,distancebring)
end
end
until not _G.BringAllPlayer
                    end)
                end
end)
            end
        end)



        spawn(function()
            while wait() do
pcall(function()
                if _G.BringPlayer then
                    pcall(function()
repeat task.wait()
game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,distancebring)
until not _G.BringPlayer
                    end)
                end
end)
            end
        end)




local CONMEMAYCAMP = Tabs.Player:AddSection("Non-Teleport Camp")
local quakecampchose = Tabs.Player:AddToggle("quakecampchosetoggle", {Title = "Quake Camp", Default = false })
quakecampchose:OnChanged(function()
if Options.quakecampchosetoggle.Value == true then
_G.AutoQuake = true
else
_G.AutoQuake = false
end
end)

spawn(function()
while wait() do
if _G.AutoQuake then
pcall(function()
repeat task.wait()
local xr = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Quake)
local vptt = xr.VTCebvc
local v = game.Players:FindFirstChild(_G.SelectedKillPlayer).Character
game:GetService("Players").LocalPlayer.Character.Powers.Quake.RemoteEvent:FireServer(vptt,"QuakePower4", "StopCharging",workspace.IslandCaver.Stones.Stone,v.HumanoidRootPart.CFrame,100,Vector3.new(-290.4129333496094, 266.8401794433594, -103.8988037109375))
task.wait(0.05)
until _G.AutoQuake == false
end)
end
end
end)

disstring = -10
local stringggg = Tabs.Player:AddToggle("stringgggtoggle", {Title = "String Camp (Use Skill To Activate)", Default = false })
stringggg:OnChanged(function()
if Options.stringgggtoggle.Value == true then
_G.CampString = true
else
_G.CampString = false
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.CampString then
pcall(function()
for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
if v.Name == _G.SelectedKillPlayer and _G.CampString == true and v.Humanoid.Health > 0 and game.Players.LocalPlayer.Character.Humanoid.Sit == true then
    pcall(function()
repeat task.wait()
local args = {
    [1] = tonumber(serializeTable(remotes)),
    [2] = "StringPower8",
    [3] = "Start",
    [4] = game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.Torso.CFrame,
    [5] = game:GetService("Players"):WaitForChild(_G.SelectedKillPlayer).Character.Torso
}

game:GetService("Players").LocalPlayer.Character.Powers.String.RemoteEvent:FireServer(unpack(args))
task.wait(0.05)
until v.Humanoid.Health == 0 or not _G.CampString or v.Name ~= _G.SelectedKillPlayer
local args = {
    [1] = tonumber(serializeTable(remotes)),
    [2] = "StringPower7"
}

game:GetService("Players").LocalPlayer.Character.Powers.String.RemoteEvent:FireServer(unpack(args))
end)
end
end
end)
end
end)
end
end)


spawn(function()
while wait() do
pcall(function()
if _G.CampString then
pcall(function()
for i,c in pairs(game:GetService("Workspace"):GetChildren()) do
if c.Name == _G.SelectedKillPlayer and _G.CampString == true then
repeat task.wait()
if c.Humanoid.Health > 0 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Island8.Table.Chair.Seat.CFrame * CFrame.new(0, -1, 0)
end
until c.Humanoid.Health == 0 or not _G.CampString or c.Name ~= _G.SelectedKillPlayer or game.Players.LocalPlayer.Character.Humanoid.Sit == true
end
end
end)
end
end)
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.CampString then
pcall(function()
for i,c in pairs(game:GetService("Workspace"):GetChildren()) do
if c.Name == _G.SelectedKillPlayer and _G.CampString == true then
repeat task.wait()
if c.Humanoid.Health > 0 then
game.Players:FindFirstChild(_G.SelectedKillPlayer).Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,disstring)
end
until c.Humanoid.Health == 0 or not _G.CampString or c.Name ~= _G.SelectedKillPlayer
end
end
end)
end
end)
end
end)


local okgeriogg = Tabs.Player:AddSection("Teleport Camp")
local cvbvfsx = Tabs.Player:AddSlider("gkhlsmxxx", {
    Title = "Teleport Distance",
    Description = "Change this for adjusting camp distance",
    Default = 15,
    Min = 0,
    Max = 100,
    Rounding = 0,
    Callback = function(distancecagreva)
            campdis = tonumber(distancecagreva)
        end
    })

local darksec = Tabs.Player:AddToggle("darksectoggle", {Title = "Dark Camp", Default = false })
darksec:OnChanged(function()
if Options.darksectoggle.Value == true then
_G.CampDark = true
else
_G.CampDark = false
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.CampDark then
pcall(function()
for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
if v.Name == _G.SelectedKillPlayer and _G.CampDark == true and v.Humanoid.Health > 0 then
    pcall(function()
repeat task.wait()
local x = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Dark)
local vtcccq = x.VTCjebaj
local args = {
    [1] = vtcccq,
    [2] = "DarkPower4",
    [3] = "StartCharging",
    [4] = CFrame.new(-102.340569, 213, 215.227097, -0.982314944, -0.125758141, 0.138716429, -0, 0.74086374, 0.671655476, -0.187236086, 0.659777224, -0.727761507),
    [5] = workspace:WaitForChild("IslandWindmill"):WaitForChild("OutterDune"):WaitForChild("Beach"),
    [7] = "Right"
}

game:GetService("Players").LocalPlayer.Character.Powers.Dark.RemoteEvent:FireServer(unpack(args))
task.wait(0.05)
local args = {
    [1] = vtcccq,
    [2] = "DarkPower4",
    [3] = "StopCharging",
    [4] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,100,0),
    [5] = workspace:WaitForChild("IslandGrassy"):WaitForChild("Base"):WaitForChild("Path"):WaitForChild("Union"),
    [6] = 100
}

game:GetService("Players").LocalPlayer.Character.Powers.Dark.RemoteEvent:FireServer(unpack(args))
until v.Humanoid.Health == 0 or not _G.CampDark or v.Name ~= _G.SelectedKillPlayer
end)
end
end
end)
end
end)
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.CampDark then
pcall(function()
for i,c in pairs(game:GetService("Workspace"):GetChildren()) do
if c.Name == _G.SelectedKillPlayer and _G.CampDark == true then
repeat task.wait()
if c.HumanoidRootPart.Position.Y > 200 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.HumanoidRootPart.CFrame * CFrame.new(0,campdis,0)
elseif c.HumanoidRootPart.Position.Y < 200 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["SafeZoneOuterSpacePart"].CFrame * CFrame.new(0, 5, 0)
end
until c.Humanoid.Health == 0 or not _G.CampDark or c.Name ~= _G.SelectedKillPlayer
end
end
end)
end
end)
end
end)

local vamppppp = Tabs.Player:AddToggle("vamppppptoggle", {Title = "Vamp Camp (Use Skill To Activate)", Default = false })
vamppppp:OnChanged(function()
if Options.vamppppptoggle.Value == true then
_G.CampVamp = true
else
_G.CampVamp = false
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.CampVamp then
pcall(function()
for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
if v.Name == _G.SelectedKillPlayer and _G.CampVamp == true and v.Humanoid.Health > 0 then
    pcall(function()
repeat task.wait()
local args = {
    [1] = tonumber(serializeTable(remotes)),
    [2] = "VampirePower5",
    [3] = "StartCharging",
    [4] = CFrame.new(-391.38922119140625, 213, -232.140625, 0.5274614095687866, -0.7214826345443726, 0.4486061632633209, -1.4901161193847656e-08, 0.5280334949493408, 0.8492236733436584, -0.8495790362358093, -0.44793272018432617, 0.2785172760486603),
    [5] = workspace:WaitForChild("IslandWindmill"):WaitForChild("Beach"):WaitForChild("Beach"),
    [9] = "Left"
}

game:GetService("Players").LocalPlayer.Character.Powers.Vampire.RemoteEvent:FireServer(unpack(args))
task.wait(0.05)
local args = {
    [1] = tonumber(serializeTable(remotes)),
    [2] = "VampirePower5",
    [3] = "StopCharging",
    [4] = v.HumanoidRootPart.CFrame,
    [5] = workspace:WaitForChild("IslandWindmill"):WaitForChild("OutterDune"):WaitForChild("Beach"),
    [6] = 100
}

game:GetService("Players").LocalPlayer.Character.Powers.Vampire.RemoteEvent:FireServer(unpack(args))
until v.Humanoid.Health == 0 or not _G.CampVamp or v.Name ~= _G.SelectedKillPlayer
end)
end
end
end)
end
end)
end
end)


spawn(function()
while wait() do
pcall(function()
if _G.CampVamp then
pcall(function()
for i,c in pairs(game:GetService("Workspace"):GetChildren()) do
if c.Name == _G.SelectedKillPlayer and _G.CampVamp == true then
repeat task.wait()
if c.HumanoidRootPart.Position.Y > 200 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.HumanoidRootPart.CFrame * CFrame.new(0,campdis,0)
elseif c.HumanoidRootPart.Position.Y < 200 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["SafeZoneOuterSpacePart"].CFrame * CFrame.new(0, 5, 0)
end
until c.Humanoid.Health == 0 or not _G.CampVamp or c.Name ~= _G.SelectedKillPlayer
end
end
end)
end
end)
end
end)

local magmamgggg = Tabs.Player:AddToggle("magmamggggtoggle", {Title = "Magma Camp (Use Skill To Activate)", Default = false })
magmamgggg:OnChanged(function()
if Options.magmamggggtoggle.Value == true then
_G.CampMagma = true
else
_G.CampMagma = false
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.CampMagma then
pcall(function()
for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
if v.Name == _G.SelectedKillPlayer and _G.CampMagma == true and v.Humanoid.Health > 0 then
    pcall(function()
repeat task.wait()
local args = {
    [1] = tonumber(serializeTable(remotes)),
    [2] = "MagmaPower1",
    [3] = "StartCharging",
    [4] = CFrame.new(-123.28974914550781, 213, -871.10595703125, 0.9992225766181946, -0.009072019718587399, 0.038368139415979385, -0, 0.9731666445732117, 0.23010201752185822, -0.03942607715725899, -0.22992312908172607, 0.9724099040031433),
    [5] = workspace:WaitForChild("IslandTown"):WaitForChild("Beach"):WaitForChild("Beach"),
    [7] = "Right"
}

game:GetService("Players").LocalPlayer.Character.Powers.Magma.RemoteEvent:FireServer(unpack(args))
task.wait(0.05)
local args = {
    [1] = tonumber(serializeTable(remotes)),
    [2] = "MagmaPower1",
    [3] = "StopCharging",
    [4] = v.HumanoidRootPart.CFrame,
    [5] = workspace:WaitForChild("IslandTown"):WaitForChild("Beach"):WaitForChild("Beach"),
    [6] = 100
}

game:GetService("Players").LocalPlayer.Character.Powers.Magma.RemoteEvent:FireServer(unpack(args))
until v.Humanoid.Health == 0 or not _G.CampMagma or v.Name ~= _G.SelectedKillPlayer
end)
end
end
end)
end
end)
end
end)


spawn(function()
while wait() do
pcall(function()
if _G.CampMagma then
pcall(function()
for i,c in pairs(game:GetService("Workspace"):GetChildren()) do
if c.Name == _G.SelectedKillPlayer and _G.CampMagma == true then
repeat task.wait()
if c.HumanoidRootPart.Position.Y > 200 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.HumanoidRootPart.CFrame * CFrame.new(0,campdis,0)
elseif c.HumanoidRootPart.Position.Y < 200 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["SafeZoneOuterSpacePart"].CFrame * CFrame.new(0, 5, 0)
end
until c.Humanoid.Health == 0 or not _G.CampMagma or c.Name ~= _G.SelectedKillPlayer
end
end
end)
end
end)
end
end)

local lightsec = Tabs.Player:AddToggle("lightsectoggle", {Title = "Light Camp", Default = false })
lightsec:OnChanged(function()
if Options.lightsectoggle.Value == true then
_G.CampLight = true
else
_G.CampLight = false
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.CampLight then
pcall(function()
for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
if v.Name == _G.SelectedKillPlayer and _G.CampLight == true and v.Humanoid.Health > 0 then
    pcall(function()
repeat task.wait()
local x = getsenv(game:GetService("Players").LocalPlayer.Character.Powers.Light)
local lightcode = x.VTCrv
game:GetService("Players").LocalPlayer.Character.Powers.Light.RemoteEvent:FireServer(lightcode,"LightPower2", "StartCharging",CFrame.new(Vector3.new(-1037.58544921875, 215.7229461669922, -5000.449951171875), Vector3.new(-0.7139230966567993, -0.5779988169670105, 0.39526084065437317)),workspace.IslandCaver.Stones.Stone, 100)
task.wait(0.05)
local args = {
    [1] = lightcode,
    [2] = "LightPower2",
    [3] = "StopCharging",
    [4] = v.HumanoidRootPart.CFrame,
    [5] = workspace.IslandCaver.Stones.Stone,
    [6] = 100
}

game:GetService("Players").LocalPlayer.Character.Powers.Light.RemoteEvent:FireServer(unpack(args))
until v.Humanoid.Health == 0 or not _G.CampLight or v.Name ~= _G.SelectedKillPlayer
end)
end
end
end)
end
end)
end
end)




spawn(function()
while wait() do
pcall(function()
if _G.CampLight then
pcall(function()
for i,c in pairs(game:GetService("Workspace"):GetChildren()) do
if c.Name == _G.SelectedKillPlayer and _G.CampLight == true then
repeat task.wait()
if c.HumanoidRootPart.Position.Y > 200 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.HumanoidRootPart.CFrame * CFrame.new(0,campdis,0)
elseif c.HumanoidRootPart.Position.Y < 200 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["SafeZoneOuterSpacePart"].CFrame * CFrame.new(0, 5, 0)
end
until c.Humanoid.Health == 0 or not _G.CampLight or c.Name ~= _G.SelectedKillPlayer
end
end
end)
end
end)
end
end)


spawn(function()
while wait() do
pcall(function()
local plr2 = game.Players:FindFirstChild(_G.SelectedKillPlayer)
if getgenv().viewplrr == true and plr2.Name == _G.SelectedKillPlayer then
Fluent:Notify({
    Title = "Players Notify",
    Content = "Viewing " ..plr2.Name,
    Duration = 5
})
pcall(function()
repeat wait()
game.Workspace.Camera.CameraSubject = plr2.Character.Humanoid
until getgenv().viewplrr == false or plr2.Name ~= _G.SelectedKillPlayer
end)
end
end)
end
end)

spawn(function()
while wait() do
pcall(function()
local plr2 = game.Players:FindFirstChild(_G.SelectedKillPlayer)
if getgenv().viewplrr == false or plr2.Name ~= _G.SelectedKillPlayer then
pcall(function()
repeat wait()
game.Workspace.Camera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid
until getgenv().viewplrr == true or plr2.Name == _G.SelectedKillPlayer
end)
end
end)
end
end)

local Shoo4p = Tabs.Shop:AddSection("Drinks")

local drinkstype = Tabs.Shop:AddDropdown("banlongdiem", {
        Title = "Select Drinks",
        Values = {"Smoothie","Cider","Juice","Lemonade","Smoothie+","Cider+","Juice+","Lemonade+"},
        Multi = false,
        Default = "",
    })


    drinkstype:OnChanged(function(typepp)
_G.drinktret = tostring(typepp)
end)

    local drinkamount = Tabs.Shop:AddInput("drinkamount", {
        Title = "Choose Amount:",
        Default = "",
        Placeholder = "Insert Here",
        Numeric = true, -- Only allows numbers
        Finished = true, -- Only calls callback when you press enter
        Callback = function()
        end
    })

    drinkamount:OnChanged(function()
drinkff = drinkamount.Value
tretgmm = tonumber(drinkff)
end)

Tabs.Shop:AddButton({
        Title = "Buy Drinks",
        Description = "Buy selected drinks",
        Callback = function()
if _G.drinktret == "Smoothie" or _G.drinktret == "Cider" or _G.drinktret == "Juice" or _G.drinktret == "Lemonade" then
for i = 1,tretgmm do
    local args = {
        [1] = _G.drinktret
    }
    
workspace.Merchants.DrinkMerchant.Clickable.Retum:FireServer(unpack(args))
end
elseif _G.drinktret == "Smoothie+" or _G.drinktret == "Cider+" or _G.drinktret == "Juice+" or _G.drinktret == "Lemonade+" then
for i = 1,tretgmm do
    local args = {
        [1] = _G.drinktret
    }
    
workspace.Merchants.BetterDrinkMerchant.Clickable.Retum:FireServer(unpack(args))
end
end
end
    })

Tabs.Shop:AddButton({
        Title = "Instant Drink",
        Description = "Fast Drink",
        Callback = function()

                    for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v:IsA("Tool") and string.find(v.Name, "Juice") or string.find(v.Name, "Milk") or string.find(v.Name, "Cider") or string.find(v.Name, "Lemonade") or string.find(v.Name, "Smoothie") or string.find(v.Name, "Golden") then
                                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
v:Activate()
                                        end
                    end
end
    })






local Shoo1p = Tabs.Shop:AddSection("Melee Weapon")
    Tabs.Shop:AddButton({
        Title = "Seastone Cestus (Fake Equipment)",
        Description = "Requires 500 Melee",
        Callback = function()
local plr = tostring(game.Players.LocalPlayer)
local plrid = tostring(game.Players.LocalPlayer.UserId)
if game.Players.LocalPlayer.Backpack:FindFirstChild("Melee") or game.Players.LocalPlayer.Backpack:FindFirstChild("Table Kick") or game.Players.LocalPlayer.Backpack:FindFirstChild("Black Leg") or game.Players.LocalPlayer.Backpack:FindFirstChild("Seastone Cestus") or game.Players.LocalPlayer.Backpack:FindFirstChild("Aqua Staff") then
if game.Workspace.UserData["User_"..plrid].Data.MeleeLevel.Value >= 500 then
pcall(function()
          local Players = game:GetService("Players")
    local cache = {}
    function lol(name)
        if cache[name] then return cache[name] end
        local player = Players:FindFirstChild(name)
        if player then
            cache[name] = player.UserId
            return player.UserId
        end 
    
        local id
        pcall(function ()
            id = Players:lol(name)
        end)
        cache[name] = id
        return id
    end
    local ehh = game.Players.LocalPlayer.Name
    local Final = lol(ehh)
    local A_1 = "Seastone Cestus"
    local Event = game:GetService("Workspace").UserData["User_"..Final].UpdateMelee
    Event:FireServer(A_1)
end)
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "Equipped Seastone Cestus",
    Duration = 5
})
else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "Your Melee Level Is Lower Than 500",
    Duration = 5
})
end
else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "Please Spawn",
    Duration = 5
})
end
        end
    })

    Tabs.Shop:AddButton({
        Title = "Aqua Staff (Fake Equipment)",
        Description = "Requires 500 Melee",
        Callback = function()
local plr = tostring(game.Players.LocalPlayer)
local plrid = tostring(game.Players.LocalPlayer.UserId)
if game.Players.LocalPlayer.Backpack:FindFirstChild("Melee") or game.Players.LocalPlayer.Backpack:FindFirstChild("Table Kick") or game.Players.LocalPlayer.Backpack:FindFirstChild("Black Leg") or game.Players.LocalPlayer.Backpack:FindFirstChild("Seastone Cestus") or game.Players.LocalPlayer.Backpack:FindFirstChild("Aqua Staff") then
if game.Workspace.UserData["User_"..plrid].Data.MeleeLevel.Value >= 500 then
pcall(function()
          local Players = game:GetService("Players")
    local cache = {}
    function lol(name)
        if cache[name] then return cache[name] end
        local player = Players:FindFirstChild(name)
        if player then
            cache[name] = player.UserId
            return player.UserId
        end 
    
        local id
        pcall(function ()
            id = Players:lol(name)
        end)
        cache[name] = id
        return id
    end
    local ehh = game.Players.LocalPlayer.Name
    local Final = lol(ehh)
    local A_1 = "Aqua Staff"
    local Event = game:GetService("Workspace").UserData["User_"..Final].UpdateMelee
    Event:FireServer(A_1)
end)
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "Equipped Aqua Staff",
    Duration = 5
})
else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "Your Melee Level Is Lower Than 500",
    Duration = 5
})
end
else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "Please Spawn",
    Duration = 5
})
end
        end
    })


local Shooppp1 = Tabs.Shop:AddSection("Sword")
    Tabs.Shop:AddButton({
        Title = "Dagger",
        Description = "Requires 1,000 Beries",
        Callback = function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
if game:GetService("Workspace").UserData["User_"..plrid].Data.PlayerHas_Dagger.Value == false then

if game:GetService("Workspace").UserData["User_"..plrid].Data.Cash.Value >= 1000 then
        local A_1 = "Dagger"
        local A_2 = 1000
        local Event = game:GetService("Workspace").Merchants.SwordMerchant.Clickable.Retum
        Event:FireServer(A_1, A_2)
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You just bought Dagger",
    Duration = 5
})
else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "Lack Of Beries",
    Duration = 5
})
end

else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You have already got Dagger",
    Duration = 5
})
end


        end
    })

    Tabs.Shop:AddButton({
        Title = "Wakizashi",
        Description = "Requires 5,000 Beries",
        Callback = function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
if game:GetService("Workspace").UserData["User_"..plrid].Data.PlayerHas_Wakizashi.Value == false then

if game:GetService("Workspace").UserData["User_"..plrid].Data.Cash.Value >= 5000 then
        local A_1 = "Wakizashi"
        local A_2 = 5000
        local Event = game:GetService("Workspace").Merchants.SwordMerchant.Clickable.Retum
        Event:FireServer(A_1, A_2)
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You just bought Wakizashi",
    Duration = 5
})
else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "Lack Of Beries",
    Duration = 5
})
end

else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You have already got Wakizashi",
    Duration = 5
})
end


        end
    })

    Tabs.Shop:AddButton({
        Title = "Tachi",
        Description = "Requires 7,500 Beries",
        Callback = function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
if game:GetService("Workspace").UserData["User_"..plrid].Data.PlayerHas_Tachi.Value == false then

if game:GetService("Workspace").UserData["User_"..plrid].Data.Cash.Value >= 7500 then
        local A_1 = "Tachi"
        local A_2 = 7500
        local Event = game:GetService("Workspace").Merchants.SwordMerchant.Clickable.Retum
        Event:FireServer(A_1, A_2)
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You just bought Tachi",
    Duration = 5
})

else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "Lack Of Beries",
    Duration = 5
})
end


else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You have already got Tachi",
    Duration = 5
})
end


        end
    })

    Tabs.Shop:AddButton({
        Title = "Katana",
        Description = "Requires 10,000 Beries",
        Callback = function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
if game:GetService("Workspace").UserData["User_"..plrid].Data.PlayerHas_Katana.Value == false then
if game:GetService("Workspace").UserData["User_"..plrid].Data.Cash.Value >= 10000 then

        local A_1 = "Katana"
        local A_2 = 10000
        local Event = game:GetService("Workspace").Merchants.SwordMerchant.Clickable.Retum
        Event:FireServer(A_1, A_2)
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You just bought Katana",
    Duration = 5
})
else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "Lack Of Beries",
    Duration = 5
})
end

else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You have already got Katana",
    Duration = 5
})
end


        end
    })

    Tabs.Shop:AddButton({
        Title = "Flail",
        Description = "Requires 50,000 Beries",
        Callback = function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
if game:GetService("Workspace").UserData["User_"..plrid].Data.PlayerHas_Flail.Value == false then
if game:GetService("Workspace").UserData["User_"..plrid].Data.Cash.Value >= 50000 then

        local A_1 = "Flail"
        local A_2 = 50000
        local Event = game:GetService("Workspace").Merchants.FlailMerchant.Clickable.Retum
        Event:FireServer(A_1, A_2)
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You just bought Flail",
    Duration = 5
})
else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "Lack Of Beries",
    Duration = 5
})
end

else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You have already got Flail",
    Duration = 5
})
end


        end
    })

    Tabs.Shop:AddButton({
        Title = "Krizma",
        Description = "Requires 80,000 Beries",
        Callback = function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
if game:GetService("Workspace").UserData["User_"..plrid].Data.PlayerHas_Krizma.Value == false then
if game:GetService("Workspace").UserData["User_"..plrid].Data.Cash.Value >= 80000 then

        local A_1 = "Krizma"
        local A_2 = 80000
        local Event = game:GetService("Workspace").Merchants.KrizmaMerch.Clickable.Retum
        Event:FireServer(A_1, A_2)
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You just bought Krizma",
    Duration = 5
})
else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "Lack Of Beries",
    Duration = 5
})
end

else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You have already got Krizma",
    Duration = 5
})
end


        end
    })

local Shoo3p = Tabs.Shop:AddSection("Gun")

    Tabs.Shop:AddButton({
        Title = "Slingshot",
        Description = "Requires 1,000 Beries",
        Callback = function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
if game:GetService("Workspace").UserData["User_"..plrid].Data.PlayerHas_Slingshot.Value == false then
if game:GetService("Workspace").UserData["User_"..plrid].Data.Cash.Value >= 1000 then

        local A_1 = "Slingshot"
        local A_2 = 1000
        local Event = game:GetService("Workspace").Merchants.SniperMerchant.Clickable.Retum
        Event:FireServer(A_1, A_2)
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You just bought Slingshot",
    Duration = 5
})
else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "Lack Of Beries",
    Duration = 5
})
end

else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You have already got Slingshot",
    Duration = 5
})
end


        end
    })

    Tabs.Shop:AddButton({
        Title = "Stars",
        Description = "Requires 5,000 Beries",
        Callback = function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
if game:GetService("Workspace").UserData["User_"..plrid].Data.PlayerHas_Stars.Value == false then
if game:GetService("Workspace").UserData["User_"..plrid].Data.Cash.Value >= 5000 then

        local A_1 = "Stars"
        local A_2 = 5000
        local Event = game:GetService("Workspace").Merchants.SniperMerchant.Clickable.Retum
        Event:FireServer(A_1, A_2)
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You just bought Stars",
    Duration = 5
})
else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "Lack Of Beries",
    Duration = 5
})
end

else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You have already got Stars",
    Duration = 5
})
end


        end
    })

    Tabs.Shop:AddButton({
        Title = "Crossbow",
        Description = "Requires 7,500 Beries",
        Callback = function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
if game:GetService("Workspace").UserData["User_"..plrid].Data.PlayerHas_Crossbow.Value == false then
if game:GetService("Workspace").UserData["User_"..plrid].Data.Cash.Value >= 7500 then

        local A_1 = "Crossbow"
        local A_2 = 7500
        local Event = game:GetService("Workspace").Merchants.SniperMerchant.Clickable.Retum
        Event:FireServer(A_1, A_2)
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You just bought Crossbow",
    Duration = 5
})
else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "Lack Of Beries",
    Duration = 5
})
end

else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You have already got Crossbow",
    Duration = 5
})
end


        end
    })

    Tabs.Shop:AddButton({
        Title = "Flintlock",
        Description = "Requires 10,000 Beries",
        Callback = function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
if game:GetService("Workspace").UserData["User_"..plrid].Data.PlayerHas_Flintlock.Value == false then
if game:GetService("Workspace").UserData["User_"..plrid].Data.Cash.Value >= 10000 then

        local A_1 = "Flintlock"
        local A_2 = 10000
        local Event = game:GetService("Workspace").Merchants.SniperMerchant.Clickable.Retum
        Event:FireServer(A_1, A_2)
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You just bought Flintlock",
    Duration = 5
})
else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "Lack Of Beries",
    Duration = 5
})
end

else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You have already got Flintlock",
    Duration = 5
})
end


        end
    })

    Tabs.Shop:AddButton({
        Title = "Cannon Ball",
        Description = "Requires 400,000 Beries",
        Callback = function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
if game:GetService("Workspace").UserData["User_"..plrid].Data["PlayerHas_Cannon Ball"].Value == false then
if game:GetService("Workspace").UserData["User_"..plrid].Data.Cash.Value >= 400000 then

        local A_1 = "Cannon Ball"
        local A_2 = 400000
        local Event = game:GetService("Workspace").Merchants.HeavyWeaponsMerchant.Clickable.Retum
        Event:FireServer(A_1, A_2)
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You just bought Cannon Ball",
    Duration = 5
})
else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "Lack Of Beries",
    Duration = 5
})
end

else
Fluent:Notify({
    Title = "Saluna Shop Notify",
    Content = "You have already got Cannon Ball",
    Duration = 5
})
end


        end
    })














local FruitFFt = Tabs.Fruit:AddSection("Fruit Stuff")
local openboxunc = Tabs.Fruit:AddToggle("openboxunctoggle", {Title = "Auto Open Common/Uncommon Box", Default = false })
openboxunc:OnChanged(function()
if Options.openboxunctoggle.Value == true then
_G.opencommon = true
else
_G.opencommon = false
end
end)

local openboxrare = Tabs.Fruit:AddToggle("openboxraretoggle", {Title = "Auto Open Rare/Ultra Box", Default = false })
openboxrare:OnChanged(function()
if Options.openboxraretoggle.Value == true then
_G.openrare = true
else
_G.openrare = false
end
end)

local storefruit = Tabs.Fruit:AddToggle("storefruittoggle", {Title = "Auto Store Rare/Ultra Fruit", Default = false })
storefruit:OnChanged(function()
if Options.storefruittoggle.Value == true then
_G.storeffrt = true
else
_G.storeffrt = false
end
end)

local aurastq = Tabs.Fruit:AddToggle("aurastqtoggle", {Title = "Auto Store Aura Fruit", Default = false })
aurastq:OnChanged(function()
if Options.aurastqtoggle.Value == true then
_G.aurasto = true
else
_G.aurasto = false
end
end)


spawn(function()
while wait() do
pcall(function()
if _G.openrare then
            pcall(function()
                for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v:IsA("Tool") and string.find(v.Name, "Rare") then
                                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
v:Activate()
                                        end
                                    end
            end)
end
end)
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.opencommon then
            pcall(function()
                for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v:IsA("Tool") and string.find(v.Name, "ommon") then
                                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
v:Activate()
                                        end
                                    end
            end)
end
end)
end
end)







function storedf()
local plrid = tostring(game.Players.LocalPlayer.UserId)
local plr = tostring(game.Players.LocalPlayer)
if game.Workspace.UserData["User_"..plrid].Data.StoredDF1Unlocked.Value == true and workspace.UserData["User_"..plrid].Data.StoredDF1.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF1.Button.Text == "Store" then
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF1.Button.MouseButton1Click)) do
v.Function()
end
elseif game.Workspace.UserData["User_"..plrid].Data.StoredDF2Unlocked.Value == true and workspace.UserData["User_"..plrid].Data.StoredDF2.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF2.Button.Text == "Store" then
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF2.Button.MouseButton1Click)) do
v.Function()
end
elseif game.Workspace.UserData["User_"..plrid].Data.StoredDF3Unlocked.Value == true and workspace.UserData["User_"..plrid].Data.StoredDF3.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF3.Button.Text == "Store" then
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF3.Button.MouseButton1Click)) do
v.Function()
end
elseif game.Workspace.UserData["User_"..plrid].Data.StoredDF4Unlocked.Value == true and workspace.UserData["User_"..plrid].Data.StoredDF4.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF4.Button.Text == "Store" then
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF4.Button.MouseButton1Click)) do
v.Function()
end
elseif game.Workspace.UserData["User_"..plrid].Data.StoredDF5Unlocked.Value == true and workspace.UserData["User_"..plrid].Data.StoredDF5.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF5.Button.Text == "Store" then
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF5.Button.MouseButton1Click)) do
v.Function()
end
elseif game.Workspace.UserData["User_"..plrid].Data.StoredDF6Unlocked.Value == true and workspace.UserData["User_"..plrid].Data.StoredDF6.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF6.Button.Text == "Store" then
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF6.Button.MouseButton1Click)) do
v.Function()
end
elseif game.Workspace.UserData["User_"..plrid].Data.StoredDF7Unlocked.Value == true and workspace.UserData["User_"..plrid].Data.StoredDF7.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF7.Button.Text == "Store" then
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF7.Button.MouseButton1Click)) do
v.Function()
end
elseif game.Workspace.UserData["User_"..plrid].Data.StoredDF8Unlocked.Value == true and workspace.UserData["User_"..plrid].Data.StoredDF8.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF8.Button.Text == "Store" then
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF8.Button.MouseButton1Click)) do
v.Function()
end
elseif game.Workspace.UserData["User_"..plrid].Data.StoredDF9Unlocked.Value == true and workspace.UserData["User_"..plrid].Data.StoredDF9.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF9.Button.Text == "Store" then
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF9.Button.MouseButton1Click)) do
v.Function()
end
elseif game.Workspace.UserData["User_"..plrid].Data.StoredDF10Unlocked.Value == true and workspace.UserData["User_"..plrid].Data.StoredDF10.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF10.Button.Text == "Store" then
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF10.Button.MouseButton1Click)) do
v.Function()
end
elseif game.Workspace.UserData["User_"..plrid].Data.StoredDF11Unlocked.Value == true and workspace.UserData["User_"..plrid].Data.StoredDF11.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF11.Button.Text == "Store" then
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF11.Button.MouseButton1Click)) do
v.Function()
end
elseif game.Workspace.UserData["User_"..plrid].Data.StoredDF12Unlocked.Value == true and workspace.UserData["User_"..plrid].Data.StoredDF12.Value == "None" and game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF12.Button.Text == "Store" then
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Storage.Frame.StoredDF12.Button.MouseButton1Click)) do
v.Function()
end
end
end

local Rarefruit = {
"Candy Fruit",
"Chilly Fruit",
"Flare Fruit",
"Gas Fruit",
"Gravity Fruit",
"Hollow Fruit",
"Light Fruit",
"Magma Fruit",
"Ope Fruit",
"Plasma Fruit",
"Rumble Fruit",
"Sand Fruit",
"Smoke Fruit",
"Snow Fruit",
"Venom Fruit",
"Dark Fruit",
"Phoenix Fruit",
"Quake Fruit",
"Vampire Fruit"
}

spawn(function()
    while task.wait() do
        pcall(function()
if _G.storeffrt then
repeat task.wait()
            pcall(function()
for _, v in pairs(Rarefruit) do
if game.Players.LocalPlayer.Backpack:FindFirstChild(v) then
repeat task.wait()
local x = game.Players.LocalPlayer.Backpack:FindFirstChild(v)
x.Parent = game.Players.LocalPlayer.Character
task.wait()
storedf()
until x.Parent ~= game.Players.LocalPlayer.Character
end
end
end)
until not _G.storeffrt
end
end)
end
end)


spawn(function()
    while task.wait() do
        pcall(function()
if _G.aurasto then
repeat task.wait()
            pcall(function()
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
if string.find(v.Name,"Fruit") then
local d = v.Data.Value
local c = string.len(d)
local b = tonumber(c) - 1
if string.sub(d,b) == ",1" then
repeat task.wait()
local x = game.Players.LocalPlayer.Backpack:FindFirstChild(v.Name)
x.Parent = game.Players.LocalPlayer.Character
task.wait()
storedf()
until x.Parent ~= game.Players.LocalPlayer.Character
end
end
end
end)
until not _G.aurasto
end
end)
end
end)

local FruitF = Tabs.Fruit:AddSection("Auto Compass")
local getcompass = Tabs.Fruit:AddToggle("getcompasstoggle", {Title = "Auto Get Compass", Default = false })
getcompass:OnChanged(function()
if Options.getcompasstoggle.Value == true then
getgenv().claim = true
else
getgenv().claim = false
end
end)

spawn(function()
    while task.wait() do
        pcall(function()
if getgenv().claim then
            pcall(function()
                workspace.Merchants.QuestMerchant.Clickable.Retum:FireServer("Claim10")
            end)
task.wait(1)
end
end)
end
end)

local findcompass = Tabs.Fruit:AddToggle("findcompasstoggle", {Title = "Auto Find Compass", Default = false })
findcompass:OnChanged(function()
if Options.findcompasstoggle.Value == true then
getgenv().find = true
else
getgenv().find = false
end
end)

spawn(function()
    while task.wait() do
        pcall(function()
if getgenv().find then
                pcall(function()
if game.Players.LocalPlayer.Backpack:FindFirstChild("Compass") then
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack["Compass"])
end

for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v.Name == "Compass" then              
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(v.Poser.Value)
end

if game.Players.LocalPlayer.Character:FindFirstChild("Compass") then
game.Players.LocalPlayer.Character.Compass:Activate()
end
    end
       end)
wait(0.5)
end
end)
end
end)


local Cannon = Tabs.Farm:AddSection("Auto Cannon Farming")

local fastcannon = Tabs.Farm:AddToggle("fastcannontoggle", {Title = "Fast Cannon", Default = false })
fastcannon:OnChanged(function()
if Options.fastcannontoggle.Value == true then
_G.autocannon = true

if game.Players.LocalPlayer.Character:FindFirstChild("Cannon Ball") then
wait()
game.Players.LocalPlayer.Character.Humanoid:UnequipTools()
end

else
_G.autocannon = false
end
end)

spawn(function()
    while task.wait() do
        pcall(function()
            if _G.autocannon then
                local toolname = "Cannon Ball"
                local Plr = game:GetService("Players").LocalPlayer
                wait(0.1)
                if Plr.Backpack:FindFirstChild(toolname) and not Plr.Character:FindFirstChild(toolname) and not Plr.Character:FindFirstChildOfClass("Tool") then
repeat wait()
                    local tool = Plr.Backpack:FindFirstChild(toolname)
                    Plr.Character.Humanoid:EquipTool(tool)
wait(1)
until not _G.autocannon
wait()
                end
            end
        end)
    end
end)

spawn(function()
    while task.wait(0) do
        pcall(function()
            if _G.autocannon and game.Players.LocalPlayer.Backpack:FindFirstChild("Cannon Ball") then
                task.wait(1)
                for i=1,2 do
                    game:GetService("Players").LocalPlayer.Character.Weapons:FireServer()
                end
            end
        end)
    end
end)

spawn(function()
    while task.wait(15) do
        pcall(function()
            if _G.autocannon then
                task.wait(0.1)
                if game.Players.LocalPlayer.Backpack:FindFirstChild("Cannon Ball") then
                    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v.Name == "Cannon Ball" then
                            v:Destroy()
                        end
                    end
                end
            end
        end)
    end
end)
spawn(function()
    while task.wait(0) do
        pcall(function()
            if _G.autocannon then
                task.wait(0.1)
                if game.Players.LocalPlayer.Backpack:FindFirstChild("Cannon Ball") then
                    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v.Name ~= "Cannon" and v.Name ~= "Cannon Ball" then
                            v:Destroy()
                        end
                    end
                end
            end
        end)
    end
end)



local autocannonmob = Tabs.Farm:AddToggle("cannonmobtoggle", {Title = "Auto Farm Mobs (Cannon)", Default = false })
autocannonmob:OnChanged(function()
if Options.cannonmobtoggle.Value == true then
_G.autocannonslow = true
else
_G.autocannonslow = false
end
end)

local autocannonplrbring = Tabs.Farm:AddToggle("autocannonplrbringtoggle", {Title = "Auto Kill All Player (Bring-Method)", Default = false })
autocannonplrbring:OnChanged(function()
if Options.autocannonplrbringtoggle.Value == true then
_G.autocannonplrbring = true
else
_G.autocannonplrbring = false
end
end)

    spawn(function() -- autofarm teleport cannon
    while wait(0) do
        pcall(function()
            if _G.autocannonplrbring then
                for i,v in pairs(game.Players:GetChildren()) do
                    if v.Name ~= game.Players.LocalPlayer.Name then
                        v.Character.HumanoidRootPart.Transparency = 0.7
                    	v.Character.HumanoidRootPart.Color = Color3.fromRGB(0, 255, 127)
                        v.Character.HumanoidRootPart.CanCollide = false
                        v.Character.HumanoidRootPart.Size = Vector3.new(1000, 1000, 1000)
                        v.Character.HumanoidRootPart.CFrame = CFrame.new(100, 3000, 800)
                        v.Character.HumanoidRootPart.Anchored = true
                        if v.Character.Humanoid.Health == 0 then
                            v.Character.HumanoidRootPart.Size = Vector3.new(2, 2, 1)
                            v.Character.HumanoidRootPart.Transparency = 1
                        end
                    end
                end
            end
        end)
    end
end)


local autocannonplr = Tabs.Farm:AddToggle("cannonplrtoggle", {Title = "Auto Kill All Player (Chair)", Default = false })
autocannonplr:OnChanged(function()
if Options.cannonplrtoggle.Value == true then
_G.autocannonplr = true
else
_G.autocannonplr = false
end
end)

local Reeaaz = Tabs.Farm:AddSection("Auto Reset")

local rssli = Tabs.Farm:AddSlider("rssliderzz", {
    Title = "Reset Time (s)",
    Description = "Adjust reset time",
    Default = 900,
    Min = 100,
    Max = 2000,
    Rounding = 0,
    Callback = function(casd)
            rstimehaha = tonumber(casd)
        end
    })

local autoreset = Tabs.Farm:AddToggle("autoresettoggle", {Title = "Auto Reset", Default = false })
autoreset:OnChanged(function()
if Options.autoresettoggle.Value == true then
_G.resetzxcm = true
Fluent:Notify({
    Title = "Auto Function Notify",
    Content = "Auto Reset Is Turned On",
    Duration = 5
})
else
_G.resetzxcm = false
Fluent:Notify({
    Title = "Auto Function Notify",
    Content = "Auto Reset Is Turned Off",
    Duration = 5
})
end
end)

spawn(function()
while wait() do
if _G.resetzxcm then
pcall(function()
task.wait(rstimehaha)
if _G.resetzxcm then
game.Players.LocalPlayer.Character.Humanoid.Health = 0
game:GetService("Workspace").LocalPlayer.CharacterTrait.Health = 0
end
end)
end
end
end)


local Cannon = Tabs.Farm:AddSection("Auto Buso (Only 1 Allowed)")

local autobusohaki = Tabs.Farm:AddToggle("autobusohakitoggle", {Title = "Auto Buso (On/Off)", Default = false })
autobusohaki:OnChanged(function()
if Options.autobusohakitoggle.Value == true then
_G.autohakibuso = true
else
_G.autohakibuso = false
end
end)

local Cannon = Tabs.Farm:AddSection("Auto Buso (Fast Regen)")
local regentargetslider = Tabs.Farm:AddSlider("Autobusosli", {
    Title = "Regen Target (%)",
    Description = "Change this for adjusting regen target",
    Default = 70,
    Min = 30,
    Max = 90,
    Rounding = 0,
    Callback = function(weqrww)
            regentarget = tonumber(weqrww)
        end
    })

local regenspeedslider = Tabs.Farm:AddSlider("Autorzsli", {
    Title = "Regen Speed",
    Description = "Change this for adjusting regen speed",
    Default = 20,
    Min = 5,
    Max = 50,
    Rounding = 0,
    Callback = function(weqrwwtt)
            regenspeed = tonumber(weqrwwtt)
        end
    })


local autoregenhaki = Tabs.Farm:AddToggle("autoregenhakitoggle", {Title = "Auto Buso Fast Regen", Default = false })
autoregenhaki:OnChanged(function()
if Options.autoregenhakitoggle.Value == true then
_G.autohakicannon = true
_G.offhaki = true
local plrid = tostring(game.Players.LocalPlayer.UserId)
local plr = tostring(game.Players.LocalPlayer)
local hakigoc = game.workspace.UserData["User_"..plrid].Data.HakiLevel.Value
local hakiuse = hakigoc/100*regentarget
wait()
if game.Workspace.UserData["User_"..plrid].HakiBar.Value > hakiuse then
_G.onhaki = true
_G.regenhaki = false
elseif game.Workspace.UserData["User_"..plrid].HakiBar.Value <= hakiuse then
_G.onhaki = false
_G.regenhaki = true
end
else
_G.autohakicannon = false
_G.offhaki = false
_G.onhaki = false
_G.regenhaki = false
end
end)



spawn(function()
while wait() do
pcall(function()
if _G.autohakicannon then
pcall(function()

local plrid = tostring(game.Players.LocalPlayer.UserId)
local plr = tostring(game.Players.LocalPlayer)
local hakigoc = game.workspace.UserData["User_"..plrid].Data.HakiLevel.Value
local hakiuse = hakigoc/100*regentarget
repeat wait()
until game:GetService("Players").LocalPlayer.PlayerGui.Load.Frame.Visible == true

if game.Workspace.UserData["User_"..plrid].HakiBar.Value > hakiuse then
_G.onhaki = true
elseif game.Workspace.UserData["User_"..plrid].HakiBar.Value <= hakiuse then
_G.regenhaki = true
end

end)
end
end)
end
end)


spawn(function()
while wait() do
pcall(function()
if _G.autohakicannon then
pcall(function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
local plr = tostring(game.Players.LocalPlayer)
local hakigoc = game.workspace.UserData["User_"..plrid].Data.HakiLevel.Value
local hakiuse = hakigoc/100*regentarget
if _G.onhaki == true and not game.Players.LocalPlayer.PlayerGui.HealthBar.Frame.Status:FindFirstChild("BusoHaki") then
wait(0.5)
game.workspace.UserData["User_" ..game.Players.LocalPlayer.UserId].UpdateHaki:FireServer()
end
_G.onhaki = false
_G.regenhaki = true
end)
end
end)
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.autohakicannon then
pcall(function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
local plr = tostring(game.Players.LocalPlayer)
local hakigoc = game.workspace.UserData["User_"..plrid].Data.HakiLevel.Value
local hakiuse = hakigoc/100*regentarget

if _G.offhaki == true and game.Workspace.UserData["User_"..plrid].HakiBar.Value < hakiuse and game.Players.LocalPlayer.PlayerGui.HealthBar.Frame.Status:FindFirstChild("BusoHaki") then
wait(0.5)
game.workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].UpdateHaki:FireServer()
wait()
end

end)
end
end)
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.autohakicannon then
pcall(function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
local plr = tostring(game.Players.LocalPlayer)
local hakigoc = game.workspace.UserData["User_"..plrid].Data.HakiLevel.Value
local hakiuse = hakigoc/100*regentarget
local hakimuon = hakiuse + 10
if _G.regenhaki == true and not game.Players.LocalPlayer.PlayerGui.HealthBar.Frame.Status:FindFirstChild("BusoHaki") and game.Workspace.UserData["User_"..plrid].HakiBar.Value < hakimuon and not _G.onhaki then
wait()
 local Players = game:GetService("Players")
local cache = {}
    function lol(name)
        if cache[name] then return cache[name] end
        local player = Players:FindFirstChild(name)
        if player then
            cache[name] = player.UserId
            return player.UserId
        end 
    
        local id
        pcall(function ()
            id = Players:lol(name)
        end)
        cache[name] = id
        return id
    end
    local ehh = game.Players.LocalPlayer.Name
    local Final = lol(ehh)
for i = 1, regenspeed do wait()
    local args = {
        [1] = "Off",
        [2] = hakigoc
    }
    
    workspace.UserData["User_"..plrid].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = hakigoc
    }
    
    workspace.UserData["User_"..plrid].III:FireServer(unpack(args))
    end
task.wait(0.1)
        local args = {
        [1] = "Off",
        [2] = hakigoc
    }
    
    workspace.UserData["User_"..plrid].III:FireServer(unpack(args))
wait()
        local args = {
        [1] = "Off",
        [2] = hakigoc
    }
    
    workspace.UserData["User_"..plrid].III:FireServer(unpack(args))
wait()
repeat task.wait()
until game.Workspace.UserData["User_"..plrid].HakiBar.Value >= hakigoc or game.Players.LocalPlayer.Character.Humanoid.Health == 0 or _G.autohakicannon == false
if game.Workspace.UserData["User_"..plrid].HakiBar.Value >= hakigoc and _G.regenhaki == true then 
wait()
_G.onhaki = true
_G.regenhaki = false
end

end


end)
end
end)
end
end)



















local Fishing = Tabs.Farm:AddSection("Auto Fishing")

local autofish = Tabs.Farm:AddToggle("fishytoggle", {Title = "Auto Fish (Cannot be used with Auto-Package)", Default = false })
autofish:OnChanged(function()
if Options.fishytoggle.Value == true then
getgenv().fishing = true
else
getgenv().fishing = false
end
end)


spawn(function()
    while wait() do
        pcall(function()
            if _G.autohakibuso then
                task.wait(0)
                if not game.Players.LocalPlayer.PlayerGui.HealthBar.Frame.Status:FindFirstChild("BusoHaki") then
                    wait(0.5)
                    game.workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].UpdateHaki:FireServer()
                end
                if game.Players.LocalPlayer.PlayerGui.HealthBar.Frame.Status:FindFirstChild("BusoHaki") then
                    wait(0.5)
                    game.workspace.UserData["User_" .. game.Players.LocalPlayer.UserId].UpdateHaki:FireServer()
                end

            end
        end)
    end
end)

spawn(function()
    while task.wait() do
        pcall(function()
local plr = game.Players.LocalPlayer
if getgenv().fishing and not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass") then
for i,v in pairs(plr.Backpack:GetChildren()) do
if string.find(v.Name, "Rod") then
v.Parent = plr.Character
                end
            end
         end
      end)
   end
end)

spawn(function()
    while task.wait() do
        pcall(function()
if getgenv().fishing and not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass") then
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["fishingplace"].CFrame * CFrame.new(0, 3, 0)
wait(0.1)
for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
if string.find(v.Name, "Rod") then
game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
end
end
end
for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if string.find(v.Name, "Rod") then
for _, x in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
if string.find(x.Name, "Rod") then
for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
if v:FindFirstChild("Bobber") then
if v.Bobber.Effect.Enabled == true then
wait(0.1)

local args = {
[1] = Vector3.new(20837,-3017,-4390)
}
game:GetService("Players").LocalPlayer.Character:FindFirstChild(x.Name).Click:FireServer(unpack(args))
end
elseif v.Name == "Cast" and not v:FindFirstChild("Bobber") then
wait(0.6)
local args = {
[1] = Vector3.new(20837,-3017,-4390)
}
game:GetService("Players").LocalPlayer.Character:FindFirstChild(x.Name).Click:FireServer(unpack(args))
wait()
workspace:WaitForChild("Merchants"):WaitForChild("FishMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer()
end
end
end
end
end
end
      end)
   end
end)

local Package = Tabs.Farm:AddSection("Auto Package")

local autopackage = Tabs.Farm:AddToggle("packagetoggle", {Title = "Auto Package (Cannot be used with Auto-Fishing)", Default = false })
autopackage:OnChanged(function()
if Options.packagetoggle.Value == true then
getgenv().tret = true
else
getgenv().tret = false
end
end)

spawn(function()
while wait() do
pcall(function()
if getgenv().tret then
pcall(function()
workspace:WaitForChild("Merchants"):WaitForChild("QuestFishMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer()
wait(2)
end)
end
end)
end
end)

spawn(function()
while wait() do
pcall(function()
if getgenv().tret then
pcall(function()
if game.Players.LocalPlayer.Backpack:FindFirstChild("Package") and not game.Players.LocalPlayer.Character:FindFirstChild("Package") then
                            game.Players.LocalPlayer.Backpack:FindFirstChild("Package").Parent = game.Players.LocalPlayer.Character
                            game.Players.LocalPlayer.Character.Humanoid.Sit = true
                            elseif game.Players.LocalPlayer.Character:FindFirstChild("Package")  then
if game.Players.LocalPlayer.Character.Humanoid.Sit == false then
game.Players.LocalPlayer.Character.Humanoid.Sit = true
end
 for _,v in pairs(game.Workspace.Merchants:GetChildren()) do
if string.find(v.Name, "Aff") or string.find(v.Name, "Heavy") or string.find(v.Name, "Drink") or string.find(v.Name, "Boat") or string.find(v.Name, "Emote") or string.find(v.Name, "Exp") or string.find(v.Name, "Fish") or string.find(v.Name, "Flail") or string.find(v.Name, "Krizma") or string.find(v.Name, "QuestFish") or string.find(v.Name, "QuestMe") or string.find(v.Name, "Friend") or string.find(v.Name, "Sniper") or string.find(v.Name, "Sword") and v:FindFirstChild("HumanoidRootPart") then
if not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass") then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v:FindFirstChild("HumanoidRootPart").CFrame + Vector3.new(1, 0, 0)
wait(0.3)
game.Players.LocalPlayer.Character.Package:Activate()
end
end
end
elseif not game.Players.LocalPlayer.Backpack:FindFirstChild("Package") and not game.Players.LocalPlayer.Character:FindFirstChild("Compass") then
if game.Players.LocalPlayer.Character.Humanoid.Sit == true then
game.Players.LocalPlayer.Character.Humanoid.Sit = false
end
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new((math.random(-50000, 50000)), 10000, (math.random(-50000, 50000)))
end
end)
end
end)
end
end)


spawn(function()
    while task.wait() do
        pcall(function()
local plr = game.Players.LocalPlayer
if _G.autocannonslow or _G.autocannonplr or _G.autocannonplrbring then
if _G.autocannon == false then
for i,v in pairs(plr.Backpack:GetChildren()) do
repeat task.wait()
if v.Name == "Cannon Ball" then
v.Parent = plr.Character
end
until not _G.autocannonslow and not _G.autocannonplr and not _G.autocannonplrbring
end
end
end
      end)
   end
end)

    spawn(function() -- autofarm teleport cannon
    while wait() do
        pcall(function()
            if _G.autocannonplr then
                for i,v in pairs(game.Players:GetChildren()) do
                    if v.Name ~= game.Players.LocalPlayer.Name then
                        v.Character.HumanoidRootPart.Transparency = 0.7
                    	v.Character.HumanoidRootPart.Color = Color3.fromRGB(0, 255, 127)
                        v.Character.HumanoidRootPart.CanCollide = false
                        v.Character.HumanoidRootPart.Size = Vector3.new(1000, 1000, 1000)
                    end
                end
            end
        end)
    end
end)



spawn(function()
    while task.wait() do
        pcall(function()
            if _G.autocannonplr or _G.autocannonslow or _G.autocannonplrbring then
                local args = {
                    [1] = CFrame.new(Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame))
                }
                game:GetService("Players").LocalPlayer.Character:FindFirstChild("Cannon Ball").RemoteEvent:FireServer(unpack(args))
                wait()
                local args = {
                    [1] = CFrame.new(Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame))
                }
                game:GetService("Players").LocalPlayer.Character:FindFirstChild("Cannon Ball").RemoteEvent:FireServer(unpack(args))
                wait()
                if game.workspace.ResourceHolder["Resources_" .. game.Players.LocalPlayer.UserId]:FindFirstChild("CannonBall") then
                    game.workspace.ResourceHolder["Resources_" .. game.Players.LocalPlayer.UserId]:FindFirstChild("CannonBall").CanCollide = false
                end
            end
        end)
    end
end)

spawn(function() -- autofarm velocity
    while wait(0) do
        pcall(function()
            if _G.CampDark or getgenv().vtt or getgenv().farmslowstats or getgenv().farmstats or _G.CampVamp or _G.autocannonplr or _G.CampLight or _G.CampMagma or _G.autocannonslow or _G.autocannonplr or getgenv().bgtyhn or getgenv().fishing or getgenv().tret or getgenv().e or getgenv().c or getgenv().a or getgenv().t or getgenv().emladepnwwhat or getgenv().emladepnhat then
                if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
                    local Noclip = Instance.new("BodyVelocity")
                    Noclip.Name = "BodyClip"
                    Noclip.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                    Noclip.MaxForce = Vector3.new(100000,100000,100000)
                    Noclip.Velocity = Vector3.new(0,0,0)
                end
                game.Players.LocalPlayer.Character.Humanoid.JumpPower = 0
            elseif _G.CampDark == false or getgenv().vtt == false or getgenv().farmslowstats == false or _G.CampVamp == false or getgenv().farmstats == false or _G.autocannonplr == false or _G.CampLight == false or _G.CampMagma == false or _G.autocannonslow == false or _G.autocannonplr == false or getgenv().bgtyhn == false or getgenv().fishing == false or getgenv().tret == false or  getgenv().e == false or getgenv().c == false or getgenv().a == false or getgenv().t == false or getgenv().emladepnwwhat == false or getgenv().emladepnhat == false then
                --if game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
                game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip"):Destroy()
                wait(1)
                --end
                game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
            end
        end)
    end
end)

spawn(function()
    while task.wait() do
        pcall(function()
            if _G.autocannonslow or _G.autocannonplrbring then
                repeat task.wait(0.2)
                    for i, v in pairs(game.workspace.ResourceHolder["Resources_" .. game.Players.LocalPlayer.UserId]:GetChildren()) do
                        if v.Name == "CannonBall" then
                            v.CFrame = CFrame.new(100, 3000, 800)
                            v.CanCollide = false
                        end
                    end
                until _G.autocannonplrbring == false and _G.autocannonslow == false or game.Players.LocalPlayer.Character.Humanoid.Health == 0
            end
        end)
    end
end)

spawn(function() -- autofarm cannon
    while wait() do
        pcall(function()
            if _G.autocannonslow then
fireclickdetector(workspace.Island11.CentralBuilding.Doors.Button.Button.ClickDetector)
wait(5)
end
end)
end
end)

spawn(function() -- autofarm cannon
    while wait() do
        pcall(function()
            if _G.autocannonslow then
                for _,v in pairs(game.Workspace.Enemies:GetChildren()) do
                    if string.find(v.Name, " Boar")
                    and v:FindFirstChild("HumanoidRootPart") then
                        v.HumanoidRootPart.CanCollide = false
                    	v.HumanoidRootPart.Size = Vector3.new(1000, 1000, 1000)
                        v:FindFirstChild("HumanoidRootPart").Anchored = true
                        v:FindFirstChild("HumanoidRootPart").CFrame = CFrame.new(100, 3000, 800)
                        v.HumanoidRootPart.Color = Color3.fromRGB(0, 255, 127)
                        v.HumanoidRootPart.Transparency = 0.9
                        if v.Humanoid.Health == 0 then
                            v.HumanoidRootPart.Size = Vector3.new(0, 0, 0)
                            v:Destroy()
                        end
                     end
                end
                for _,v in pairs(game.Workspace.Enemies:GetChildren()) do
                    if string.find(v.Name, "Crab")
                    and v:FindFirstChild("HumanoidRootPart") then
                        v.HumanoidRootPart.CanCollide = false
                    	v.HumanoidRootPart.Size = Vector3.new(1000, 1000, 1000)
                        v.HumanoidRootPart.Color = Color3.fromRGB(0, 255, 127)
                        v.HumanoidRootPart.Transparency = 0.9
                        v:FindFirstChild("HumanoidRootPart").Anchored = true
                        v:FindFirstChild("HumanoidRootPart").CFrame = CFrame.new(100, 3000, 800)
                        if v.Humanoid.Health == 0 then
                            v.HumanoidRootPart.Size = Vector3.new(0, 0, 0)
                            v:Destroy()
                        end
                     end
                end
                for _,v in pairs(game.Workspace.Enemies:GetChildren()) do
                    if string.find(v.Name, "Angry") 
                    or string.find(v.Name, "Bandit") 
                    or string.find(v.Name, "Thief")
                    or string.find(v.Name, "Bruno") 
                    or string.find(v.Name, "Bucky") 
                    or string.find(v.Name, "Vokun") 
                    or string.find(v.Name, "Fr")  
                    or string.find(v.Name, "Cave") 
                    or string.find(v.Name, "Thug") 
                    or string.find(v.Name, "Gunslinger")
                    or string.find(v.Name, "Gunner") 
                    or string.find(v.Name, "Buster") 
                    and v:FindFirstChild("HumanoidRootPart") then
                        v.HumanoidRootPart.CanCollide = false
                    	v.HumanoidRootPart.Size = Vector3.new(1000, 1000, 1000)
                        v:FindFirstChild("HumanoidRootPart").Anchored = true
                        v:FindFirstChild("HumanoidRootPart").CFrame = CFrame.new(100, 3000, 800)
                        if v.Humanoid.Health == 0 then
                            v.HumanoidRootPart.Size = Vector3.new(0, 0, 0)
                            v:Destroy()
                        end
                        if v.Humanoid.Health == 0 then
                            v.HumanoidRootPart.Size = Vector3.new(0, 0, 0)
                            v:Destroy()
                        end
                    end
                end
            end
        end)
    end
end)

spawn(function()
while wait() do
pcall(function()
if _G.autocannonplr then wait()
pcall(function()
repeat wait()
_G.chon2 = true
wait(5)
_G.chon2 = false
wait()
until _G.autocannonplr == false
_G.chon2 = false
end)
end
end)
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.chon2 then
wait()
for i,v in pairs(game.Players:GetChildren()) do
	if v.Name ~= game.Players.LocalPlayer.Name then
		for i,c in pairs(game.Workspace:GetChildren()) do
			if c.Name == v.Name and c.HumanoidRootPart.Position.Y < 211000 and c.Humanoid.Health > 0 then
Choose2 = c.Name
	pcall(function()
                repeat task.wait(0.2)
					for i, q in pairs(game.workspace.ResourceHolder["Resources_" .. game.Players.LocalPlayer.UserId]:GetChildren()) do
                      				if q.Name == "CannonBall" then
                          			q.CFrame = c.HumanoidRootPart.CFrame
                           			q.CanCollide = false
						end
					end
until _G.chon2 == false or c.HumanoidRootPart.Position.Y > 211000 or c.Name ~= v.Name or c.Humanoid.Health == 0
Choose2 = ""
	end)

			end
		end
	end
end

end
end)
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.chon2 then
wait()
for i,d in pairs(game.Players:GetChildren()) do
	if d.Name ~= game.Players.LocalPlayer.Name then
		for i,b in pairs(game.Workspace:GetChildren()) do
			if b.Name == d.Name and b.HumanoidRootPart.Position.Y < 211000 and b.Humanoid.Health > 0 and b.Name ~= Choose2 then
Choose3 = b.Name
	pcall(function()
                repeat task.wait(0.22)
					for i, e in pairs(game.workspace.ResourceHolder["Resources_" .. game.Players.LocalPlayer.UserId]:GetChildren()) do
                      				if e.Name == "CannonBall" then
                          			e.CFrame = b.HumanoidRootPart.CFrame
                           			e.CanCollide = false
						end
					end
until _G.chon2 == false or b.HumanoidRootPart.Position.Y > 211000 or b.Name ~= d.Name or b.Humanoid.Health == 0
Choose3 = ""
	end)

			end
		end
	end
end

end
end)
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.chon2 then
wait()
for i,f in pairs(game.Players:GetChildren()) do
	if f.Name ~= game.Players.LocalPlayer.Name then
		for i,h in pairs(game.Workspace:GetChildren()) do
			if h.Name == f.Name and h.HumanoidRootPart.Position.Y < 211000 and h.Humanoid.Health > 0 and h.Name ~= Choose2 and h.Name ~= Choose3 then
Choose4 = h.Name
	pcall(function()
                repeat task.wait(0.24)
					for i, w in pairs(game.workspace.ResourceHolder["Resources_" .. game.Players.LocalPlayer.UserId]:GetChildren()) do
                      				if w.Name == "CannonBall" then
                          			w.CFrame = h.HumanoidRootPart.CFrame
                           			w.CanCollide = false
						end
					end
until _G.chon2 == false or h.HumanoidRootPart.Position.Y > 211000 or h.Name ~= f.Name or h.Humanoid.Health == 0
Choose4 = ""
	end)

			end
		end
	end
end

end
end)
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.chon2 then
wait()
for i,g in pairs(game.Players:GetChildren()) do
	if g.Name ~= game.Players.LocalPlayer.Name then
		for i,j in pairs(game.Workspace:GetChildren()) do
			if j.Name == g.Name and j.HumanoidRootPart.Position.Y < 211000 and j.Humanoid.Health > 0 and j.Name ~= Choose2 and j.Name ~= Choose3 and j.Name ~= Choose4 then
Choose5 = j.Name
	pcall(function()
                repeat task.wait(0.26)
					for i, t in pairs(game.workspace.ResourceHolder["Resources_" .. game.Players.LocalPlayer.UserId]:GetChildren()) do
                      				if t.Name == "CannonBall" then
                          			t.CFrame = j.HumanoidRootPart.CFrame
                           			t.CanCollide = false
						end
					end
until _G.chon2 == false or j.HumanoidRootPart.Position.Y > 211000 or j.Name ~= g.Name or j.Humanoid.Health == 0
Choose5 = ""
	end)

			end
		end
	end
end

end
end)
end
end)

local Autorj = Tabs.Automatic:AddSection("General Function")
local AutorjToggle = Tabs.Automatic:AddToggle("Autorj1Toggle", {Title = "Auto Hop Server If Disconnect", Default = false })
    AutorjToggle:OnChanged(function()
if Options.Autorj1Toggle.Value == true then
_G.autorj = true
Fluent:Notify({
    Title = "Auto Function Notify",
    Content = "Auto Reconnect Is Turned On",
    Duration = 5
})
else
_G.autorj = false
Fluent:Notify({
    Title = "Auto Function Notify",
    Content = "Auto Reconnect Is Turned Off",
    Duration = 5
})
end
end)

spawn(function()
while wait() do
if _G.autorj then
pcall(function()
if game.CoreGui.RobloxPromptGui.promptOverlay.Active == true then
TeleportService = game:GetService("TeleportService")
HttpService = game:GetService("HttpService")
PlaceId, JobId = game.PlaceId, game.JobId
httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
	if httprequest then
		httprequest({
			Url = 'http://127.0.0.1:6463/rpc?v=1',
			Method = 'POST',
			Headers = {
				['Content-Type'] = 'application/json',
				Origin = 'https://discord.com'
			},
			Body = HttpService:JSONEncode({
				cmd = 'INVITE_BROWSER',
				nonce = HttpService:GenerateGUID(false),
				args = {code = 'dYHag43eeU'}
			})
		})
	end   
 if httprequest then
        local servers = {}
        local req = httprequest({Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true", PlaceId)})
        local body = HttpService:JSONDecode(req.Body)

        if body and body.data then
            for i, v in next, body.data do
                if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
                    table.insert(servers, 1, v.id)
                end
            end
        end

        if #servers > 0 then
            TeleportService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], game.Players.LocalPlayer)
        else
            return notify("Serverhop", "Couldn't find a server.")
        end
    else
        notify("Incompatible Exploit", "Your exploit does not support this command (missing request)")
    end          

end
end)
end
end
end)

local Autospawn = Tabs.Automatic:AddSection("In-Game Function")
local AutospawnToggle = Tabs.Automatic:AddToggle("Autospawn1Toggle", {Title = "Auto Spawn", Default = false })
    AutospawnToggle:OnChanged(function()
if Options.Autospawn1Toggle.Value == true then
_G.autospawn = true
Fluent:Notify({
    Title = "Auto Function Notify",
    Content = "Auto Spawn Is Turned On",
    Duration = 5
})
else
_G.autospawn = false
Fluent:Notify({
    Title = "Auto Function Notify",
    Content = "Auto Spawn Is Turned Off",
    Duration = 5
})
end
end)

        spawn(function()
            while wait() do
                if _G.autospawn then
                    pcall(function()
                        if game:GetService("Players").LocalPlayer.PlayerGui.Load.Frame.Visible == true then
                            repeat wait(4)
                                for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Load.Frame.Load.MouseButton1Click)) do
                                    v.Function()
                                end
                            until game:GetService("Players").LocalPlayer.PlayerGui.Load.Frame.Visible == false
                        end
                    end)
                end
            end
	end)

local AutogetexpToggle = Tabs.Automatic:AddToggle("Autogetexp1Toggle", {Title = "Auto Get Expertise", Default = false })
    AutogetexpToggle:OnChanged(function()
if Options.Autogetexp1Toggle.Value == true then
_G.autogetexp = true
Fluent:Notify({
    Title = "Auto Function Notify",
    Content = "Auto Get Expertise Quest Is Turned On",
    Duration = 5
})
else
_G.autogetexp = false
Fluent:Notify({
    Title = "Auto Function Notify",
    Content = "Auto Get Expertise Quest Is Turned Off",
    Duration = 5
})
end
end)

local autoclaimchal = Tabs.Automatic:AddToggle("autoclaimchalToggle", {Title = "Auto Claim Challenge", Default = false })
    autoclaimchal:OnChanged(function()
if Options.autoclaimchalToggle.Value == true then
_G.autochallenge = true
Fluent:Notify({
    Title = "Auto Function Notify",
    Content = "Auto Claim Challenge Is Turned On",
    Duration = 5
})
else
_G.autochallenge = false
Fluent:Notify({
    Title = "Auto Function Notify",
    Content = "Auto Claim Challenge Is Turned Off",
    Duration = 5
})
end
end)

spawn(function()
while wait() do
if _G.autochallenge then
pcall(function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
local plr = tostring(game.Players.LocalPlayer)
if game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_1"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Daily1")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_2"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Daily2")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_3"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Daily3")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.DailyFrame.ScrollingFrame["Challenge_4"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Daily4")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.WeeklyFrame.ScrollingFrame["Challenge_1"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Weekly1")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.WeeklyFrame.ScrollingFrame["Challenge_2"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Weekly2")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.WeeklyFrame.ScrollingFrame["Challenge_3"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Weekly3")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.MonthlyFrame.ScrollingFrame["Challenge_1"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Monthly1")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.MonthlyFrame.ScrollingFrame["Challenge_2"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Monthly2")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_1"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Challenge1")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_2"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Challenge2")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_3"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Challenge3")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_4"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Challenge4")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_6"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Challenge6")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_7"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Challenge7")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_8"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Challenge8")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_9"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Challenge9")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_10"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Challenge10")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_11"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Challenge11")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_12"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Challenge12")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_13"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Challenge13")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_14"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Challenge14")
end
end)
end
end
end)





        spawn(function()
            while wait() do
                if _G.autogetexp then
                    pcall(function()
workspace:WaitForChild("Merchants"):WaitForChild("ExpertiseMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer()
wait(5)
                    end)
                end
            end
	end)


local Usefull11 = Tabs.Teleport:AddSection("Useful Teleport")
local randomtp = Tabs.Teleport:AddToggle("randomtptoggle", {Title = "Random Teleport", Default = false })
randomtp:OnChanged(function()
if Options.randomtptoggle.Value == true then
getgenv().banana = true
else
getgenv().bgtyhn = false
getgenv().banana = false
end
end)

local tpsafeplate = Tabs.Teleport:AddToggle("tpsafeplatetoggle", {Title = "Auto Teleport Safe Zone", Default = false })
tpsafeplate:OnChanged(function()
if Options.tpsafeplatetoggle.Value == true then
getgenv().vtt = true
else
getgenv().vtt = false
getgenv().tprandom = false
end
end)

local chairrr = Tabs.Teleport:AddToggle("chairrrtoggle", {Title = "Auto Teleport Chair", Default = false })
chairrr:OnChanged(function()
if Options.chairrrtoggle.Value == true then
getgenv().chawq = true
else
getgenv().chawq = false
getgenv().tpchaiq = false
end
end)

spawn(function()
while wait() do
if getgenv().chawq then
pcall(function()
if not game.Players.LocalPlayer.Character:FindFirstChild("Compass") then
getgenv().tpchaiq = true
else
getgenv().tpchaiq = false
if game.Players.LocalPlayer.Character:FindFirstChild("Compass") and game.Players.LocalPlayer.Character.Humanoid.Sit == true then
game.Players.LocalPlayer.Character.Humanoid.Sit = false
end
end
end)
end
end
end)

spawn(function()
while wait() do
if getgenv().tpchaiq then
pcall(function()
repeat task.wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Island8.Table.Chair.Seat.CFrame * CFrame.new(0, -1, 0)
until not getgenv().tpchaiq or game.Players.LocalPlayer.Character.Humanoid.Sit == true
end)
end
end
end)



spawn(function()
while wait() do
if getgenv().vtt then
pcall(function()
if not game.Players.LocalPlayer.Character:FindFirstChild("Compass") then
getgenv().tprandom = true
else
getgenv().tprandom = false
end
end)
end
end
end)

spawn(function()
while wait() do
if getgenv().tprandom then
pcall(function()
repeat task.wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["SafeZoneOuterSpacePart"].CFrame * CFrame.new(0, 5, 0)
until not getgenv().tprandom
end)
end
end
end)

spawn(function()
while wait() do
if getgenv().banana then
pcall(function()
if not game.Players.LocalPlayer.Character:FindFirstChild("Compass") then
getgenv().bgtyhn = true
else
getgenv().bgtyhn = false
end
end)
end
end
end)


spawn(function()
while wait() do
if getgenv().bgtyhn then
pcall(function()
repeat task.wait()
if not game.Players.LocalPlayer.Character:FindFirstChild("Compass") or not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass") then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new((math.random(-50000, 50000)), 10000, (math.random(-50000, 50000)))
end
until not getgenv().bgtyhn
end)
end
end
end)

local Safe = Tabs.Teleport:AddSection("Special Teleport")

Tabs.Teleport:AddButton({
        Title = "Teleport To Safe Zone",
        Description = "(A high platform)",
        Callback = function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["SafeZoneOuterSpacePart"].CFrame * CFrame.new(0, 5, 0)
        end
    })

Tabs.Teleport:AddButton({
        Title = "Teleport To Rayleigh",
        Description = "Check and teleport to Rayleigh if he spawns",
        Callback = function()
if game:GetService("Workspace").Merchants.QuestHakiMerchant.Clickable.Available.Value == true then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.QuestHakiMerchant.HumanoidRootPart.CFrame
else
Fluent:Notify({
    Title = "Rayleigh Notify",
    Content = "Rayleigh hasn't spawned yet",
    Duration = 4
})
end
        end
    })

Tabs.Teleport:AddButton({
        Title = "Teleport To Dark Atlas",
        Description = "(Legendary Pedestal)",
        Callback = function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.Altar.RecepticalEffect.CFrame * CFrame.new(0, 0, 0)
        end
    })

local Tmrt = Tabs.Teleport:AddSection("Teleport")

local MobsTP = Tabs.Teleport:AddDropdown("MobsTPdr", {
        Title = "NPC Teleport",
        Values = {"Bartender (Sam)", "Bartender (Bar)", "Sam", "Friend", "Cannon Seller", "Krizma Seller", "Flair Seller", "Sword Seller", "Gun Seller", "Merlin", "Emotes Teacher", "Lucy (Affinity)", "Chef", "Expertise Giver"},
        Multi = false,
        Default = "",
    })


    MobsTP:OnChanged(function(Mobbb)
if Mobbb == "Bartender (Sam)" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.DrinkMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Bartender (Bar)" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.BetterDrinkMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Sam" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.QuestMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Friend" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.FriendMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Cannon Seller" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.HeavyWeaponsMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Krizma Seller" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.KrizmaMerch.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Flair Seller" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.FlailMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Sword Seller" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.SwordMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Gun Seller" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.SniperMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Merlin" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.QuestFishMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Emotes Teacher" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.EmoteMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Lucy (Affinity)" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.AffinityMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Chef" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.FishMerchant.HumanoidRootPart.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
elseif Mobbb == "Expertise Giver" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Merchants.ExpertiseMerchant.Head.CFrame
Fluent:Notify({
    Title = "Teleport Notify",
    Content = "Teleported to " ..Mobbb,
    Duration = 1
})
end
end)


local Wep = Tabs.Weapon:AddSection("Equipment")
local weapontype = Tabs.Weapon:AddDropdown("tanglunroie11", {
        Title = "Select Weapon Type",
        Values = {"Melee","Sniper","Sword","Utility"},
        Multi = false,
        Default = "",
    })


    weapontype:OnChanged(function(wtypea)
_G.weponity = wtypea
end)

local equipwe = Tabs.Weapon:AddToggle("equipwetoggle", {Title = "Auto Equip Weapon", Default = false })
equipwe:OnChanged(function()
if Options.equipwetoggle.Value == true then
getgenv().eqqqqq = true
else
getgenv().eqqqqq = false
end
end)

local attackweapon = Tabs.Weapon:AddToggle("attackweapontoggle", {Title = "Auto Use Weapon", Default = false })
attackweapon:OnChanged(function()
if Options.attackweapontoggle.Value == true then
getgenv().useweapon = true
else
getgenv().useweapon = false
end
end)

local MeleeTTT = {
"Melee",
"Table Kick",
"Black Leg",
"Seastone Cestus",
"Aqua Staff"
}

local SniperTTT = {
"Slingshot",
"Stars",
"Crossbow",
"Flintlock",
"Cannon Ball"
}

local SwordTTT = {
"Dagger",
"Wakizashi",
"Tachi",
"Katana",
"Flail",
"Krizma",
"Kogatana",
"Yoru",
"Golden Fish",
"Ultra Great Sword",
"Masamune",
"Candy Cane Yoru",
"Divine Axe",
"Kanshou and Byakuya",
"Scissor Blade",
"Lightning Sword",
"Meteorite Sword"
}

local UtilityTTT = {
"Wood Rod",
"Sturdy Rod",
"Super Rod",
"Zombie Head",
"Tea Cup",
"Santa Bag",
"Tea Kettle"
}

spawn(function()
while wait() do
pcall(function()
if getgenv().useweapon then
pcall(function()
for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do


for i,c in pairs(MeleeTTT) do
if v.Name == c then
v:Activate()
end
end

for i,d in pairs(SniperTTT) do
if v.Name == d then
v:Activate()
end
end

for i,e in pairs(SwordTTT) do
if v.Name == e then
v:Activate()
end
end

for i,f in pairs(UtilityTTT) do
if v.Name == f then
v:Activate()
end
end


end
end)
end
end)
end
end)

spawn(function()
while wait() do
pcall(function()
if getgenv().eqqqqq then
pcall(function()
if _G.weponity == "Melee" then


for _, c in pairs(MeleeTTT) do
if game.Players.LocalPlayer.Backpack:FindFirstChild(c) then
local x = game.Players.LocalPlayer.Backpack:FindFirstChild(c)
game.Players.LocalPlayer.Character.Humanoid:EquipTool(x)
end
end

elseif _G.weponity == "Sniper" then

for _, c in pairs(SniperTTT) do
if game.Players.LocalPlayer.Backpack:FindFirstChild(c) then
local x = game.Players.LocalPlayer.Backpack:FindFirstChild(c)
game.Players.LocalPlayer.Character.Humanoid:EquipTool(x)
end
end

elseif _G.weponity == "Sword" then

for _, c in pairs(SwordTTT) do
if game.Players.LocalPlayer.Backpack:FindFirstChild(c) then
local x = game.Players.LocalPlayer.Backpack:FindFirstChild(c)
game.Players.LocalPlayer.Character.Humanoid:EquipTool(x)
end
end

elseif _G.weponity == "Utility" then

for _, c in pairs(UtilityTTT) do
if game.Players.LocalPlayer.Backpack:FindFirstChild(c) then
local x = game.Players.LocalPlayer.Backpack:FindFirstChild(c)
game.Players.LocalPlayer.Character.Humanoid:EquipTool(x)
end
end



end
end)
end
end)
end
end)


local InstantWeapon = Tabs.Weapon:AddSection("Instant Weapon")
local Yorusec = Tabs.Weapon:AddSection("Yoru Spam")
local YoruSpeed = Tabs.Weapon:AddSlider("Yorusli", {
    Title = "Yoru Speed",
    Description = "Change this for adjusting Yoru's speed",
    Default = 50,
    Min = 1,
    Max = 100,
    Rounding = 0,
    Callback = function(to)
            Speeds = tonumber(to)
        end
    })

local YoruMulti = Tabs.Weapon:AddSlider("Yorumilsz", {
    Title = "Yoru Multi Hit",
    Description = "Change this for adjusting Yoru's hits",
    Default = 200,
    Min = 1,
    Max = 999,
    Rounding = 0,
    Callback = function(hitsss)
            hitts = tonumber(hitsss)
        end
    })

local tyoru = Tabs.Weapon:AddToggle("tyorutoggle", {Title = "Yoru Spamming", Default = false })
tyoru:OnChanged(function()
if Options.tyorutoggle.Value == true then
_G.yoruonrt = true
else
_G.yoruonrt = false
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.yoruonrt then
pcall(function()
    local Players = game:GetService("Players")
    local Plr = Players.LocalPlayer
    local Character = Plr.Character
    local Yoru = Character:FindFirstChild("Yoru")
    local Environment

for i = 1, Speeds do wait()
if _G.yoruonrt then

pcall(function()
for i,v in pairs(getconnections(Yoru["RequestAnimation"].OnClientEvent)) do 
    Environment = getsenv(Yoru["AnimationController"])
end
wait()
for i = 1, hitts do
Yoru["RequestAnimation"]:FireServer(Environment.PlaceId)
end
wait()
end)

end
end

end)
end
end)
end
end)

local Cestussec = Tabs.Weapon:AddSection("Cestus Spam")
local CestusSpeed = Tabs.Weapon:AddSlider("cestussli", {
    Title = "Cestus Speed",
    Description = "Change this for adjusting Seastone Cestus's speed",
    Default = 50,
    Min = 1,
    Max = 200,
    Rounding = 0,
    Callback = function(too)
            Speedss = tonumber(too)
        end
    })

local CestusMulti = Tabs.Weapon:AddSlider("cesmulza", {
    Title = "Cestus Multi Hit",
    Description = "Change this for adjusting Cestus's hits",
    Default = 200,
    Min = 1,
    Max = 999,
    Rounding = 0,
    Callback = function(hitsssces)
            hittsces = tonumber(hitsssces)
        end
    })

local tcestus = Tabs.Weapon:AddToggle("tcestustoggle", {Title = "Cestus Spamming", Default = false })
tcestus:OnChanged(function()
if Options.tcestustoggle.Value == true then
_G.cestusonrt = true
else
_G.cestusonrt = false
end
end)


spawn(function()
while wait() do
pcall(function()
if _G.cestusonrt then
pcall(function()
    local Players = game:GetService("Players")
    local Plr = Players.LocalPlayer
    local Character = Plr.Character
    local Cestus = Character:FindFirstChild("Seastone Cestus")
    local Environment
for i = 1, Speedss do wait()
if _G.cestusonrt then
pcall(function()
for i,v in pairs(getconnections(Cestus["RequestAnimation"].OnClientEvent)) do 
    Environment = getsenv(Cestus["AnimationController"])
end
    wait()
for i = 1, hittsces do
Cestus["RequestAnimation"]:FireServer(Environment.PlaceId)
end
wait()
end)

end
end

end)
end
end)
end
end)

local StatsFF = Tabs.Main:AddSection("Stats Farming")
local statsfarm = Tabs.Main:AddToggle("statstoggle", {Title = "Auto Farm Mixer (Fast)", Default = false })
statsfarm:OnChanged(function()
if Options.statstoggle.Value == true then
getgenv().farmstats = true
else
getgenv().farmstats = false
end
end)

local statsfarmslow = Tabs.Main:AddToggle("statsfarmslowtoggle", {Title = "Auto Farm Mixer (Normal)", Default = false })
statsfarmslow:OnChanged(function()
if Options.statsfarmslowtoggle.Value == true then
getgenv().farmslowstats = true
else
getgenv().farmslowstats = false
end
end)

local statsdrink = Tabs.Main:AddToggle("statsdrinktoggle", {Title = "Auto Drink Mixer", Default = false })
statsdrink:OnChanged(function()
if Options.statsdrinktoggle.Value == true then
getgenv().autodrinkmixer = true
else
getgenv().autodrinkmixer = false
end
end)

spawn(function()
while wait(0.3) do
if getgenv().autodrinkmixer then
pcall(function()
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
if v:IsA("Tool") and string.find(v.Name, "Juice") or string.find(v.Name, "Milk") or string.find(v.Name, "Cider") or string.find(v.Name, "Lemonade") or string.find(v.Name, "Smoothie") or string.find(v.Name, "Golden") then
game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
v:Activate()
end
end
for i,c in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
if string.find(c.Name, "Crab") then
c:Destroy()
end
end
end)
end
end
end)




spawn(function()
while wait() do
if getgenv().farmstats or getgenv().farmslowstats then
pcall(function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
local plr = tostring(game.Players.LocalPlayer)
repeat task.wait(1)
if game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_13"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Challenge13")
elseif game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_14"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Challenge14")
end
until not getgenv().farmstats and not getgenv().farmslowstats
end)
end
end
end)

function amongus()
for i,v in pairs(game:GetService("Workspace").Barrels:GetDescendants()) do
if v:IsA("ClickDetector") then
fireclickdetector(v)
end
end
for i,v in pairs(game:GetService("Workspace").Island8.Kitchen:GetDescendants()) do
if v:IsA("ClickDetector") then
fireclickdetector(v)
end
end
end

spawn(function()
while task.wait() do
if getgenv().farmstats then
pcall(function()
local user = tostring(game.Players.LocalPlayer.Name)
repeat task.wait()
for i,v in pairs(game:GetService("Workspace").Barrels.Barrels:GetDescendants()) do
if v.Name == "Barrel" and getgenv().farmstats == true and not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass") then
game.workspace[""..user].HumanoidRootPart.CFrame = v.CFrame + Vector3.new(0, 5, 0)
amongus()
end
task.wait()
end
for i,v in pairs(game:GetService("Workspace").Barrels:GetDescendants()) do
if v.Name == "Crate" and getgenv().farmstats == true and not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass") then
game.workspace[""..user].HumanoidRootPart.CFrame = v.CFrame + Vector3.new(0, 5, 0)
amongus()
end
task.wait()
end
if getgenv().farmstats == true and not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass") then task.wait()
game.workspace[""..user].HumanoidRootPart.CFrame = game:GetService("Workspace")["SafeZoneOuterSpacePart"].CFrame * CFrame.new(0, 5, 0)
amongus()
workspace:WaitForChild("Merchants"):WaitForChild("FishMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer()
end
task.wait(15)
until not getgenv().farmstats or game.Players.LocalPlayer.Character.Humanoid.Health == 0
end)
end
end
end)

spawn(function()
while task.wait() do
if getgenv().farmslowstats then
pcall(function()
local user = tostring(game.Players.LocalPlayer.Name)
repeat task.wait()
for i,v in pairs(game:GetService("Workspace").Barrels.Barrels:GetDescendants()) do
if v.Name == "Barrel" and getgenv().farmslowstats == true and not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass") then
game.workspace[""..user].HumanoidRootPart.CFrame = v.CFrame + Vector3.new(0, 5, 0)
amongus()
end
task.wait(0.1)
end
for i,v in pairs(game:GetService("Workspace").Barrels:GetDescendants()) do
if v.Name == "Crate" and getgenv().farmslowstats == true and not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass") then
game.workspace[""..user].HumanoidRootPart.CFrame = v.CFrame + Vector3.new(0, 5, 0)
amongus()
end
task.wait(0.1)
end
if getgenv().farmslowstats == true and not game.Players.LocalPlayer.Backpack:FindFirstChild("Compass") then task.wait()
game.workspace[""..user].HumanoidRootPart.CFrame = game:GetService("Workspace")["SafeZoneOuterSpacePart"].CFrame * CFrame.new(0, 5, 0)
amongus()
workspace:WaitForChild("Merchants"):WaitForChild("FishMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer()
end
task.wait(15)
until not getgenv().farmslowstats or game.Players.LocalPlayer.Character.Humanoid.Health == 0
end)
end
end
end)

local HakiSection = Tabs.Haki:AddSection("Haki Stuff")
local gethaki = Tabs.Haki:AddToggle("hakiget", {Title = "Auto get haki (1k lvl)", Default = false })
gethaki:OnChanged(function()
if Options.hakiget.Value == true then
_G.gethakiqwe = true
else
_G.gethakiqwe = false
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.gethakiqwe then
pcall(function()
workspace:WaitForChild("Merchants"):WaitForChild("QuestHakiMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer()
wait(2)
end)
end
end)
end
end)


Tabs.Haki:AddButton({
        Title = "Drain Haki",
        Description = "Click To Drain Haki To 0",
        Callback = function()
function hakiauto()
       local Players = game:GetService("Players")
    local cache = {}
    function lol(name)
        if cache[name] then return cache[name] end
        local player = Players:FindFirstChild(name)
        if player then
            cache[name] = player.UserId
            return player.UserId
        end 
    
        local id
        pcall(function ()
            id = Players:lol(name)
        end)
        cache[name] = id
        return id
    end
    local ehh = game.Players.LocalPlayer.Name
    local Final = lol(ehh)
    
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    
    
    
    end
wait()
for i = 1, 10 do
        hakiauto()
end
end
    })

local hakirjoin = Tabs.Haki:AddToggle("hakirjointoggle", {Title = "Rejoin If 0% Haki", Default = false })
hakirjoin:OnChanged(function()
if Options.hakirjointoggle.Value == true then
_G.rejoinifhaki0 = true
else
_G.rejoinifhaki0 = false
end
end)

spawn(function()
while wait() do
if _G.rejoinifhaki0 then
pcall(function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
if game.Workspace.UserData["User_"..plrid].HakiBar.Value == 0 then
game.Players.LocalPlayer:Kick("Hoping Server, Please Wait...")
TeleportService = game:GetService("TeleportService")
HttpService = game:GetService("HttpService")
PlaceId, JobId = game.PlaceId, game.JobId
httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
	if httprequest then
		httprequest({
			Url = 'http://127.0.0.1:6463/rpc?v=1',
			Method = 'POST',
			Headers = {
				['Content-Type'] = 'application/json',
				Origin = 'https://discord.com'
			},
			Body = HttpService:JSONEncode({
				cmd = 'INVITE_BROWSER',
				nonce = HttpService:GenerateGUID(false),
				args = {code = 'dYHag43eeU'}
			})
		})
	end   
 if httprequest then
        local servers = {}
        local req = httprequest({Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true", PlaceId)})
        local body = HttpService:JSONDecode(req.Body)

        if body and body.data then
            for i, v in next, body.data do
                if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
                    table.insert(servers, 1, v.id)
                end
            end
        end

        if #servers > 0 then
            TeleportService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], game.Players.LocalPlayer)
        else
            return notify("Serverhop", "Couldn't find a server.")
        end
    else
        notify("Incompatible Exploit", "Your exploit does not support this command (missing request)")
    end          

end
end)
end
end
end)










local HakiSection2 = Tabs.Haki:AddSection("Auto Haki Farming")
local hakitargett = Tabs.Haki:AddSlider("hakitarsli", {
    Title = "Haki Target (%)",
    Description = "Change this for adjusting haki's target",
    Default = 55,
    Min = 1,
    Max = 90,
    Rounding = 0,
    Callback = function(gmm)
            hakitarget = tonumber(gmm)
        end
    })

local hakispeedt = Tabs.Haki:AddSlider("hakispeedsli", {
    Title = "Haki Speed",
    Description = "Change this for adjusting haki's speed",
    Default = 20,
    Min = 1,
    Max = 50,
    Rounding = 0,
    Callback = function(gttmm)
            hakispeed = tonumber(gttmm)
        end
    })

local farmhaki = Tabs.Haki:AddToggle("hakifarmtoggle", {Title = "Auto Farm Haki", Default = false })
farmhaki:OnChanged(function()
if Options.hakifarmtoggle.Value == true then
_G.farmhakinek = true
else
_G.farmhakinek = false
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.farmhakinek then
pcall(function()

local plrid = tostring(game.Players.LocalPlayer.UserId)
local plr = tostring(game.Players.LocalPlayer)
_G.concu = true
while _G.concu do wait()
local slv = game.workspace.UserData["User_"..plrid].Data.HakiLevel.Value
local sss = slv/100*hakitarget
local sll =  slv/100*90
if game.Workspace.UserData["User_"..plrid].HakiBar.Value > sss and _G.farmhakinek == true then
local Players = game:GetService("Players")
local cache = {}
function lol(name)
if cache[name] then
return cache[name] 
end
local player = Players:FindFirstChild(name)
if player then
cache[name] = player.UserId
return player.UserId
end 
    
local id
pcall(function ()
id = Players:lol(name)
end)
cache[name] = id
return id
end

local ehh = game.Players.LocalPlayer.Name
local Final = lol(ehh)
for i = 1, hakispeed do
    local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
    local args = {
        [1] = "On",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
end
elseif game.Workspace.UserData["User_"..plrid].HakiBar.Value <= sss and _G.farmhakinek == true then
        local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
repeat task.wait()
until game.Workspace.UserData["User_"..plrid].HakiBar.Value >= sll
_G.concu = true
elseif _G.farmhakinek == false then
_G.concu = false
        local args = {
        [1] = "Off",
        [2] = 1
    }
    
    workspace.UserData["User_"..Final].III:FireServer(unpack(args))
end
end

end)
end
end)
end
end)

local HakiSection3 = Tabs.Haki:AddSection("Advanced Haki Farming")
local hakiadvancespeed = Tabs.Haki:AddSlider("advanceslihaki", {
    Title = "Advanced Haki Speed",
    Description = "Change Advanced Haki Speed",
    Default = 999,
    Min = 1,
    Max = 999,
    Rounding = 0,
    Callback = function(concacadvance)
            speedyadvance = tonumber(concacadvance)
        end
    })

local advaerqwe = Tabs.Haki:AddToggle("advaerqwetoggle", {Title = "Advance Haki Farming", Default = false })
advaerqwe:OnChanged(function()
if Options.advaerqwetoggle.Value == true then
_G.farmadvanced = true
else
_G.farmadvanced = false
end
end)

spawn(function()
while wait() do
pcall(function()
if _G.farmadvanced then
pcall(function()
local x = game.Players.LocalPlayer.UserId
local haki = game:GetService("Workspace").UserData["User_"..x].Data.HakiLevel.Value
wait(5)
for i = 1, speedyadvance do
            local args = {
                [1] = "On",
                [2] = haki
            }
            workspace:WaitForChild("UserData"):WaitForChild("User_" .. game.Players.LocalPlayer.UserId):WaitForChild("III"):FireServer(unpack(args))
            local args = {
                [1] = "Off",
                [2] = haki
            }

            workspace:WaitForChild("UserData"):WaitForChild("User_" .. game.Players.LocalPlayer.UserId):WaitForChild("III"):FireServer(unpack(args))
            
            local args = {
                [1] = "Off",
                [2] = haki
            }

            workspace:WaitForChild("UserData"):WaitForChild("User_" .. game.Players.LocalPlayer.UserId):WaitForChild("III"):FireServer(unpack(args))
            
            local args = {
                [1] = "On",
                [2] = haki
            }

            workspace:WaitForChild("UserData"):WaitForChild("User_" .. game.Players.LocalPlayer.UserId):WaitForChild("III"):FireServer(unpack(args))
            
            local args = {
                [1] = "Off",
                [2] = haki
            }

            workspace:WaitForChild("UserData"):WaitForChild("User_" .. game.Players.LocalPlayer.UserId):WaitForChild("III"):FireServer(unpack(args))
            
            local args = {
                [1] = "Off",
                [2] = haki
            }

            workspace:WaitForChild("UserData"):WaitForChild("User_" .. game.Players.LocalPlayer.UserId):WaitForChild("III"):FireServer(unpack(args))
            
            local args = {
                [1] = "On",
                [2] = haki
            }

            workspace:WaitForChild("UserData"):WaitForChild("User_" .. game.Players.LocalPlayer.UserId):WaitForChild("III"):FireServer(unpack(args))
            
            local args = {
                [1] = "Off",
                [2] = haki
            }

            workspace:WaitForChild("UserData"):WaitForChild("User_" .. game.Players.LocalPlayer.UserId):WaitForChild("III"):FireServer(unpack(args))
            
            local args = {
                [1] = "Off",
                [2] = haki
            }

            workspace:WaitForChild("UserData"):WaitForChild("User_" .. game.Players.LocalPlayer.UserId):WaitForChild("III"):FireServer(unpack(args))
            
            local args = {
                [1] = "On",
                [2] = haki
            }

            workspace:WaitForChild("UserData"):WaitForChild("User_" .. game.Players.LocalPlayer.UserId):WaitForChild("III"):FireServer(unpack(args))
            
            local args = {
                [1] = "Off",
                [2] = haki
            }

            workspace:WaitForChild("UserData"):WaitForChild("User_" .. game.Players.LocalPlayer.UserId):WaitForChild("III"):FireServer(unpack(args))
            
            local args = {
                [1] = "Off",
                [2] = haki
            }

            workspace:WaitForChild("UserData"):WaitForChild("User_" .. game.Players.LocalPlayer.UserId):WaitForChild("III"):FireServer(unpack(args))
            
            local args = {
                [1] = "On",
                [2] = haki
            }

            workspace:WaitForChild("UserData"):WaitForChild("User_" .. game.Players.LocalPlayer.UserId):WaitForChild("III"):FireServer(unpack(args))
            
            local args = {
                [1] = "Off",
                [2] = haki
            }

            workspace:WaitForChild("UserData"):WaitForChild("User_" .. game.Players.LocalPlayer.UserId):WaitForChild("III"):FireServer(unpack(args))
            
            local args = {
                [1] = "Off",
                [2] = haki
            }

            workspace:WaitForChild("UserData"):WaitForChild("User_" .. game.Players.LocalPlayer.UserId):WaitForChild("III"):FireServer(unpack(args))
end
end)
end
end)
end
end)

local info3 = Tabs.Server:AddSection("Discord")
Tabs.Server:AddParagraph({
Title = "Discord Information",
Content = "Discord Invite Link: https://discord.gg/ecpbhm8G3w"
})

Tabs.Server:AddButton({
        Title = "Discord Saluna Hub",
        Description = "Copy Discord Invite Link",
        Callback = function()
everyClipboard = toclipboard
function toClipboard(txt)
    if everyClipboard then
        everyClipboard(tostring(txt))
    end
end
toClipboard("https://discord.gg/ecpbhm8G3w")    
end
    })



local mgfrrr2 = Tabs.Server:AddSection("Rejoin/Hop")
    Tabs.Server:AddButton({
        Title = "Rejoin Server",
        Description = "Rejoin the current server",
        Callback = function()
            Window:Dialog({
                Title = "Rejoin Server",
                Content = "Do you want to use?",
                Buttons = {
                    {
                        Title = "OK",
                        Callback = function()
game.Players.LocalPlayer:Kick("Rejoining Server, Please Wait...")
game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
end
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
                        end
                    }
                }
            })
        end
    })

    Tabs.Server:AddButton({
        Title = "Hop Server",
        Description = "Hop to random server",
        Callback = function()
            Window:Dialog({
                Title = "Hop Server",
                Content = "Do you want to use?",
                Buttons = {
                    {
                        Title = "OK",
                        Callback = function()
game.Players.LocalPlayer:Kick("Hoping Server, Please Wait...")
TeleportService = game:GetService("TeleportService")
HttpService = game:GetService("HttpService")
PlaceId, JobId = game.PlaceId, game.JobId
httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
	if httprequest then
		httprequest({
			Url = 'http://127.0.0.1:6463/rpc?v=1',
			Method = 'POST',
			Headers = {
				['Content-Type'] = 'application/json',
				Origin = 'https://discord.com'
			},
			Body = HttpService:JSONEncode({
				cmd = 'INVITE_BROWSER',
				nonce = HttpService:GenerateGUID(false),
				args = {code = 'dYHag43eeU'}
			})
		})
	end   
 if httprequest then
        local servers = {}
        local req = httprequest({Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true", PlaceId)})
        local body = HttpService:JSONDecode(req.Body)

        if body and body.data then
            for i, v in next, body.data do
                if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
                    table.insert(servers, 1, v.id)
                end
            end
        end

        if #servers > 0 then
            TeleportService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], game.Players.LocalPlayer)
        else
            return notify("Serverhop", "Couldn't find a server.")
        end
    else
        notify("Incompatible Exploit", "Your exploit does not support this command (missing request)")
    end          
end
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
                        end
                    }
                }
            })
        end
    })

   Tabs.Server:AddButton({
        Title = "Low-Server Hop",
        Description = "Hop to a fewer players server",
        Callback = function()
            Window:Dialog({
                Title = "Low-Server Hop",
                Content = "Do you want to use?",
                Buttons = {
                    {
                        Title = "OK",
                        Callback = function()
game.Players.LocalPlayer:Kick("Hoping Server, Please Wait...")
            local PlaceID = game.PlaceId
            local AllIDs = {}
            local foundAnything = ""
            local actualHour = os.date("!*t").hour
            local Deleted = false
            function TPReturner()
                local Site;
                if foundAnything == "" then
                    Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
                else
                    Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
                end
                local ID = ""
                if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
                    foundAnything = Site.nextPageCursor
                end
                local num = 0;
                for i,v in pairs(Site.data) do
                    local Possible = true
                    ID = tostring(v.id)
                    if tonumber(v.maxPlayers) > tonumber(v.playing) then
                        for _,Existing in pairs(AllIDs) do
                            if num ~= 0 then
                                if ID == tostring(Existing) then
                                    Possible = false
                                end
                            else
                                if tonumber(actualHour) ~= tonumber(Existing) then
                                    local delFile = pcall(function()
                                        -- delfile("NotSameServers.json")
                                        AllIDs = {}
                                        table.insert(AllIDs, actualHour)
                                    end)
                                end
                            end
                            num = num + 1
                        end
                        if Possible == true then
                            table.insert(AllIDs, ID)
                            wait()
                            pcall(function()
                                -- writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                                wait()
                                game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                            end)
                            wait(.1)
                        end
                    end
                end
            end
            function Teleport() 
                while wait() do
                    pcall(function()
                        TPReturner()
                        if foundAnything ~= "" then
                            TPReturner()
                        end
                    end)
                end
            end
            Teleport()         
end
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
                        end
                    }
                }
            })
        end
    })

local af1 = Tabs.Affinity:AddSection("Roll Affinity 1st Devil Fruit")

local Lucyfirst = Tabs.Affinity:AddSlider("rollaff1sli", {
    Title = "1st Devil Fruit Point",
    Description = "Choose the point of affinity",
    Default = 2,
    Min = 1,
    Max = 2,
    Rounding = 1,
    Callback = function(treotttt)
            _G.trqpwo = tonumber(treotttt)
        end
    })


     local wrrrrr = Tabs.Affinity:AddDropdown("dqwww", {
        Title = "Lock Affinity (DF1)",
        Description = "You can choose affinities to lock.",
        Values = {"Defense", "Melee", "Sniper", "Sword"},
        Multi = true,
        Default = {""},
    })



    wrrrrr:OnChanged(function(Valuer)
_G.keepdef = false
_G.keepmelee = false
_G.keepsnip = false
_G.keepsword = false
local Values = {"None"}
wait()
        for Valuer, State in next, Valuer do
            table.insert(Values, Valuer)
        end
			for _, n in pairs(Values) do
if string.find(n, "Defense") then
_G.keepdef = true
end
if string.find(n, "Melee") then
_G.keepmelee = true
end
if string.find(n, "Sniper") then
_G.keepsnip = true
end
if string.find(n, "Sword") then
_G.keepsword = true
end
			end
end)


    local wwwwww = Tabs.Affinity:AddDropdown("dtqzxcwww", {
        Title = "Target Affinity (DF1)",
        Description = "You can choose the target affinity.",
        Values = {"Defense", "Melee", "Sniper", "Sword"},
        Multi = true,
        Default = {""},
    })

 
    wwwwww:OnChanged(function(Valuerr)
_G.targetdef = false
_G.targetmelee = false
_G.targetsnip = false
_G.targetsword = false
local Valuess = {"None"}
wait()
for Valuerr, State in next, Valuerr do
table.insert(Valuess, Valuerr)
end
for _, q in pairs(Valuess) do
if string.find(q, "Defense") then
_G.targetdef = true
end
if string.find(q, "Melee") then
_G.targetmelee = true
end
if string.find(q, "Sniper") then
_G.targetsnip = true
end
if string.find(q, "Sword") then
_G.targetsword = true
end
			end
end)

local ret = Tabs.Affinity:AddDropdown("vxe1", {
        Title = "Budget Type",
        Values = {"Cash", "Gems"},
        Multi = false,
        Default = "",
    })


    ret:OnChanged(function(Valuezx)
_G.budget = Valuezx
end)

local DF11Toggle = Tabs.Affinity:AddToggle("DF1Toggle", {Title = "Auto Roll Affinity (DF1)", Default = false })
    DF11Toggle:OnChanged(function(gg)


while Options.DF1Toggle.Value do wait()
pcall(function()
if Options.DF1Toggle.Value == true then
_G.quayfirstdf = true
else
_G.quayfirstdf = false
end
local plrid = tostring(game.Players.LocalPlayer.UserId)
local plr = tostring(game.Players.LocalPlayer)
if _G.targetdef == true and _G.targetsnip == false and _G.targetmelee == false and _G.targetsword == false and workspace.UserData["User_"..plrid].Data.DFT1Defense.Value < _G.trqpwo then
_G.defspin = true
else
_G.defspin = false
end
if _G.targetmelee == true and _G.targetdef == false and _G.targetsword == false and _G.targetsnip == false and workspace.UserData["User_"..plrid].Data.DFT1Melee.Value < _G.trqpwo then
_G.meleespin = true
else
_G.meleespin = false
end
if _G.targetsnip == true and _G.targetdef == false and _G.targetmelee == false and _G.targetsword == false and workspace.UserData["User_"..plrid].Data.DFT1Sniper.Value < _G.trqpwo then
_G.sniperspin = true

else
_G.sniperspin = false
end
if _G.targetsword == true and _G.targetdef == false and _G.targetmelee == false and _G.targetsnip == false and workspace.UserData["User_"..plrid].Data.DFT1Sword.Value < _G.trqpwo then
_G.swordspin = true

else
_G.swordspin = false
end
if _G.targetsword == false and _G.targetdef == true and _G.targetmelee == true and _G.targetsnip == false and workspace.UserData["User_"..plrid].Data.DFT1Defense.Value < _G.trqpwo and workspace.UserData["User_"..plrid].Data.DFT1Melee.Value < _G.trqpwo then
_G.defmeleespin = true

else
_G.defmeleespin = false
end
if _G.targetsword == false and _G.targetdef == true and _G.targetmelee == false and _G.targetsnip == true and workspace.UserData["User_"..plrid].Data.DFT1Defense.Value < _G.trqpwo and workspace.UserData["User_"..plrid].Data.DFT1Sniper.Value < _G.trqpwo then
_G.defsnipspin = true
else
_G.defsnipspin = false

end
if _G.targetsword == true and _G.targetdef == true and _G.targetmelee == false and _G.targetsnip == false and workspace.UserData["User_"..plrid].Data.DFT1Defense.Value < _G.trqpwo and workspace.UserData["User_"..plrid].Data.DFT1Sword.Value < _G.trqpwo then
_G.defswordspin = true
else
_G.defswordspin = false
end
if _G.targetsword == false and _G.targetdef == false and _G.targetmelee == true and _G.targetsnip == true and workspace.UserData["User_"..plrid].Data.DFT1Melee.Value < _G.trqpwo and workspace.UserData["User_"..plrid].Data.DFT1Sniper.Value < _G.trqpwo then
_G.meleesnipspin = true
else
_G.meleesnipspin = false
end
if _G.targetsword == true and _G.targetdef == false and _G.targetmelee == true and _G.targetsnip == false and workspace.UserData["User_"..plrid].Data.DFT1Melee.Value < _G.trqpwo and workspace.UserData["User_"..plrid].Data.DFT1Sword.Value < _G.trqpwo then
_G.meleeswordspin = true
else
_G.meleeswordspin = false
end
if _G.targetsword == true and _G.targetdef == false and _G.targetmelee == false and _G.targetsnip == true and workspace.UserData["User_"..plrid].Data.DFT1Sniper.Value < _G.trqpwo and workspace.UserData["User_"..plrid].Data.DFT1Sword.Value < _G.trqpwo then
_G.swordsnipspin = true
else
_G.swordsnipspin = false
end
if _G.targetsword == false and _G.targetdef == true and _G.targetmelee == true and _G.targetsnip == true and workspace.UserData["User_"..plrid].Data.DFT1Sniper.Value < _G.trqpwo and workspace.UserData["User_"..plrid].Data.DFT1Defense.Value < _G.trqpwo and workspace.UserData["User_"..plrid].Data.DFT1Melee.Value < _G.trqpwo then
_G.defmeleesnipspin = true
else
_G.defmeleesnipspin = false
end
if _G.targetsword == true and _G.targetdef == true and _G.targetmelee == true and _G.targetsnip == false and workspace.UserData["User_"..plrid].Data.DFT1Sword.Value < _G.trqpwo and workspace.UserData["User_"..plrid].Data.DFT1Defense.Value < _G.trqpwo and workspace.UserData["User_"..plrid].Data.DFT1Melee.Value < _G.trqpwo then
_G.defmeleeswordspin = true
else
_G.defmeleeswordspin = false
end
if _G.targetsword == true and _G.targetdef == false and _G.targetmelee == true and _G.targetsnip == true and workspace.UserData["User_"..plrid].Data.DFT1Sword.Value < _G.trqpwo and workspace.UserData["User_"..plrid].Data.DFT1Sniper.Value < _G.trqpwo and workspace.UserData["User_"..plrid].Data.DFT1Melee.Value < _G.trqpwo then
_G.meleesnipswordspin = true
else
_G.meleesnipswordspin = false
end
if _G.targetsword == true and _G.targetdef == true and _G.targetmelee == false and _G.targetsnip == true and workspace.UserData["User_"..plrid].Data.DFT1Sword.Value < _G.trqpwo and workspace.UserData["User_"..plrid].Data.DFT1Sniper.Value < _G.trqpwo and workspace.UserData["User_"..plrid].Data.DFT1Defense.Value < _G.trqpwo then
_G.defswordsnip = true
else
_G.defswordsnip = false
end
if _G.targetsword == true and _G.targetdef == true and _G.targetmelee == true and _G.targetsnip == true and workspace.UserData["User_"..plrid].Data.DFT1Sword.Value < _G.trqpwo and workspace.UserData["User_"..plrid].Data.DFT1Sniper.Value < _G.trqpwo and workspace.UserData["User_"..plrid].Data.DFT1Melee.Value < _G.trqpwo and workspace.UserData["User_"..plrid].Data.DFT1Defense.Value < _G.trqpwo then
_G.allspin = true
else
_G.allspin = false
end

end)
end
end)

            spawn(function()
            while wait() do
                if _G.quayfirstdf then
                    pcall(function()
if _G.defswordsnip == true then
local args = {
    [1] = "DFT1",
    [2] = _G.keepdef,
    [3] = _G.keepmelee,
    [4] = _G.keepsnip,
    [5] = _G.keepsword,
    [6] = _G.budget
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))

elseif _G.allspin == true then
local args = {
    [1] = "DFT1",
    [2] = _G.keepdef,
    [3] = _G.keepmelee,
    [4] = _G.keepsnip,
    [5] = _G.keepsword,
    [6] = _G.budget
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))

elseif _G.meleesnipswordspin == true then
local args = {
    [1] = "DFT1",
    [2] = _G.keepdef,
    [3] = _G.keepmelee,
    [4] = _G.keepsnip,
    [5] = _G.keepsword,
    [6] = _G.budget
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.defmeleeswordspin == true then
local args = {
    [1] = "DFT1",
    [2] = _G.keepdef,
    [3] = _G.keepmelee,
    [4] = _G.keepsnip,
    [5] = _G.keepsword,
    [6] = _G.budget
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))

elseif _G.defmeleesnipspin == true then
local args = {
    [1] = "DFT1",
    [2] = _G.keepdef,
    [3] = _G.keepmelee,
    [4] = _G.keepsnip,
    [5] = _G.keepsword,
    [6] = _G.budget
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))

elseif _G.swordsnipspin == true then
local args = {
    [1] = "DFT1",
    [2] = _G.keepdef,
    [3] = _G.keepmelee,
    [4] = _G.keepsnip,
    [5] = _G.keepsword,
    [6] = _G.budget
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.meleeswordspin == true then
local args = {
    [1] = "DFT1",
    [2] = _G.keepdef,
    [3] = _G.keepmelee,
    [4] = _G.keepsnip,
    [5] = _G.keepsword,
    [6] = _G.budget
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.meleesnipspin == true then
local args = {
    [1] = "DFT1",
    [2] = _G.keepdef,
    [3] = _G.keepmelee,
    [4] = _G.keepsnip,
    [5] = _G.keepsword,
    [6] = _G.budget
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.defswordspin == true then
local args = {
    [1] = "DFT1",
    [2] = _G.keepdef,
    [3] = _G.keepmelee,
    [4] = _G.keepsnip,
    [5] = _G.keepsword,
    [6] = _G.budget
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.defsnipspin == true then
local args = {
    [1] = "DFT1",
    [2] = _G.keepdef,
    [3] = _G.keepmelee,
    [4] = _G.keepsnip,
    [5] = _G.keepsword,
    [6] = _G.budget
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.defmeleespin == true then
local args = {
    [1] = "DFT1",
    [2] = _G.keepdef,
    [3] = _G.keepmelee,
    [4] = _G.keepsnip,
    [5] = _G.keepsword,
    [6] = _G.budget
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.swordspin == true then
local args = {
    [1] = "DFT1",
    [2] = _G.keepdef,
    [3] = _G.keepmelee,
    [4] = _G.keepsnip,
    [5] = _G.keepsword,
    [6] = _G.budget
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.sniperspin == true then
local args = {
    [1] = "DFT1",
    [2] = _G.keepdef,
    [3] = _G.keepmelee,
    [4] = _G.keepsnip,
    [5] = _G.keepsword,
    [6] = _G.budget
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.meleespin == true then
local args = {
    [1] = "DFT1",
    [2] = _G.keepdef,
    [3] = _G.keepmelee,
    [4] = _G.keepsnip,
    [5] = _G.keepsword,
    [6] = _G.budget
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.defspin == true then
local args = {
    [1] = "DFT1",
    [2] = _G.keepdef,
    [3] = _G.keepmelee,
    [4] = _G.keepsnip,
    [5] = _G.keepsword,
    [6] = _G.budget
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
end
wait(12)
                    end)
                end
            end
            end)


local af2 = Tabs.Affinity:AddSection("Roll Affinity 2st Devil Fruit")

local Lucysecond = Tabs.Affinity:AddSlider("rollaff2sli", {
    Title = "2nd Devil Fruit Point",
    Description = "Choose the point of affinity",
    Default = 2,
    Min = 1,
    Max = 2,
    Rounding = 1,
    Callback = function(treot)
            _G.trqpwo2 = tonumber(treot)
        end
    })

     local wrrrrr2 = Tabs.Affinity:AddDropdown("vqw44", {
        Title = "Lock Affinity (DF2)",
        Description = "You can choose affinities to lock.",
        Values = {"Defense", "Melee", "Sniper", "Sword"},
        Multi = true,
        Default = {""},
    })


    wrrrrr2:OnChanged(function(Valuer2)
_G.keepdef2 = false
_G.keepmelee2 = false
_G.keepsnip2 = false
_G.keepsword2 = false
local Values2 = {"None"}
wait()
        for Valuer2, State in next, Valuer2 do
            table.insert(Values2, Valuer2)
        end
			for _, m in pairs(Values2) do
if string.find(m, "Defense") then
_G.keepdef2 = true
end
if string.find(m, "Melee") then
_G.keepmelee2 = true
end
if string.find(m, "Sniper") then
_G.keepsnip2 = true
end
if string.find(m, "Sword") then
_G.keepsword2 = true
end
			end
end)



    local wwrwwww2 = Tabs.Affinity:AddDropdown("tyumm1z", {
        Title = "Target Affinity (DF2)",
        Description = "You can choose the target affinity.",
        Values = {"Defense", "Melee", "Sniper", "Sword"},
        Multi = true,
        Default = {""},
    })


    wwrwwww2:OnChanged(function(Valuerr2)
_G.targetdef2 = false
_G.targetmelee2 = false
_G.targetsnip2 = false
_G.targetsword2 = false
local Valuess2 = {"None"}
wait()
        for Valuerr2, State in next, Valuerr2 do
            table.insert(Valuess2, Valuerr2)
        end
			for _, r in pairs(Valuess2) do
if string.find(r, "Defense") then
_G.targetdef2 = true
end
if string.find(r, "Melee") then
_G.targetmelee2 = true
end
if string.find(r, "Sniper") then
_G.targetsnip2 = true
end
if string.find(r, "Sword") then
_G.targetsword2 = true
end
			end
end)


local retw2 = Tabs.Affinity:AddDropdown("ccas24ff", {
        Title = "Budget Type",
        Values = {"Cash", "Gems"},
        Multi = false,
        Default = "",
    })


    retw2:OnChanged(function(Valuezx2)
_G.budget2 = Valuezx2
end)

local DF22Toggle = Tabs.Affinity:AddToggle("DF2Toggle", {Title = "Auto Roll Affinity (DF2)", Default = false })
    DF22Toggle:OnChanged(function(tt)

while Options.DF2Toggle.Value do wait()
pcall(function()
if Options.DF2Toggle.Value == true then
_G.quayfirstdf2 = true
else
_G.quayfirstdf2 = false
end
local plrid = tostring(game.Players.LocalPlayer.UserId)
local plr = tostring(game.Players.LocalPlayer)
if _G.targetdef2 == true and _G.targetsnip2 == false and _G.targetmelee2 == false and _G.targetsword2 == false and workspace.UserData["User_"..plrid].Data.DFT2Defense.Value < _G.trqpwo2 then
_G.defspin2 = true
else
_G.defspin2 = false
end
if _G.targetmelee2 == true and _G.targetdef2 == false and _G.targetsword2 == false and _G.targetsnip2 == false and workspace.UserData["User_"..plrid].Data.DFT2Melee.Value < _G.trqpwo2 then
_G.meleespin2 = true
else
_G.meleespin2 = false
end
if _G.targetsnip2 == true and _G.targetdef2 == false and _G.targetmelee2 == false and _G.targetsword2 == false and workspace.UserData["User_"..plrid].Data.DFT2Sniper.Value < _G.trqpwo2 then
_G.sniperspin2 = true

else
_G.sniperspin2 = false
end
if _G.targetsword2 == true and _G.targetdef2 == false and _G.targetmelee2 == false and _G.targetsnip2 == false and workspace.UserData["User_"..plrid].Data.DFT2Sword.Value < _G.trqpwo2 then
_G.swordspin2 = true

else
_G.swordspin2 = false
end
if _G.targetsword2 == false and _G.targetdef2 == true and _G.targetmelee2 == true and _G.targetsnip2 == false and workspace.UserData["User_"..plrid].Data.DFT2Defense.Value < _G.trqpwo2 and workspace.UserData["User_"..plrid].Data.DFT2Melee.Value < _G.trqpwo2 then
_G.defmeleespin2 = true

else
_G.defmeleespin2 = false
end
if _G.targetsword2 == false and _G.targetdef2 == true and _G.targetmelee2 == false and _G.targetsnip2 == true and workspace.UserData["User_"..plrid].Data.DFT2Defense.Value < _G.trqpwo2 and workspace.UserData["User_"..plrid].Data.DFT2Sniper.Value < _G.trqpwo2 then
_G.defsnipspin2 = true
else
_G.defsnipspin2 = false

end
if _G.targetsword2 == true and _G.targetdef2 == true and _G.targetmelee2 == false and _G.targetsnip2 == false and workspace.UserData["User_"..plrid].Data.DFT2Defense.Value < _G.trqpwo2 and workspace.UserData["User_"..plrid].Data.DFT2Sword.Value < _G.trqpwo2 then
_G.defswordspin2 = true
else
_G.defswordspin2 = false
end
if _G.targetsword2 == false and _G.targetdef2 == false and _G.targetmelee2 == true and _G.targetsnip2 == true and workspace.UserData["User_"..plrid].Data.DFT2Melee.Value < _G.trqpwo2 and workspace.UserData["User_"..plrid].Data.DFT2Sniper.Value < _G.trqpwo2 then
_G.meleesnipspin2 = true
else
_G.meleesnipspin2 = false
end
if _G.targetsword2 == true and _G.targetdef2 == false and _G.targetmelee2 == true and _G.targetsnip2 == false and workspace.UserData["User_"..plrid].Data.DFT2Melee.Value < _G.trqpwo2 and workspace.UserData["User_"..plrid].Data.DFT2Sword.Value < _G.trqpwo2 then
_G.meleeswordspin2 = true
else
_G.meleeswordspin2 = false
end
if _G.targetsword2 == true and _G.targetdef2 == false and _G.targetmelee2 == false and _G.targetsnip2 == true and workspace.UserData["User_"..plrid].Data.DFT2Sniper.Value < _G.trqpwo2 and workspace.UserData["User_"..plrid].Data.DFT2Sword.Value < _G.trqpwo2 then
_G.swordsnipspin2 = true
else
_G.swordsnipspin2 = false
end
if _G.targetsword2 == false and _G.targetdef2 == true and _G.targetmelee2 == true and _G.targetsnip2 == true and workspace.UserData["User_"..plrid].Data.DFT2Sniper.Value < _G.trqpwo2 and workspace.UserData["User_"..plrid].Data.DFT2Defense.Value < _G.trqpwo2 and workspace.UserData["User_"..plrid].Data.DFT2Melee.Value < _G.trqpwo2 then
_G.defmeleesnipspin2 = true
else
_G.defmeleesnipspin2 = false
end
if _G.targetsword2 == true and _G.targetdef2 == true and _G.targetmelee2 == true and _G.targetsnip2 == false and workspace.UserData["User_"..plrid].Data.DFT2Sword.Value < _G.trqpwo2 and workspace.UserData["User_"..plrid].Data.DFT2Defense.Value < _G.trqpwo2 and workspace.UserData["User_"..plrid].Data.DFT2Melee.Value < _G.trqpwo2 then
_G.defmeleeswordspin2 = true
else
_G.defmeleeswordspin2 = false
end
if _G.targetsword2 == true and _G.targetdef2 == false and _G.targetmelee2 == true and _G.targetsnip2 == true and workspace.UserData["User_"..plrid].Data.DFT2Sword.Value < _G.trqpwo2 and workspace.UserData["User_"..plrid].Data.DFT2Sniper.Value < _G.trqpwo2 and workspace.UserData["User_"..plrid].Data.DFT2Melee.Value < _G.trqpwo2 then
_G.meleesnipswordspin2 = true
else
_G.meleesnipswordspin2 = false
end
if _G.targetsword2 == true and _G.targetdef2 == true and _G.targetmelee2 == false and _G.targetsnip2 == true and workspace.UserData["User_"..plrid].Data.DFT2Sword.Value < _G.trqpwo2 and workspace.UserData["User_"..plrid].Data.DFT2Sniper.Value < _G.trqpwo2 and workspace.UserData["User_"..plrid].Data.DFT2Defense.Value < _G.trqpwo2 then
_G.defswordsnip2 = true
else
_G.defswordsnip2 = false
end
if _G.targetsword2 == true and _G.targetdef2 == true and _G.targetmelee2 == true and _G.targetsnip2 == true and workspace.UserData["User_"..plrid].Data.DFT2Sword.Value < _G.trqpwo2 and workspace.UserData["User_"..plrid].Data.DFT2Sniper.Value < _G.trqpwo2 and workspace.UserData["User_"..plrid].Data.DFT2Melee.Value < _G.trqpwo2 and workspace.UserData["User_"..plrid].Data.DFT2Defense.Value < _G.trqpwo2 then
_G.allspin2 = true
else
_G.allspin2 = false
end

end)
end
end)

            spawn(function()
            while wait() do
                if _G.quayfirstdf2 then
                    pcall(function()
if _G.defswordsnip2 == true then
local args = {
    [1] = "DFT2",
    [2] = _G.keepdef2,
    [3] = _G.keepmelee2,
    [4] = _G.keepsnip2,
    [5] = _G.keepsword2,
    [6] = _G.budget2
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))

elseif _G.allspin2 == true then
local args = {
    [1] = "DFT2",
    [2] = _G.keepdef2,
    [3] = _G.keepmelee2,
    [4] = _G.keepsnip2,
    [5] = _G.keepsword2,
    [6] = _G.budget2
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))

elseif _G.meleesnipswordspin2 == true then
local args = {
    [1] = "DFT2",
    [2] = _G.keepdef2,
    [3] = _G.keepmelee2,
    [4] = _G.keepsnip2,
    [5] = _G.keepsword2,
    [6] = _G.budget2
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.defmeleeswordspin2 == true then
local args = {
    [1] = "DFT2",
    [2] = _G.keepdef2,
    [3] = _G.keepmelee2,
    [4] = _G.keepsnip2,
    [5] = _G.keepsword2,
    [6] = _G.budget2
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))

elseif _G.defmeleesnipspin2 == true then
local args = {
    [1] = "DFT2",
    [2] = _G.keepdef2,
    [3] = _G.keepmelee2,
    [4] = _G.keepsnip2,
    [5] = _G.keepsword2,
    [6] = _G.budget2
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))

elseif _G.swordsnipspin2 == true then
local args = {
    [1] = "DFT2",
    [2] = _G.keepdef2,
    [3] = _G.keepmelee2,
    [4] = _G.keepsnip2,
    [5] = _G.keepsword2,
    [6] = _G.budget2
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.meleeswordspin2 == true then
local args = {
    [1] = "DFT2",
    [2] = _G.keepdef2,
    [3] = _G.keepmelee2,
    [4] = _G.keepsnip2,
    [5] = _G.keepsword2,
    [6] = _G.budget2
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.meleesnipspin2 == true then
local args = {
    [1] = "DFT2",
    [2] = _G.keepdef2,
    [3] = _G.keepmelee2,
    [4] = _G.keepsnip2,
    [5] = _G.keepsword2,
    [6] = _G.budget2
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.defswordspin2 == true then
local args = {
    [1] = "DFT2",
    [2] = _G.keepdef2,
    [3] = _G.keepmelee2,
    [4] = _G.keepsnip2,
    [5] = _G.keepsword2,
    [6] = _G.budget2
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.defsnipspin2 == true then
local args = {
    [1] = "DFT2",
    [2] = _G.keepdef2,
    [3] = _G.keepmelee2,
    [4] = _G.keepsnip2,
    [5] = _G.keepsword2,
    [6] = _G.budget2
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.defmeleespin2 == true then
local args = {
    [1] = "DFT2",
    [2] = _G.keepdef2,
    [3] = _G.keepmelee2,
    [4] = _G.keepsnip2,
    [5] = _G.keepsword2,
    [6] = _G.budget2
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.swordspin2 == true then
local args = {
    [1] = "DFT2",
    [2] = _G.keepdef2,
    [3] = _G.keepmelee2,
    [4] = _G.keepsnip2,
    [5] = _G.keepsword2,
    [6] = _G.budget2
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.sniperspin2 == true then
local args = {
    [1] = "DFT2",
    [2] = _G.keepdef2,
    [3] = _G.keepmelee2,
    [4] = _G.keepsnip2,
    [5] = _G.keepsword2,
    [6] = _G.budget2
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.meleespin2 == true then
local args = {
    [1] = "DFT2",
    [2] = _G.keepdef2,
    [3] = _G.keepmelee2,
    [4] = _G.keepsnip2,
    [5] = _G.keepsword2,
    [6] = _G.budget2
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
elseif _G.defspin2 == true then
local args = {
    [1] = "DFT2",
    [2] = _G.keepdef2,
    [3] = _G.keepmelee2,
    [4] = _G.keepsnip2,
    [5] = _G.keepsword2,
    [6] = _G.budget2
}

workspace:WaitForChild("Merchants"):WaitForChild("AffinityMerchant"):WaitForChild("Clickable"):WaitForChild("Retum"):FireServer(unpack(args))
end
wait(12)
                    end)
                end
            end
            end)

spawn(function()
	while wait() do
		if _G.quayfirstdf2 or _G.quayfirstdf then
                	pcall(function()
local plrid = tostring(game.Players.LocalPlayer.UserId)
local plr = tostring(game.Players.LocalPlayer)
if game.Players[""..plr].PlayerGui.Challenges.Frame.Frame.ChallengesFrame.ScrollingFrame["Challenge_12"].Claim.AutoButtonColor == true then
workspace.UserData["User_"..plrid].ChallengesRemote:FireServer("Claim","Challenge12")
end
			end)		
		end
	end
end)





-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

local c1 = Tabs.Affinity:AddSection("                                                -----")
local c2 = Tabs.Affinity:AddSection("                                                -----")
local c3 = Tabs.Farm:AddSection("                                                -----")
local c4 = Tabs.Main:AddSection("                                                -----")
local c5 = Tabs.Main:AddSection("                                                -----")
local c6 = Tabs.Farm:AddSection("                                                -----")
local c7 = Tabs.Server:AddSection("                                                -----")
local c8 = Tabs.Server:AddSection("                                                -----")
local c9 = Tabs.Fruit:AddSection("                                                -----")
local c10 = Tabs.Fruit:AddSection("                                                -----")
local c11 = Tabs.Teleport:AddSection("                                                -----")
local c12 = Tabs.Teleport:AddSection("                                                -----")
local c13 = Tabs.Player:AddSection("                                                -----")
local c14 = Tabs.Player:AddSection("                                                -----")
local c15 = Tabs.Automatic:AddSection("                                                -----")
local c16 = Tabs.Automatic:AddSection("                                                -----")
local c17 = Tabs.Webhook:AddSection("                                                -----")
local c18 = Tabs.Webhook:AddSection("                                                -----")
local c19 = Tabs.Misc:AddSection("                                                -----")
local c20 = Tabs.Misc:AddSection("                                                -----")
local c21 = Tabs.Settings:AddSection("                                                -----")
local c22 = Tabs.Settings:AddSection("                                                -----")
local c23 = Tabs.Haki:AddSection("                                                -----")
local c24 = Tabs.Haki:AddSection("                                                -----")
local c25 = Tabs.Shop:AddSection("                                                -----")
local c26 = Tabs.Shop:AddSection("                                                -----")
local c27 = Tabs.PVP:AddSection("                                                -----")
local c28 = Tabs.PVP:AddSection("                                                -----")
local c29 = Tabs.Gems:AddSection("                                                -----")
local c30 = Tabs.Gems:AddSection("                                                -----")
local c31 = Tabs.Info:AddSection("                                                -----")
local c32 = Tabs.Info:AddSection("                                                -----")
local c33 = Tabs.Weapon:AddSection("                                                -----")
local c34 = Tabs.Weapon:AddSection("                                                -----")

Window:SelectTab(1)

Fluent:Notify({
    Title = "Saluna With Love ♥",
    Content = "Have a nice day!",
    Duration = 15
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
--------
local BBB = Instance.new("ScreenGui")
BBB.Name = "BBB"
BBB.Parent = game.CoreGui

local hideUI = Instance.new("ImageButton")
hideUI.Name = "hideUI"
hideUI.Parent = game.CoreGui.BBB
hideUI.BackgroundColor3 = Color3.fromRGB(0, 255, 127)
hideUI.BackgroundTransparency = 1
hideUI.ClipsDescendants = true
hideUI.Position = UDim2.new(0.005, 1, 0.155, 1)
hideUI.Size = UDim2.new(0.078, 0, 0.136, 0)
hideUI.Image = "http://www.roblox.com/asset/?id=9434974330"
hideUI.MouseButton1Up:Connect(function()
game:GetService("VirtualInputManager"):SendKeyEvent(true,"F2",false,game.Players.LocalPlayer.Character.HumanoidRootPart)
wait(0.1)
game:GetService("VirtualInputManager"):SendKeyEvent(false,"F2",false,game.Players.LocalPlayer.Character.HumanoidRootPart)
end)

local hideUICorner = Instance.new("UICorner")
hideUICorner.Parent = game.CoreGui.BBB.hideUI
hideUICorner.CornerRadius = UDim.new(1,0)


local UIS = game:GetService('UserInputService')
local frame = game.CoreGui.BBB.hideUI
local dragToggle = nil
local dragSpeed = 0.12
local dragStart = nil
local startPos = nil

local function updateInput(input)
 local delta = input.Position - dragStart
 local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
  startPos.Y.Scale, startPos.Y.Offset + delta.Y)
 game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
end

frame.InputBegan:Connect(function(input)
 if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
  dragToggle = true
  dragStart = input.Position
  startPos = frame.Position
  input.Changed:Connect(function()
   if input.UserInputState == Enum.UserInputState.End then
    dragToggle = false
   end
  end)
 end
end)

UIS.InputChanged:Connect(function(input)
 if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
  if dragToggle then
   updateInput(input)
  end
 end
end)

else
local SALUNAUI = Instance.new("ScreenGui")
SALUNAUI.Name = "SALUNAUI"
SALUNAUI.Parent = game.CoreGui

local SSS = Instance.new("Frame")
SSS.Name = "SSS"
SSS.Parent = game.CoreGui.SALUNAUI
SSS.BackgroundTransparency = 1
SSS.Size = UDim2.new(1, 0, 1, 0)

local SALUNAFRAME = Instance.new("Frame")
SALUNAFRAME.Name = "SALUNAFRAME"
SALUNAFRAME.Parent = game.CoreGui.SALUNAUI.SSS
SALUNAFRAME.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
SALUNAFRAME.BackgroundTransparency = 0.2
SALUNAFRAME.ClipsDescendants = true
SALUNAFRAME.Position = UDim2.new(0.183, 1, 0.119, 1)
SALUNAFRAME.Size = UDim2.new(0.631, 0, 0.756, 0)

local SALUNAFRAMEcorner = Instance.new("UICorner")
SALUNAFRAMEcorner.Name = "SALUNAFRAMEcorner"
SALUNAFRAMEcorner.Parent = game.CoreGui.SALUNAUI.SSS.SALUNAFRAME
SALUNAFRAMEcorner.CornerRadius = UDim.new(0.1,0)

local Cancel = Instance.new("ImageButton")
Cancel.Parent = game.CoreGui.SALUNAUI.SSS
Cancel.Name = "Cancel"
Cancel.BackgroundTransparency = 1
Cancel.Position = UDim2.new(0.814, 0, 0.06, 0)
Cancel.Size = UDim2.new(0.048, 0, 0.1, 0)
Cancel.Image = "http://www.roblox.com/asset/?id=7729954373"

Cancel.MouseButton1Up:Connect(function()
game.CoreGui.SALUNAUI:Destroy()
end)

local HWIDGet = Instance.new("TextButton")
HWIDGet.Parent = game.CoreGui.SALUNAUI.SSS
HWIDGet.Name = "HWIDGet"
HWIDGet.BackgroundColor3 = Color3.fromRGB(0, 255, 127)
HWIDGet.BackgroundTransparency = 0.1
HWIDGet.Position = UDim2.new(0.014, 0, 0.309, 0)
HWIDGet.Size = UDim2.new(0.145, 0, 0.2, 0)
HWIDGet.TextColor3 = Color3.fromRGB(0, 0, 0)
HWIDGet.Text = "GET YOUR HWID"
HWIDGet.TextScaled = true
HWIDGet.FontFace.Bold = true
HWIDGet.FontFace = Font.fromName("Merriweather")

HWIDGet.MouseButton1Up:Connect(function()
everyClipboard = toclipboard
function toClipboard(txt)
    if everyClipboard then
        everyClipboard(tostring(txt))
    end
end
local gethwid = 
game:GetService("RbxAnalyticsService"):GetClientId()
toClipboard(gethwid)
end)

local Invalid = Instance.new("TextLabel")
Invalid.Parent = game.CoreGui.SALUNAUI.SSS
Invalid.Name = "Invalid"
Invalid.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Invalid.BackgroundTransparency = 0.2
Invalid.Position = UDim2.new(0.216, 0, 0.011, 0)
Invalid.Size = UDim2.new(0.564, 0, 0.102, 0)
Invalid.TextColor3 = Color3.fromRGB(255, 0, 0)
Invalid.Text = "YOUR EXCUTOR ID IS INVALID!"
Invalid.TextScaled = true
Invalid.FontFace.Bold = true
Invalid.FontFace = Font.fromName("Merriweather")

local Owner = Instance.new("ImageLabel")
Owner.Parent = game.CoreGui.SALUNAUI.SSS.SALUNAFRAME
Owner.Name = "Owner"
Owner.BackgroundTransparency = 1
Owner.Position = UDim2.new(0.638, 0, 0.383, 0)
Owner.Size = UDim2.new(0.276, 0, 0.518, 0)
Owner.Image = "http://www.roblox.com/asset/?id=18274868035"

local OwnerCorner = Instance.new("UICorner")
OwnerCorner.Name = "OwnerCorner"
OwnerCorner.Parent = game.CoreGui.SALUNAUI.SSS.SALUNAFRAME.Owner
OwnerCorner.CornerRadius = UDim.new(0.1,0)


local DiscordImage = Instance.new("ImageLabel")
DiscordImage.Parent = game.CoreGui.SALUNAUI.SSS.SALUNAFRAME
DiscordImage.Name = "DiscordImage"
DiscordImage.BackgroundTransparency = 1
DiscordImage.Position = UDim2.new(0.397, 0, 0.403, 0)
DiscordImage.Size = UDim2.new(0.098, 0, 0.148, 0)
DiscordImage.Image = "http://www.roblox.com/asset/?id=17056354120"

local DiscordCorner = Instance.new("UICorner")
DiscordCorner.Name = "DiscordCorner"
DiscordCorner.Parent = game.CoreGui.SALUNAUI.SSS.SALUNAFRAME.DiscordImage
DiscordCorner.CornerRadius = UDim.new(1,0)

local FacebookImage = Instance.new("ImageLabel")
FacebookImage.Parent = game.CoreGui.SALUNAUI.SSS.SALUNAFRAME
FacebookImage.Name = "FacebookImage"
FacebookImage.BackgroundTransparency = 1
FacebookImage.Position = UDim2.new(0.397, 0, 0.71, 0)
FacebookImage.Size = UDim2.new(0.098, 0, 0.148, 0)
FacebookImage.Image = "http://www.roblox.com/asset/?id=5265119620"

local FacebookCorner = Instance.new("UICorner")
FacebookCorner.Name = "FacebookCorner"
FacebookCorner.Parent = game.CoreGui.SALUNAUI.SSS.SALUNAFRAME.FacebookImage
FacebookCorner.CornerRadius = UDim.new(0.2,0)


local Tieude = Instance.new("TextLabel")
Tieude.Parent = game.CoreGui.SALUNAUI.SSS.SALUNAFRAME
Tieude.Name = "Tieude"
Tieude.BackgroundColor3 = Color3.fromRGB(0, 255, 127)
Tieude.Position = UDim2.new(0.081, 0, 0.103, 0)
Tieude.Size = UDim2.new(0.833, 0, 0.177, 0)
Tieude.Text = "Welcome To Saluna Hub"
Tieude.TextScaled = true
Tieude.FontFace.Bold = true
Tieude.FontFace = Font.fromName("Merriweather")

local TieudeCorner = Instance.new("UICorner")
TieudeCorner.Name = "TieudeCorner"
TieudeCorner.Parent = game.CoreGui.SALUNAUI.SSS.SALUNAFRAME.Tieude
TieudeCorner.CornerRadius = UDim.new(0,15)

local SALUNA = Instance.new("TextLabel")
SALUNA.Parent = game.CoreGui.SALUNAUI.SSS.SALUNAFRAME
SALUNA.Name = "SALUNA"
SALUNA.BackgroundTransparency = 1
SALUNA.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
SALUNA.Position = UDim2.new(0.519, 0, 0.371, 0)
SALUNA.Size = UDim2.new(0.119, 0, 0.537, 0)
SALUNA.Text = [[S
A
L
U
N
A]]
SALUNA.TextColor3 = Color3.fromRGB(255, 255, 0)
SALUNA.TextScaled = true
SALUNA.FontFace.Bold = true
SALUNA.FontFace = Font.fromName("Merriweather")

local DISCORD = Instance.new("TextButton")
DISCORD.Name = "DISCORD"
DISCORD.Parent = game.CoreGui.SALUNAUI.SSS.SALUNAFRAME
DISCORD.BackgroundColor3 = Color3.fromRGB(0, 255, 127)
DISCORD.Position = UDim2.new(0.081, 0, 0.384, 0)
DISCORD.Size = UDim2.new(0.3, 0, 0.21, 0)
DISCORD.Text = "Discord"
DISCORD.TextScaled = true
DISCORD.FontFace.Bold = true
DISCORD.FontFace = Font.fromName("Merriweather")

DISCORD.MouseButton1Up:Connect(function()
everyClipboard = toclipboard
function toClipboard(txt)
    if everyClipboard then
        everyClipboard(tostring(txt))
    end
end
toClipboard("https://discord.gg/ecpbhm8G3w")
end)

local DisCorner = Instance.new("UICorner")
DisCorner.Name = "DisCorner"
DisCorner.Parent = game.CoreGui.SALUNAUI.SSS.SALUNAFRAME.DISCORD
DisCorner.CornerRadius = UDim.new(0,13)

local FACEBOOK = Instance.new("TextButton")
FACEBOOK.Name = "FACEBOOK"
FACEBOOK.Parent = game.CoreGui.SALUNAUI.SSS.SALUNAFRAME
FACEBOOK.BackgroundColor3 = Color3.fromRGB(0, 255, 127)
FACEBOOK.Position = UDim2.new(0.081, 0, 0.691, 0)
FACEBOOK.Size = UDim2.new(0.3, 0, 0.21, 0)
FACEBOOK.Text = "Facebook"
FACEBOOK.TextScaled = true
FACEBOOK.FontFace.Bold = true
FACEBOOK.FontFace = Font.fromName("Merriweather")

FACEBOOK.MouseButton1Up:Connect(function()
everyClipboard = toclipboard
function toClipboard(txt)
    if everyClipboard then
        everyClipboard(tostring(txt))
    end
end
toClipboard("https://www.facebook.com/IrenkissWantPeace/")
end)

local FBCorner = Instance.new("UICorner")
FBCorner.Name = "FBCorner"
FBCorner.Parent = game.CoreGui.SALUNAUI.SSS.SALUNAFRAME.FACEBOOK
FBCorner.CornerRadius = UDim.new(0,13)
end
end
