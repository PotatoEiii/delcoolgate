local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Window = Fluent:CreateWindow({
    Title = "SALUNA VIP â™¥",
    SubTitle = "		Made by Saluna",
    TabWidth = 100,
    Size = UDim2.fromOffset(475, 340),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.F2 -- Used when theres no MinimizeKeybind
})
 Tabs = {
    Server = Window:AddTab({ Title = "Server", Icon = "rbxassetid://7539983773" })
}
local Options = Fluent.Options
local ServerRiel = {}
local PlaceID = game.PlaceId
local foundAnything = ""
local HttpService = game:GetService("HttpService")
local PlaceID = game.PlaceId
local foundAnything = ""
local HttpService = game:GetService("HttpService")

local url = 'https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'
if foundAnything ~= "" then
    url = url .. '&cursor=' .. foundAnything
end

-- Correct handling of pcall
local success, Site = pcall(function()
    return HttpService:JSONDecode(game:HttpGet(url))
end)

-- Only proceed if the pcall was successful
if success and Site then
    -- Handle pagination
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" then
        foundAnything = Site.nextPageCursor
    else
        foundAnything = ""
    end

    -- Iterate over servers and collect data
    for _, server in ipairs(Site.data) do
        if server.playing < server.maxPlayers then
            table.insert(ServerRiel, server.id.." \nPing("..server.ping..") - ".."FPS("..server.fps..") - ".."Players("..server.playing.."/"..server.maxPlayers..")")
        end
    end
end

SVLISTED = Tabs.Server:AddDropdown("SVLISTED", {
    Title = "Choose Server",
    Description = "Choose Server From The List",
    Values = ServerRiel,
    Multi = false,
    Default = "",
})

SVLISTED:OnChanged(function(hellozxw)
pcall(function()
hmm = tostring(hellozxw)
game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, string.match(hmm, "^(.-) "), game.Players.LocalPlayer)
end)
end)

spawn(function()
while wait(1) do
pcall(function()
table.clear(ServerRiel)
local PlaceID = game.PlaceId
local foundAnything = ""
local HttpService = game:GetService("HttpService")

local url = 'https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'
if foundAnything ~= "" then
    url = url .. '&cursor=' .. foundAnything
end

-- Correct handling of pcall
local success, Site = pcall(function()
    return HttpService:JSONDecode(game:HttpGet(url))
end)

-- Only proceed if the pcall was successful
if success and Site then
    -- Handle pagination
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" then
        foundAnything = Site.nextPageCursor
    else
        foundAnything = ""
    end

    -- Iterate over servers and collect data
    for _, server in ipairs(Site.data) do
        if server.playing < server.maxPlayers then
            table.insert(ServerRiel, server.id.." \nPing("..server.ping..") - ".."FPS("..server.fps..") - ".."Players("..server.playing.."/"..server.maxPlayers..")")
        end
    end

SVLISTED:SetValues(ServerRiel)
end
end)
end
end)
